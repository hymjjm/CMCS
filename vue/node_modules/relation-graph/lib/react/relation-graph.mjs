(function(){ try {var elementStyle = document.createElement('style'); elementStyle.appendChild(document.createTextNode("@charset \"UTF-8\";.relation-graph{box-sizing:border-box;position:relative}.relation-graph .rel-map svg.rg-icon{height:100%;width:100%}.relation-graph .rel-lines-svg{overflow:visible;width:10px;height:10px;position:absolute;left:0px;top:0px}.relation-graph .rel-linediv{overflow:visible;position:absolute;z-index:40;width:100%;top:0px;left:0px;--stroke: url(#lineStyle);--markerEnd: url(#arrow-default);--markerStart: url(#start-arrow-default);--markerEndChecked: url(#arrow-checked);--markerStartChecked: url(#start-arrow-checked)}.relation-graph .rel-linediv svg{overflow:visible}.relation-graph .rel-linediv-el-lines{z-index:60}.relation-graph .rel-lines-svg-el-lines{overflow:visible;width:10px;height:10px;position:absolute;left:0px;top:0px}.relation-graph .rel-map{background-color:#fff;overflow:hidden;cursor:default;user-select:none;opacity:.01;transition:none}.relation-graph .rel-map-ready{opacity:1;transition:opacity .5s ease}.relation-graph .rel-map-background-norepeat{background-repeat:no-repeat;background-position:right bottom}.relation-graph .rel-nodediv-for-webkit{position:absolute;width:100%;top:0px;left:0px;z-index:50}.relation-graph .rel-map-canvas{position:relative;top:0px;left:0px;border:0px;z-index:3;overflow:visible}.relation-graph .rel-canvas-slot{overflow:visible}.relation-graph .rel-canvas-slot-behind{z-index:30;overflow:visible;position:absolute;top:0px;left:0px}.relation-graph .rel-canvas-slot-above{z-index:70;overflow:visible;position:absolute;top:0px;left:0px}.relation-graph .rel-map ::v-deep img{-webkit-user-drag:none;-webkit-user-select:none}.relation-graph .c-rg-line-text{fill:#888;font-size:12px;paint-order:stroke}.relation-graph .c-rg-line-text-checked{stroke:#fd8b374d;stroke-width:2}.relation-graph .c-rg-line{fill-rule:nonzero;stroke-linecap:round}.relation-graph .rg-line-dashtype-1{stroke-dasharray:2,2,2;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel}.relation-graph .rg-line-dashtype-2{stroke-dasharray:5,5,5;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel}.relation-graph .rg-line-dashtype-3{stroke-dasharray:9,9,9;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel}.relation-graph .rg-line-dashtype-4{stroke-dasharray:5,5,15;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel}@keyframes ACTRGLineChecked{0%{stroke-dashoffset:352px;stroke-dasharray:5,5,5}50%{stroke-dasharray:5,5,5;stroke-dashoffset:3px}to{stroke-dashoffset:352px;stroke-dasharray:5,5,5}}@keyframes rg-line-anm2{0%{stroke-dashoffset:0;stroke-dasharray:4,4,4}to{stroke-dashoffset:10px;stroke-dasharray:20,20,20}}@keyframes rg-line-anm3{0%{stroke-opacity:1}50%{stroke-opacity:.2}to{stroke-opacity:1}}@keyframes rg-line-anm4{0%{stroke-dasharray:0,100%}to{stroke-dasharray:100%,0}}.relation-graph .rg-line-anm-1{animation:ACTRGLineChecked 10s infinite}.relation-graph .rg-line-anm-2{animation:rg-line-anm2 3s infinite}.relation-graph .rg-line-anm-3{animation:rg-line-anm3 1s infinite}.relation-graph .rg-line-anm-4{animation:rg-line-anm4 3s infinite}.relation-graph .c-rg-line-checked{z-index:100}.relation-graph .c-rg-line-checked-bg{stroke:#fd8b374d;stroke-linecap:round}@keyframes deform1{0%{stroke-dashoffset:0}to{stroke-dashoffset:100%}}.relation-graph .rg-icon{width:19px;height:19px;vertical-align:0px;fill:currentColor;overflow:hidden}.relation-graph .el-icon-remove,.relation-graph .el-icon-circle-plus{cursor:pointer}.relation-graph .relation-graph-node{position:absolute}.relation-graph .rel-node-peel{clear:both;padding:8px;position:absolute;font-size:14px}.relation-graph .rel-node-peel-checked{z-index:100}.relation-graph .rel-node{text-align:center}.relation-graph .rg-center-items{display:flex;place-items:center}.relation-graph .rel-node-shape-0{width:80px;height:80px;border-radius:50%}.relation-graph .rel-node-shape-1{border-radius:5px}.relation-graph .c-node-text{height:100%;width:100%;display:flex;align-items:center;justify-content:center}.relation-graph .rel-node-shape-1 .c-node-text{padding-left:5px;padding-right:5px}.relation-graph .rel-node-type-button{border-radius:25px;color:#00f;cursor:pointer}.relation-graph .rel-node-checked{transition:background-color .2s ease,outline .2s ease,color .2s ease,-webkit-box-shadow .2s ease;box-shadow:0 0 0 8px #fd8b374d}.relation-graph .rel-node-dragging{z-index:400}.relation-graph .rel-node-selected{border:#025098 solid 2px;border-radius:5px}.relation-graph .rel-node-flashing{animation:ACTRGNodeFlashing 2s infinite}.relation-graph .rel-node-vtree-2{transform-origin:0 0;transform:rotate(30deg) translate(0)}.relation-graph .rel-node-vtree{width:130px;height:45px;text-align:left}.relation-graph .c-btn-open-close{position:absolute;height:100%;width:19px;display:flex;align-items:center;justify-content:center;user-select:none;pointer-events:none;cursor:pointer}.relation-graph .c-btn-open-close span{width:19px;height:19px;display:inline-block;text-align:center;border-radius:15px;color:#fff;cursor:pointer;font-size:19px;line-height:16px;background-size:100% 100%;pointer-events:all}.relation-graph .c-expanded{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310217820%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223373%22%20width=%2232%22%20height=%2232%22%3E%3Cpath%20d=%22M853.333333%20480H544V170.666667c0-17.066667-14.933333-32-32-32s-32%2014.933333-32%2032v309.333333H170.666667c-17.066667%200-32%2014.933333-32%2032s14.933333%2032%2032%2032h309.333333V853.333333c0%2017.066667%2014.933333%2032%2032%2032s32-14.933333%2032-32V544H853.333333c17.066667%200%2032-14.933333%2032-32s-14.933333-32-32-32z%22%20p-id=%223374%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.relation-graph .c-collapsed{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310454619%22%20class=%22icon%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223662%22%20width=%22128%22%20height=%22128%22%3E%3Cpath%20d=%22M853.333333%20554.666667H170.666667c-23.466667%200-42.666667-19.2-42.666667-42.666667s19.2-42.666667%2042.666667-42.666667h682.666666c23.466667%200%2042.666667%2019.2%2042.666667%2042.666667s-19.2%2042.666667-42.666667%2042.666667z%22%20p-id=%223663%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.relation-graph .c-expand-positon-left{margin-top:-8px;margin-left:-25px}.relation-graph .c-expand-positon-right{height:100%;width:100%;justify-content:center}.relation-graph .c-expand-positon-right span{margin-top:-18px;margin-right:-18px;margin-left:100%}.relation-graph .c-expand-positon-bottom{height:100%;width:100%;margin-top:7px;margin-left:-8px;align-items:flex-end;justify-content:center}.relation-graph .c-expand-positon-top{height:18px;width:100%;margin-top:-20px;margin-left:-6px;align-items:flex-end;justify-content:center}@keyframes ACTRGNodeInit{0%{box-shadow:0 0 15px #fd8b37}50%{box-shadow:0 0 1px #2e4e8f}to{box-shadow:0 0 15px #fd8b37}to{box-shadow:0 0 15px #fd8b37}}@keyframes ACTRGNodeFlashing{0%{box-shadow:0 0 15px #fd8b37}40%{box-shadow:0 0 1px #2e4e8f}70%{box-shadow:0 0 8px #fd8b37}to{box-shadow:0 0 #fd8b37}}.relation-graph .rel-diy-node{padding:0}.relation-graph .c-setting-panel{--height: 300px;--width: 200px;width:300px;height:200px;position:absolute;margin-left:10px;margin-top:5px;font-size:12px;color:#3a5bb2;padding:60px 10px 10px;overflow:hidden;box-shadow:0 0 5px #999;border-radius:5px;z-index:1000;background-color:#fff;border:#999999 solid 1px}.relation-graph .c-setting-panel-button{height:35px;width:35px;font-size:8px;line-height:35px;text-align:center;border-radius:50%;position:absolute;margin-left:25px;margin-top:20px;background-color:#3a5bb2;color:#fff;cursor:pointer;z-index:1001;box-shadow:0 0 8px #999}.relation-graph .c-setting-panel-button:hover{box-shadow:0 0 20px #ffa20a;border:#ffffff solid 1px;color:#ffa20a;-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:flashButton 2s infinite}.relation-graph .c-fixedLayout{position:fixed;top:125px}@keyframes flashButton{0%{box-shadow:0 0 8px #2e4e8f}30%{box-shadow:0 0 20px #ffa20a}to{box-shadow:0 0 8px #2e4e8f}}.relation-graph .c-debug-tools-row{text-align:left}.relation-graph .rel-operate{position:absolute;top:0px;left:0px;width:100%;height:100%;z-index:180}.relation-graph .rel-selection{position:absolute;background-color:#0e7a7b4d;border:rgb(14,122,123) solid 1px}.relation-graph .rel-graph-loading{position:absolute;z-index:200;left:0px;top:0px;height:100%;width:100%;background-color:#fff}.relation-graph .rel-graph-loading .c-graph-loading-icon{width:16px;height:16px;vertical-align:-3px;fill:currentColor;overflow:hidden;animation:turn 1s linear infinite}.relation-graph .rel-graph-loading .rel-graph-loading-message{position:absolute;width:200px;height:30px;line-height:30px;text-align:center;left:calc((100% - 200px)/2);top:calc((100% - 30px)/2);border-radius:5px;background-color:#00000080;color:#fff}.relation-graph .rel-graph-loading-hide{display:none}@keyframes slowHide{0%{opacity:1}to{opacity:0;display:none}}.relation-graph .rel-easy-view{overflow:visible;height:100%;width:100%;background-color:transparent;position:absolute;left:0px;top:0px}.relation-graph .rel-easy-view canvas{opacity:0}.relation-graph .rel-easy-view-active canvas{opacity:1}.relation-graph .rel-toolbar{position:absolute;z-index:300;background-color:#dcdcdc33;color:#999;box-shadow:0 0 2px #ccc;box-sizing:border-box;border-radius:5px;padding:3px}.relation-graph .rel-toolbar .rg-icon{flex-grow:1;width:16px;height:16px;fill:currentColor;overflow:hidden}.relation-graph .rel-toolbar .c-mb-button svg{margin:auto}.relation-graph .rel-toolbar .c-mb-button-on{color:#2e74b5}.relation-graph .rel-toolbar .c-mb-button:hover{background-color:#dcdcdc80}.relation-graph .rel-toolbar .c-loading-icon{animation:turn 1s linear infinite}@keyframes turn{0%{-webkit-transform:rotate(0deg)}25%{-webkit-transform:rotate(90deg)}50%{-webkit-transform:rotate(180deg)}75%{-webkit-transform:rotate(270deg)}to{-webkit-transform:rotate(360deg)}}.relation-graph .rel-toolbar .c-current-zoom{margin-top:0;height:20px;color:#262626;font-size:10px;text-align:center;line-height:20px;border-radius:3px}.relation-graph .rel-toolbar .c-mb-button{height:40px;margin-top:0;opacity:1;text-align:center;padding-top:3px;cursor:pointer;font-size:18px;box-sizing:border-box;line-height:21px;display:flex;align-items:center;justify-items:center;border-radius:3px}.relation-graph .rel-toolbar-v{width:45px}.relation-graph .rel-toolbar-h{height:45px}.relation-graph .rel-toolbar-h .c-mb-button{width:40px;height:100%;float:left}.relation-graph .rel-toolbar-h .c-current-zoom{width:40px;height:100%;float:left;line-height:40px}.relation-graph .rel-toolbar-h-right{right:15px}.relation-graph .rel-toolbar-h-left{left:15px}.relation-graph .rel-toolbar-h-center{left:calc((100% - 260px)/2)}.relation-graph .rel-toolbar-v-top{top:15px}.relation-graph .rel-toolbar-v-bottom{bottom:15px}.relation-graph .rel-toolbar-v-center{top:calc((100% - 260px)/2)}")); document.head.appendChild(elementStyle);} catch(e) {console.error('vite-plugin-css-injected-by-js', e);} })();var jt = Object.defineProperty;
var Gt = (s, n, e) => n in s ? jt(s, n, { enumerable: !0, configurable: !0, writable: !0, value: e }) : s[n] = e;
var C = (s, n, e) => (Gt(s, typeof n != "symbol" ? n + "" : n, e), e);
import Ee, { createContext as mt, useContext as J, useState as vt, useRef as Se, useEffect as Oe, useImperativeHandle as Ut } from "react";
import * as Yt from "screenfull";
import de from "screenfull";
import * as Xt from "html2canvas";
import Zt from "html2canvas";
var $e = { exports: {} }, be = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var je, ft;
function _t() {
  if (ft)
    return je;
  ft = 1;
  var s = Object.getOwnPropertySymbols, n = Object.prototype.hasOwnProperty, e = Object.prototype.propertyIsEnumerable;
  function t(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var a = {}, c = 0; c < 10; c++)
        a["_" + String.fromCharCode(c)] = c;
      var l = Object.getOwnPropertyNames(a).map(function(h) {
        return a[h];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var r = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(h) {
        r[h] = h;
      }), Object.keys(Object.assign({}, r)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return je = o() ? Object.assign : function(i, a) {
    for (var c, l = t(i), r, h = 1; h < arguments.length; h++) {
      c = Object(arguments[h]);
      for (var d in c)
        n.call(c, d) && (l[d] = c[d]);
      if (s) {
        r = s(c);
        for (var f = 0; f < r.length; f++)
          e.call(c, r[f]) && (l[r[f]] = c[r[f]]);
      }
    }
    return l;
  }, je;
}
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var dt;
function Jt() {
  if (dt)
    return be;
  dt = 1, _t();
  var s = Ee, n = 60103;
  if (be.Fragment = 60107, typeof Symbol == "function" && Symbol.for) {
    var e = Symbol.for;
    n = e("react.element"), be.Fragment = e("react.fragment");
  }
  var t = s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = Object.prototype.hasOwnProperty, i = { key: !0, ref: !0, __self: !0, __source: !0 };
  function a(c, l, r) {
    var h, d = {}, f = null, g = null;
    r !== void 0 && (f = "" + r), l.key !== void 0 && (f = "" + l.key), l.ref !== void 0 && (g = l.ref);
    for (h in l)
      o.call(l, h) && !i.hasOwnProperty(h) && (d[h] = l[h]);
    if (c && c.defaultProps)
      for (h in l = c.defaultProps, l)
        d[h] === void 0 && (d[h] = l[h]);
    return { $$typeof: n, type: c, key: f, ref: g, props: d, _owner: t.current };
  }
  return be.jsx = a, be.jsxs = a, be;
}
var Ge = {};
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ut;
function qt() {
  return ut || (ut = 1, function(s) {
    process.env.NODE_ENV !== "production" && function() {
      var n = Ee, e = _t(), t = 60103, o = 60106;
      s.Fragment = 60107;
      var i = 60108, a = 60114, c = 60109, l = 60110, r = 60112, h = 60113, d = 60120, f = 60115, g = 60116, y = 60121, v = 60122, w = 60117, b = 60129, P = 60131;
      if (typeof Symbol == "function" && Symbol.for) {
        var O = Symbol.for;
        t = O("react.element"), o = O("react.portal"), s.Fragment = O("react.fragment"), i = O("react.strict_mode"), a = O("react.profiler"), c = O("react.provider"), l = O("react.context"), r = O("react.forward_ref"), h = O("react.suspense"), d = O("react.suspense_list"), f = O("react.memo"), g = O("react.lazy"), y = O("react.block"), v = O("react.server.block"), w = O("react.fundamental"), O("react.scope"), O("react.opaque.id"), b = O("react.debug_trace_mode"), O("react.offscreen"), P = O("react.legacy_hidden");
      }
      var E = typeof Symbol == "function" && Symbol.iterator, F = "@@iterator";
      function V(p) {
        if (p === null || typeof p != "object")
          return null;
        var _ = E && p[E] || p[F];
        return typeof _ == "function" ? _ : null;
      }
      var $ = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function S(p) {
        {
          for (var _ = arguments.length, L = new Array(_ > 1 ? _ - 1 : 0), z = 1; z < _; z++)
            L[z - 1] = arguments[z];
          A("error", p, L);
        }
      }
      function A(p, _, L) {
        {
          var z = $.ReactDebugCurrentFrame, W = z.getStackAddendum();
          W !== "" && (_ += "%s", L = L.concat([W]));
          var H = L.map(function(R) {
            return "" + R;
          });
          H.unshift("Warning: " + _), Function.prototype.apply.call(console[p], console, H);
        }
      }
      var T = !1;
      function B(p) {
        return !!(typeof p == "string" || typeof p == "function" || p === s.Fragment || p === a || p === b || p === i || p === h || p === d || p === P || T || typeof p == "object" && p !== null && (p.$$typeof === g || p.$$typeof === f || p.$$typeof === c || p.$$typeof === l || p.$$typeof === r || p.$$typeof === w || p.$$typeof === y || p[0] === v));
      }
      function I(p, _, L) {
        var z = _.displayName || _.name || "";
        return p.displayName || (z !== "" ? L + "(" + z + ")" : L);
      }
      function j(p) {
        return p.displayName || "Context";
      }
      function M(p) {
        if (p == null)
          return null;
        if (typeof p.tag == "number" && S("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."), typeof p == "function")
          return p.displayName || p.name || null;
        if (typeof p == "string")
          return p;
        switch (p) {
          case s.Fragment:
            return "Fragment";
          case o:
            return "Portal";
          case a:
            return "Profiler";
          case i:
            return "StrictMode";
          case h:
            return "Suspense";
          case d:
            return "SuspenseList";
        }
        if (typeof p == "object")
          switch (p.$$typeof) {
            case l:
              var _ = p;
              return j(_) + ".Consumer";
            case c:
              var L = p;
              return j(L._context) + ".Provider";
            case r:
              return I(p, p.render, "ForwardRef");
            case f:
              return M(p.type);
            case y:
              return M(p._render);
            case g: {
              var z = p, W = z._payload, H = z._init;
              try {
                return M(H(W));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var k = 0, ae, ne, N, K, G, Q, ee;
      function Me() {
      }
      Me.__reactDisabledLog = !0;
      function re() {
        {
          if (k === 0) {
            ae = console.log, ne = console.info, N = console.warn, K = console.error, G = console.group, Q = console.groupCollapsed, ee = console.groupEnd;
            var p = {
              configurable: !0,
              enumerable: !0,
              value: Me,
              writable: !0
            };
            Object.defineProperties(console, {
              info: p,
              log: p,
              warn: p,
              error: p,
              group: p,
              groupCollapsed: p,
              groupEnd: p
            });
          }
          k++;
        }
      }
      function le() {
        {
          if (k--, k === 0) {
            var p = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: e({}, p, {
                value: ae
              }),
              info: e({}, p, {
                value: ne
              }),
              warn: e({}, p, {
                value: N
              }),
              error: e({}, p, {
                value: K
              }),
              group: e({}, p, {
                value: G
              }),
              groupCollapsed: e({}, p, {
                value: Q
              }),
              groupEnd: e({}, p, {
                value: ee
              })
            });
          }
          k < 0 && S("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ve = $.ReactCurrentDispatcher, _e;
      function xe(p, _, L) {
        {
          if (_e === void 0)
            try {
              throw Error();
            } catch (W) {
              var z = W.stack.trim().match(/\n( *(at )?)/);
              _e = z && z[1] || "";
            }
          return `
` + _e + p;
        }
      }
      var ke = !1, we;
      {
        var Re = typeof WeakMap == "function" ? WeakMap : Map;
        we = new Re();
      }
      function Te(p, _) {
        if (!p || ke)
          return "";
        {
          var L = we.get(p);
          if (L !== void 0)
            return L;
        }
        var z;
        ke = !0;
        var W = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var H;
        H = ve.current, ve.current = null, re();
        try {
          if (_) {
            var R = function() {
              throw Error();
            };
            if (Object.defineProperty(R.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(R, []);
              } catch (he) {
                z = he;
              }
              Reflect.construct(p, [], R);
            } else {
              try {
                R.call();
              } catch (he) {
                z = he;
              }
              p.call(R.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (he) {
              z = he;
            }
            p();
          }
        } catch (he) {
          if (he && z && typeof he.stack == "string") {
            for (var D = he.stack.split(`
`), te = z.stack.split(`
`), Y = D.length - 1, X = te.length - 1; Y >= 1 && X >= 0 && D[Y] !== te[X]; )
              X--;
            for (; Y >= 1 && X >= 0; Y--, X--)
              if (D[Y] !== te[X]) {
                if (Y !== 1 || X !== 1)
                  do
                    if (Y--, X--, X < 0 || D[Y] !== te[X]) {
                      var ce = `
` + D[Y].replace(" at new ", " at ");
                      return typeof p == "function" && we.set(p, ce), ce;
                    }
                  while (Y >= 1 && X >= 0);
                break;
              }
          }
        } finally {
          ke = !1, ve.current = H, le(), Error.prepareStackTrace = W;
        }
        var Le = p ? p.displayName || p.name : "", ht = Le ? xe(Le) : "";
        return typeof p == "function" && we.set(p, ht), ht;
      }
      function Qe(p, _, L) {
        return Te(p, !1);
      }
      function Et(p) {
        var _ = p.prototype;
        return !!(_ && _.isReactComponent);
      }
      function De(p, _, L) {
        if (p == null)
          return "";
        if (typeof p == "function")
          return Te(p, Et(p));
        if (typeof p == "string")
          return xe(p);
        switch (p) {
          case h:
            return xe("Suspense");
          case d:
            return xe("SuspenseList");
        }
        if (typeof p == "object")
          switch (p.$$typeof) {
            case r:
              return Qe(p.render);
            case f:
              return De(p.type, _, L);
            case y:
              return Qe(p._render);
            case g: {
              var z = p, W = z._payload, H = z._init;
              try {
                return De(H(W), _, L);
              } catch {
              }
            }
          }
        return "";
      }
      var et = {}, tt = $.ReactDebugCurrentFrame;
      function Be(p) {
        if (p) {
          var _ = p._owner, L = De(p.type, p._source, _ ? _.type : null);
          tt.setExtraStackFrame(L);
        } else
          tt.setExtraStackFrame(null);
      }
      function Ot(p, _, L, z, W) {
        {
          var H = Function.call.bind(Object.prototype.hasOwnProperty);
          for (var R in p)
            if (H(p, R)) {
              var D = void 0;
              try {
                if (typeof p[R] != "function") {
                  var te = Error((z || "React class") + ": " + L + " type `" + R + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof p[R] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw te.name = "Invariant Violation", te;
                }
                D = p[R](_, R, z, L, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Y) {
                D = Y;
              }
              D && !(D instanceof Error) && (Be(W), S("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", z || "React class", L, R, typeof D), Be(null)), D instanceof Error && !(D.message in et) && (et[D.message] = !0, Be(W), S("Failed %s type: %s", L, D.message), Be(null));
            }
        }
      }
      var Ne = $.ReactCurrentOwner, Ie = Object.prototype.hasOwnProperty, Mt = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, ot, it, Ve;
      Ve = {};
      function kt(p) {
        if (Ie.call(p, "ref")) {
          var _ = Object.getOwnPropertyDescriptor(p, "ref").get;
          if (_ && _.isReactWarning)
            return !1;
        }
        return p.ref !== void 0;
      }
      function Nt(p) {
        if (Ie.call(p, "key")) {
          var _ = Object.getOwnPropertyDescriptor(p, "key").get;
          if (_ && _.isReactWarning)
            return !1;
        }
        return p.key !== void 0;
      }
      function zt(p, _) {
        if (typeof p.ref == "string" && Ne.current && _ && Ne.current.stateNode !== _) {
          var L = M(Ne.current.type);
          Ve[L] || (S('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', M(Ne.current.type), p.ref), Ve[L] = !0);
        }
      }
      function At(p, _) {
        {
          var L = function() {
            ot || (ot = !0, S("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", _));
          };
          L.isReactWarning = !0, Object.defineProperty(p, "key", {
            get: L,
            configurable: !0
          });
        }
      }
      function Tt(p, _) {
        {
          var L = function() {
            it || (it = !0, S("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", _));
          };
          L.isReactWarning = !0, Object.defineProperty(p, "ref", {
            get: L,
            configurable: !0
          });
        }
      }
      var Dt = function(p, _, L, z, W, H, R) {
        var D = {
          $$typeof: t,
          type: p,
          key: _,
          ref: L,
          props: R,
          _owner: H
        };
        return D._store = {}, Object.defineProperty(D._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(D, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: z
        }), Object.defineProperty(D, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: W
        }), Object.freeze && (Object.freeze(D.props), Object.freeze(D)), D;
      };
      function Bt(p, _, L, z, W) {
        {
          var H, R = {}, D = null, te = null;
          L !== void 0 && (D = "" + L), Nt(_) && (D = "" + _.key), kt(_) && (te = _.ref, zt(_, W));
          for (H in _)
            Ie.call(_, H) && !Mt.hasOwnProperty(H) && (R[H] = _[H]);
          if (p && p.defaultProps) {
            var Y = p.defaultProps;
            for (H in Y)
              R[H] === void 0 && (R[H] = Y[H]);
          }
          if (D || te) {
            var X = typeof p == "function" ? p.displayName || p.name || "Unknown" : p;
            D && At(R, X), te && Tt(R, X);
          }
          return Dt(p, D, te, W, z, Ne.current, R);
        }
      }
      var We = $.ReactCurrentOwner, nt = $.ReactDebugCurrentFrame;
      function Ce(p) {
        if (p) {
          var _ = p._owner, L = De(p.type, p._source, _ ? _.type : null);
          nt.setExtraStackFrame(L);
        } else
          nt.setExtraStackFrame(null);
      }
      var He;
      He = !1;
      function Fe(p) {
        return typeof p == "object" && p !== null && p.$$typeof === t;
      }
      function st() {
        {
          if (We.current) {
            var p = M(We.current.type);
            if (p)
              return `

Check the render method of \`` + p + "`.";
          }
          return "";
        }
      }
      function Pt(p) {
        {
          if (p !== void 0) {
            var _ = p.fileName.replace(/^.*[\\\/]/, ""), L = p.lineNumber;
            return `

Check your code at ` + _ + ":" + L + ".";
          }
          return "";
        }
      }
      var at = {};
      function $t(p) {
        {
          var _ = st();
          if (!_) {
            var L = typeof p == "string" ? p : p.displayName || p.name;
            L && (_ = `

Check the top-level render call using <` + L + ">.");
          }
          return _;
        }
      }
      function rt(p, _) {
        {
          if (!p._store || p._store.validated || p.key != null)
            return;
          p._store.validated = !0;
          var L = $t(_);
          if (at[L])
            return;
          at[L] = !0;
          var z = "";
          p && p._owner && p._owner !== We.current && (z = " It was passed a child from " + M(p._owner.type) + "."), Ce(p), S('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', L, z), Ce(null);
        }
      }
      function lt(p, _) {
        {
          if (typeof p != "object")
            return;
          if (Array.isArray(p))
            for (var L = 0; L < p.length; L++) {
              var z = p[L];
              Fe(z) && rt(z, _);
            }
          else if (Fe(p))
            p._store && (p._store.validated = !0);
          else if (p) {
            var W = V(p);
            if (typeof W == "function" && W !== p.entries)
              for (var H = W.call(p), R; !(R = H.next()).done; )
                Fe(R.value) && rt(R.value, _);
          }
        }
      }
      function Rt(p) {
        {
          var _ = p.type;
          if (_ == null || typeof _ == "string")
            return;
          var L;
          if (typeof _ == "function")
            L = _.propTypes;
          else if (typeof _ == "object" && (_.$$typeof === r || _.$$typeof === f))
            L = _.propTypes;
          else
            return;
          if (L) {
            var z = M(_);
            Ot(L, p.props, "prop", z, p);
          } else if (_.PropTypes !== void 0 && !He) {
            He = !0;
            var W = M(_);
            S("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", W || "Unknown");
          }
          typeof _.getDefaultProps == "function" && !_.getDefaultProps.isReactClassApproved && S("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function It(p) {
        {
          for (var _ = Object.keys(p.props), L = 0; L < _.length; L++) {
            var z = _[L];
            if (z !== "children" && z !== "key") {
              Ce(p), S("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", z), Ce(null);
              break;
            }
          }
          p.ref !== null && (Ce(p), S("Invalid attribute `ref` supplied to `React.Fragment`."), Ce(null));
        }
      }
      function ct(p, _, L, z, W, H) {
        {
          var R = B(p);
          if (!R) {
            var D = "";
            (p === void 0 || typeof p == "object" && p !== null && Object.keys(p).length === 0) && (D += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
            var te = Pt(W);
            te ? D += te : D += st();
            var Y;
            p === null ? Y = "null" : Array.isArray(p) ? Y = "array" : p !== void 0 && p.$$typeof === t ? (Y = "<" + (M(p.type) || "Unknown") + " />", D = " Did you accidentally export a JSX literal instead of a component?") : Y = typeof p, S("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Y, D);
          }
          var X = Bt(p, _, L, W, H);
          if (X == null)
            return X;
          if (R) {
            var ce = _.children;
            if (ce !== void 0)
              if (z)
                if (Array.isArray(ce)) {
                  for (var Le = 0; Le < ce.length; Le++)
                    lt(ce[Le], p);
                  Object.freeze && Object.freeze(ce);
                } else
                  S("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
              else
                lt(ce, p);
          }
          return p === s.Fragment ? It(X) : Rt(X), X;
        }
      }
      function Vt(p, _, L) {
        return ct(p, _, L, !0);
      }
      function Wt(p, _, L) {
        return ct(p, _, L, !1);
      }
      var Ht = Wt, Ft = Vt;
      s.jsx = Ht, s.jsxs = Ft;
    }();
  }(Ge)), Ge;
}
(function(s) {
  process.env.NODE_ENV === "production" ? s.exports = Jt() : s.exports = qt();
})($e);
const Pe = $e.exports.Fragment, m = $e.exports.jsx, Z = $e.exports.jsxs, ie = mt(null), me = mt(null), Kt = ie.Provider, Qt = me.Provider, eo = "2.1.35", to = (s) => (s = s.replace("#", ""), s = s.replace("(", ""), s = s.replace(")", ""), s = s.replace(/,/, "-"), s), ue = (s) => {
  try {
    if ("touches" in s && s.touches || "targetTouches" in s && s.targetTouches)
      return !0;
  } catch {
  }
  return !1;
}, Ue = (s) => s instanceof TouchEvent ? {
  clientX: s.touches[0].clientX,
  clientY: s.touches[0].clientY
} : {
  clientX: s.clientX,
  clientY: s.clientY
}, u = (...s) => {
  typeof window < "u" && window.relationGraphDebug && console.log("[relation-graph:debug]", ...s);
}, Ze = (s, n, e) => s ? s.classList.contains(n) ? s : s.classList.contains(e) ? null : Ze(s.parentElement, n, e) : null, pt = async (s) => new Promise((n, e) => {
  setTimeout(() => {
    n();
  }, s);
}), q = (s) => typeof s == "string" ? Number.parseInt(s) : s, oo = (s) => {
  console.log(
    `%c relation-graph${s ? "" : "/" + s} %c Version v${eo} %c More info: https://github.com/seeksdream/relation-graph %c`,
    "background:#35495e ; padding: 1px; border-radius: 3px 0 0 3px;  color: #fff",
    "background:#41b883 ; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff",
    "background:#fff ; padding: 1px; border-radius: 0 3px 3px 0;  color: #41b883",
    "background:transparent"
  ), Yt || console.error(
    "[relation-graph]Please introduce component screenfull, for example:https://cdnjs.cloudflare.com/ajax/libs/screenfull.js/5.1.0/screenfull.min.js"
  ), Xt || console.error(
    "[relation-graph]Please introduce component html2canvas, for example:https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"
  );
}, Ke = (s, n) => {
  if (s.id === void 0)
    throw console.log("node must has id:", s), new Error("node must has option[id]:");
  const e = {
    id: s.id,
    text: s.text !== void 0 ? s.text : "",
    type: s.type !== void 0 ? s.type : "node",
    isShow: !0,
    isHide: s.isHide !== void 0 ? s.isHide : !1,
    expanded: s.expanded !== void 0 ? s.expanded : !0,
    junctionPoint: s.junctionPoint !== void 0 ? s.junctionPoint : void 0,
    alignItems: s.alignItems !== void 0 ? s.alignItems : void 0,
    selected: s.selected !== void 0 ? s.selected : !1,
    flashing: void 0,
    dragging: !1,
    styleClass: s.styleClass !== void 0 ? s.styleClass : "",
    className: s.className !== void 0 ? s.className : "",
    targetNodes: [],
    targetFrom: [],
    targetTo: [],
    nodeShape: s.nodeShape !== void 0 ? s.nodeShape : void 0,
    borderWidth: s.borderWidth !== void 0 ? s.borderWidth : void 0,
    borderColor: s.borderColor !== void 0 ? s.borderColor : void 0,
    fontColor: s.fontColor !== void 0 ? s.fontColor : void 0,
    color: s.color !== void 0 ? s.color : void 0,
    opacity: s.opacity !== void 0 ? s.opacity : 1,
    fixed: s.fixed !== void 0 ? s.fixed : !1,
    width: s.width !== void 0 ? s.width : void 0,
    height: s.height !== void 0 ? s.height : void 0,
    force_weight: s.force_weight,
    x: s.x !== void 0 ? s.x : 0,
    y: s.y !== void 0 ? s.y : 0,
    Fx: 0,
    Fy: 0,
    offset_x: s.offset_x !== void 0 ? s.offset_x : 0,
    offset_y: s.offset_y !== void 0 ? s.offset_y : 0,
    expandHolderPosition: s.expandHolderPosition !== void 0 ? s.expandHolderPosition : void 0,
    innerHTML: s.innerHTML !== void 0 ? s.innerHTML : void 0,
    html: s.html !== void 0 ? s.html : void 0,
    disableDefaultClickEffect: s.disableDefaultClickEffect !== void 0 ? s.disableDefaultClickEffect : void 0,
    disableDrag: s.disableDrag !== void 0 ? s.disableDrag : !1,
    singleNode: !1,
    data: s.data !== void 0 ? s.data : {}
  };
  return e.lot = {
    childs: [],
    parent: void 0,
    eached: !1,
    strength: 0
  }, e.el === void 0 && (e.el = {
    offsetWidth: 50,
    offsetHeight: 50
  }, n && (n.defaultNodeWidth && (e.el.offsetWidth = n.defaultNodeWidth + 16), n.defaultNodeHeight && (e.el.offsetHeight = n.defaultNodeHeight + 16))), e.width && (e.el.offsetWidth = e.width), e.height && (e.el.offsetHeight = e.height), e;
}, io = [
  "Fx",
  "Fy",
  "appended",
  "dragging",
  "el",
  "targetFrom",
  "targetNodes",
  "targetTo",
  "type",
  "lot",
  "seeks_id"
], no = (s) => {
  if (!s)
    return;
  const n = {};
  return Object.keys(s).forEach((e) => {
    io.includes(e) || s[e] !== void 0 && (n[e] = s[e]);
  }), n;
}, Je = (s) => {
  if (s.from === void 0)
    throw console.log("error,line must has option[from]:", s), new Error("error,line must has option[from]:");
  if (s.to === void 0)
    throw console.log("error,line must has option[to]:", s), new Error("error,line must has option[to]:");
  if (typeof s.from != "string")
    throw console.log("error line from, must be string:", s), new TypeError("error line from, must be string:");
  if (typeof s.to != "string")
    throw console.log("error line to, must be string:", s), new TypeError("error line to, must be string:");
  const n = {
    from: s.from,
    to: s.to,
    text: s.text !== void 0 ? s.text : "",
    textOffset_x: s.textOffset_x !== void 0 ? s.textOffset_x : void 0,
    textOffset_y: s.textOffset_y !== void 0 ? s.textOffset_y : void 0,
    color: s.color !== void 0 ? s.color : void 0,
    opacity: s.opacity !== void 0 ? s.opacity : 1,
    fontColor: s.fontColor !== void 0 ? s.fontColor : void 0,
    lineWidth: s.lineWidth !== void 0 ? s.lineWidth : void 0,
    lineShape: s.lineShape !== void 0 ? s.lineShape : void 0,
    styleClass: s.styleClass !== void 0 ? s.styleClass : void 0,
    className: s.className !== void 0 ? s.className : void 0,
    isHide: s.isHide !== void 0 ? s.isHide : !1,
    arrow: s.arrow !== void 0 ? s.arrow : void 0,
    animation: s.animation !== void 0 ? s.animation : 0,
    dashType: s.dashType !== void 0 ? s.dashType : 0,
    disableDefaultClickEffect: s.disableDefaultClickEffect !== void 0 ? s.disableDefaultClickEffect : !1,
    showStartArrow: s.showStartArrow !== void 0 ? s.showStartArrow : !1,
    showEndArrow: s.showEndArrow !== void 0 ? s.showEndArrow : !0,
    useTextPath: s.useTextPath !== void 0 ? s.useTextPath : void 0,
    placeText: s.placeText !== void 0 ? s.placeText : void 0,
    forDisplayOnly: s.forDisplayOnly || s.from === s.to,
    fromJunctionPoint: s.fromJunctionPoint,
    toJunctionPoint: s.toJunctionPoint,
    force_elastic: s.force_elastic,
    polyLineStartDistance: s.polyLineStartDistance,
    isHideArrow: s.isHideArrow !== void 0 ? s.isHideArrow : void 0,
    hidden: !1,
    lineDirection: s.lineDirection !== void 0 ? s.lineDirection : void 0,
    reverseText: s.reverseText !== void 0 ? s.reverseText : void 0,
    data: s.data !== void 0 ? s.data : {}
  };
  return n.isHideArrow && (n.showEndArrow = !1, n.isHideArrow = !1), n;
}, so = ["arrow", "id", "reverseText", "isReverse"], ao = (s, n) => {
  !s || s.relations.forEach((e) => {
    const t = {};
    Object.keys(e).forEach((o) => {
      so.includes(o) || e[o] !== void 0 && (t[o] = e[o]);
    }), n.push(t);
  });
}, fe = {
  border: "border",
  ltrb: "ltrb",
  tb: "tb",
  lr: "lr",
  left: "left",
  right: "right",
  top: "top",
  bottom: "bottom"
}, x = {
  analysisNodes(s, n, e, t) {
    n.length > t.max_length && (t.max_length = n.length), e > t.max_deep && (t.max_deep = e);
    const o = {
      level: e,
      all_size: n.length,
      all_strength: 0
    };
    e === 0 && n.forEach((a) => {
      a.lot.parent = void 0;
    });
    const i = [];
    n.forEach((a) => {
      s.push(a), a.targetNodes && a.targetNodes.forEach((c) => {
        s.includes(c) || (s.push(c), c.lot.parent = a, i.push(c));
      });
    }), o.all_strength > t.max_strength && (t.max_strength = o.all_strength), i.length > 0 && x.analysisNodes(s, i, e + 1, t);
  },
  analysisNodes4Didirectional(s, n, e, t, o) {
    n.length > t.max_length && (t.max_length = n.length), e > t.max_deep && (t.max_deep = e);
    const i = {
      level: e,
      all_size: n.length,
      all_strength: 0
    }, a = [];
    n.forEach((l) => {
      l.lot || (l.lot = { childs: [] }), l.lot.eached = !0, l.lot.subling = i, l.lot.level = e, s.push(l);
    });
    let c = 0;
    n.forEach((l) => {
      let r = 0;
      if (o === 0) {
        let h = 0;
        l.targetNodes.forEach((d) => {
          d.lot || (d.lot = { eached: !1, childs: [] }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = l, d.lot.index_of_parent = h++, l.lot.childs.push(d), a.push(d), r++) : l.lot.childs.push(d));
        });
      } else if (o === -1) {
        let h = 0;
        l.targetFrom.forEach((d) => {
          d.lot || (d.lot = { eached: !1, childs: [] }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = l, d.lot.index_of_parent = h++, l.lot.childs.push(d), a.push(d), r++) : l.lot.childs.push(d));
        });
      } else {
        let h = 0;
        l.targetTo.forEach((d) => {
          d.lot || (d.lot = { eached: !1, childs: [] }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = l, d.lot.index_of_parent = h++, l.lot.childs.push(d), a.push(d), r++) : l.lot.childs.push(d));
        });
      }
      l.lot.strength = r > 0 ? r : 1, i.all_strength += l.lot.strength, l.lot.strength_plus = i.all_strength, l.lot.index_of_level = c, l.lot.childs_size = r, c++;
    }), i.all_strength > t.max_strength && (t.max_strength = i.all_strength), a.length > 0 ? x.analysisNodes4Didirectional(s, a, e + (o === -1 ? -1 : 1), t, o) : (s.forEach((l) => {
      l.lot.childs_size > 0 && (l.lot.strengthWithChilds = 0);
    }), s.forEach((l) => {
      l.lot.childs_size === 0 && (l.lot.strengthWithChilds = 1, x.conductStrengthToParents(l));
    }), x.analysisDataTree([s[0]], 0, o));
  },
  conductStrengthToParents(s) {
    s.lot.parent && Math.abs(s.lot.level) - 1 === Math.abs(s.lot.parent.lot.level) && (s.lot.parent.lot.strengthWithChilds += 1, x.conductStrengthToParents(s.lot.parent));
  },
  analysisDataTree(s, n, e = 1) {
    const t = [];
    let o = 0;
    s.forEach((i) => {
      (i.lot.level === 0 || e === (i.lot.level < 0 ? -1 : 1)) && (i.lot.childs_size > 0 && i.lot.childs.forEach((a) => {
        t.push(a);
      }), i.lot.parent && o < i.lot.parent.lot.strengthWithChilds_from && (o = i.lot.parent.lot.strengthWithChilds_from), i.lot.strengthWithChilds_from = o, o += i.lot.strengthWithChilds);
    }), t.length > 0 && x.analysisDataTree(t, n + e, e);
  },
  conductStrengthToParents4Folder(s) {
    s.lot.parent && (s.lot.parent.lot.strengthWithChilds += 1, x.conductStrengthToParents4Folder(s.lot.parent));
  },
  analysisDataFolder(s, n, e) {
    const t = [];
    let o = 0, i = null;
    s.forEach((a) => {
      if (a.lot.level === 0 || e === (a.lot.level < 0 ? -1 : 1)) {
        a.lot.childs_size > 0 && a.lot.childs.forEach((l) => {
          t.push(l);
        });
        let c = 0;
        a.lot.parent && (i ? i !== a.lot.parent && (o += 1, i = a.lot.parent) : (c = a.lot.parent.lot.strengthWithChilds_from, o = c, i = a.lot.parent)), a.lot.strengthWithChilds_from = 1 + o, o += a.lot.strengthWithChilds;
      }
    }), t.length > 0 && x.analysisDataFolder(t, n + e, e);
  },
  isAllowShowNode(s, n = 0) {
    return n > 15 ? !0 : (!s.lot || !s.lot.parent || x.isAllowShowNode(s.lot.parent, n + 1) && s.lot.parent.expanded !== !1) && s.isShow && s.isHide !== !0;
  },
  getNodeWidth(s, n) {
    return s.el.offsetWidth || s.width || n && n.defaultNodeWidth || 50;
  },
  getNodeHeight(s, n) {
    return s.el.offsetHeight || s.height || n && n.defaultNodeHeight || 50;
  },
  getNodeXByLotX(s, n) {
    return (n.offset_x || 0) + this.getNodeXByCenterX(s, n, n.lot.x || 0);
  },
  getNodeYByLotY(s, n) {
    return (n.offset_y || 0) + this.getNodeYByCenterY(s, n, n.lot.y || 0);
  },
  getNodeXByCenterX(s, n, e) {
    return n.alignItems === "right" ? e - x.getNodeWidth(n, s) : n.alignItems === "left" ? e : e - x.getNodeWidth(n, s) / 2;
  },
  getNodeYByCenterY(s, n, e) {
    return n.alignItems === "top" ? e : n.alignItems === "bottom" ? e - x.getNodeHeight(n, s) : e - x.getNodeHeight(n, s) / 2;
  },
  getCenterXByNodeX(s, n, e) {
    return e + x.getNodeHeight(n, s) / 2;
  },
  getCenterYByNodeY(s, n, e) {
    return e + x.getNodeHeight(n, s) / 2;
  },
  getLotXByNodeX(s, n) {
    const e = n.offset_x || 0;
    return this.getCenterXByNodeX(s, n, n.x || 0) - e;
  },
  getLotYByNodeY(s, n) {
    const e = n.offset_y || 0;
    return this.getCenterYByNodeY(s, n, n.y || 0) - e;
  },
  isRectangleOverlap(s, n) {
    const e = s.x + U, t = n.x + U, o = s.el.offsetWidth - U * 2, i = n.el.offsetWidth - U * 2, a = s.y + U, c = n.y + U, l = s.el.offsetHeight - U * 2, r = n.el.offsetHeight - U * 2;
    return !(t >= e + o || t + i <= e || c >= a + l || c + r <= a);
  },
  isXOverlap(s, n, e, t) {
    return !(n >= s + e || n + t <= s);
  },
  isYOverlap(s, n, e, t) {
    return !(n >= s + e || n + t <= s);
  },
  shapesOverlap(s, n, e = 1, t = 1) {
    return this.isRectangleOverlap(s, n);
  },
  getNoOverlapLimitedPosition(s, n, e, t) {
    const o = s.x + U, i = s.y + U, a = n + U, c = t.x + U, l = s.el.offsetWidth - U * 2, r = t.el.offsetWidth - U * 2, h = e + U, d = t.y + U, f = s.el.offsetHeight - U * 2, g = t.el.offsetHeight - U * 2;
    let y = s.x, v = s.y;
    const w = this.isXOverlap(o, c, l, r), b = this.isYOverlap(i, d, f, g);
    return w ? h < d ? (y = n, v = d - f - U) : h > d && (y = n, v = d + g - U) : b && (a < c ? (y = c - l - U, v = e) : a > c && (y = c + r - U, v = e)), { x: y, y: v };
  },
  flatNodeData(s, n, e, t) {
    s.forEach((o) => {
      e.push(o), n && t.push({
        from: n.id,
        to: o.id
      });
      const i = o.childs || o.children;
      i && i.length > 0 && this.flatNodeData(i, o, e, t);
    });
  }
}, U = 8;
class ze {
  constructor(n, e) {
    C(this, "graphOptions");
    C(this, "layoutOptions");
    C(this, "allNodes", []);
    C(this, "isMainLayouer", !0);
    C(this, "requireLinks", !1);
    C(this, "allLinks", []);
    C(this, "rootNode");
    C(this, "currentAnimationStep", 1);
    C(this, "allAnimationStep", 30);
    this.layoutOptions = n, this.graphOptions = e;
  }
  setLinks(n) {
    u("setLinks:", n.length), this.allLinks = n;
  }
  refresh() {
    this.placeNodes(this.allNodes, this.rootNode);
  }
  placeNodes(n, e) {
    this.allNodes = n, this.rootNode = e;
  }
  snapshotBeforeAnimation() {
    this.allNodes.forEach((n) => {
      !x.isAllowShowNode(n) || (n.lot.to_x = x.getNodeXByLotX(this.graphOptions, n), n.lot.to_y = x.getNodeYByLotY(this.graphOptions, n), n.lot.from_x = n.x || 0, n.lot.from_y = n.y || 0, n.lot.placed = !0);
    });
  }
  async animationLayout(n = !0) {
    n && this.snapshotBeforeAnimation();
    const e = this.rootNode;
    e && u("debug0910:create rootNode coordinates:2.1", e.x, e.y), this.currentAnimationStep = 1, this.allAnimationStep = 10, u("[LayoutAnimationEffect]start play...");
    let t = !1;
    return new Promise((o, i) => {
      this.playAnimation(() => {
        t || (t = !0, u("[LayoutAnimationEffect]played!"), this.allNodes.forEach((a) => {
          !x.isAllowShowNode(a) || (a.lot.from_x = a.x, a.lot.from_y = a.y, a.x = a.lot.to_x, a.y = a.lot.to_y);
        }), o());
      });
    });
  }
  playAnimation(n) {
    if (u("[LayoutAnimationEffect]", this.currentAnimationStep, this.allAnimationStep), this.currentAnimationStep > this.allAnimationStep) {
      n();
      return;
    }
    this.allNodes.forEach((e) => {
      if (!e.lot.placed)
        return;
      const { from_x: t, from_y: o, to_x: i, to_y: a } = e.lot;
      if (t !== void 0 && o !== void 0 && i !== void 0 && a !== void 0) {
        const c = (i - t) / this.allAnimationStep, l = (a - o) / this.allAnimationStep, r = Math.floor(t + this.currentAnimationStep * c), h = Math.floor(o + this.currentAnimationStep * l);
        (e.x !== r || e.y !== h) && (e.x = r, e.y = h);
      }
    }), this.currentAnimationStep++, requestAnimationFrame(this.playAnimation.bind(this, n));
  }
}
class ro extends ze {
  constructor(e, t) {
    super(e, t);
    C(this, "enableGatherNodes", !1);
    C(this, "layoutOptions");
    C(this, "levelDistanceArr", []);
    this.layoutOptions = e, u("new SeeksBidirectionalTreeLayouter:", this.layoutOptions), this.layoutOptions.from || (this.layoutOptions.from = "left"), this.layoutOptions.levelDistance && (typeof this.layoutOptions.levelDistance == "string" ? this.levelDistanceArr = this.layoutOptions.levelDistance.split(",").map((o) => Number.parseInt(o)) : Array.isArray(this.layoutOptions.levelDistance) && (this.levelDistanceArr = this.layoutOptions.levelDistance)), this.enableGatherNodes = this.layoutOptions.enableGatherNodes;
  }
  async refresh() {
    u("SeeksBidirectionalTreeLayouter:refresh:nodes:", this.allNodes.length), await this.placeNodes(this.allNodes, this.rootNode);
  }
  analysisNodes4Didirectional(e, t, o, i, a) {
    u(`${a} level ${o} size: ${t.length}`), t.length > i.max_length && (i.max_length = t.length), o > i.max_deep && (i.max_deep = o);
    const c = {
      level: o,
      all_size: t.length,
      all_strength: 0
    }, l = [];
    t.forEach((h) => {
      h.lot || (h.lot = { childs: [] }), h.lot.eached = !0, h.lot.subling = c, h.lot.level = o, e.push(h);
    });
    let r = 0;
    t.forEach((h) => {
      let d = 0, f = a === -1 ? h.targetFrom : h.targetTo;
      o !== 0 && (f = h.targetNodes);
      let g = 0;
      f.forEach((y) => {
        y.lot || (y.lot = { eached: !1, childs: [] }), y.lot.eached || (y.lot.parent = h, x.isAllowShowNode(y) ? (y.lot.eached = !0, y.lot.index_of_parent = g++, h.lot.childs.push(y), l.push(y), d++) : h.lot.childs.push(y));
      }), h.lot.strength = d > 0 ? d : 1, c.all_strength += h.lot.strength, h.lot.strength_plus = c.all_strength, h.lot.index_of_level = r, h.lot.childs_size = d, r++;
    }), c.all_strength > i.max_strength && (i.max_strength = c.all_strength), l.length > 0 ? this.analysisNodes4Didirectional(e, l, o + a, i, a) : (e.forEach((h) => {
      h.lot.childs_size > 0 && (h.lot.strengthWithChilds = 0);
    }), e.forEach((h) => {
      h.lot.childs_size === 0 && (h.lot.strengthWithChilds = 1, x.conductStrengthToParents(h));
    }), x.analysisDataTree([e[0]], 0, a));
  }
  async placeNodes(e, t) {
    if (u("SeeksBidirectionalTreeLayouter:placeNodes"), t)
      u("layout by root:", t);
    else {
      console.error("root is null");
      return;
    }
    this.rootNode = t, this.allNodes = e, u("allNodes:", e.length), e.forEach((a) => {
      a.lot.eached = !1, a.lot.notLeafNode = !1, a.lot.childs = [], a.lot.parent = void 0, a.lot.index_of_parent = 0, a.lot.strength = 0, a.lot.strengthWithChilds_from = 0, a.lot.strengthWithChilds = 0, a.lot.placed = !1;
    });
    let o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    x.analysisNodes(o, [this.rootNode], 0, i), o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(o, [this.rootNode], 0, i, -1), this.placeNodesPosition(this.rootNode, o, i), o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(o, [this.rootNode], 0, i, 1), this.placeNodesPosition(this.rootNode, o, i), u("allNodes:", o.length), this.graphOptions.useAnimationWhenExpanded ? (u("Play layout animation....."), await this.animationLayout(), u("create rootNode coordinates:3", t.x, t.y)) : (this.allNodes.forEach((a) => {
      if (a.fixed === !0) {
        a.lot.placed = !0;
        return;
      }
      !x.isAllowShowNode(a) || (Number.isNaN(a.lot.x) && (u("bad lot x:", a.text, a.lot.x), a.lot.x = 0), Number.isNaN(a.lot.y) && (u("bad lot y:", a.text, a.lot.y), a.lot.y = 0), a.x = x.getNodeXByLotX(this.graphOptions, a), a.y = x.getNodeYByLotY(this.graphOptions, a), a.lot.placed = !0);
    }), u("create rootNode coordinates:1", t.x, t.y));
  }
  placeNodesPosition(e, t, o) {
    if (e.fixed !== !0) {
      const i = this.layoutOptions.centerOffset_x || 0, a = this.layoutOptions.centerOffset_y || 0;
      e.lot.x = i, e.lot.y = a, this.layoutOptions.fixedRootNode ? (e.lot.x = x.getLotXByNodeX(this.graphOptions, e), e.lot.y = x.getLotYByNodeY(this.graphOptions, e)) : this.layoutOptions.from === "top" ? e.lot.y -= this.graphOptions.viewSize.height / 2 - 100 : this.layoutOptions.from === "bottom" ? e.lot.y += this.graphOptions.viewSize.height / 2 - 200 : this.layoutOptions.from === "right" ? e.lot.x += this.graphOptions.viewSize.width / 2 - 100 : e.lot.x -= this.graphOptions.viewSize.width / 2 - 100, u("debug0910:Graph center:", e.lot.x, e.lot.y, { _center_offset_x: i, _center_offset_y: a });
    } else
      e.origin_x === void 0 && (e.origin_x = e.x, e.origin_y = e.y), e.lot.x = e.origin_x, e.lot.y = e.origin_y, u("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", e.text, e.x, e.y);
    e.lot.placed = !0, this.placeRelativePosition(e, t, o);
  }
  placeRelativePosition(e, t, o) {
    const i = this.graphOptions.viewSize;
    if (this.layoutOptions.from === "left" || this.layoutOptions.from === "right") {
      const a = q(this.layoutOptions.min_per_height) || 80, c = q(this.layoutOptions.max_per_height) || 400, l = q(this.layoutOptions.min_per_width) || 430, r = q(this.layoutOptions.max_per_width) || 650;
      let h = Math.round((i.width - 10) / (o.max_deep + 2));
      h < l && (h = l), h > r && (h = r);
      let d = Math.round(i.height / (o.max_strength + 1));
      d < a && (d = a), d > c && (d = c), t.forEach((f) => {
        f.fixed !== !0 && f.lot.placed !== !0 && f !== e && (this.layoutOptions.from === "right" ? f.lot.x = e.lot.x - this.getLevelDistance(f, f.lot.subling.level, h) : f.lot.x = e.lot.x + this.getLevelDistance(f, f.lot.subling.level, h));
      }), t.forEach((f) => {
        f.fixed !== !0 && f.lot.level !== 0 && (this.layoutOptions.layoutExpansionDirection === "left" || this.layoutOptions.layoutExpansionDirection === "top" ? f.lot.y = e.lot.y - d * f.lot.strengthWithChilds_from : this.layoutOptions.layoutExpansionDirection === "right" || this.layoutOptions.layoutExpansionDirection === "bottom" ? f.lot.y = e.lot.y + d * f.lot.strengthWithChilds_from : f.lot.y = e.lot.y + d * (o.max_strength / -2 + f.lot.strengthWithChilds_from + f.lot.strengthWithChilds / 2));
      }), this.gatherNodes(t, "h", d);
    } else {
      const a = q(this.layoutOptions.min_per_height) || 350, c = q(this.layoutOptions.max_per_height) || 400, l = q(this.layoutOptions.min_per_width) || 250, r = q(this.layoutOptions.max_per_width) || 500;
      let h = Math.round((i.width - 10) / (o.max_strength + 2));
      h < l && (h = l), h > r && (h = r);
      let d = Math.round((i.height - 10) / (o.max_deep + 2));
      d < a && (d = a), d > c && (d = c), t.forEach((f) => {
        f.fixed !== !0 && f.lot.placed !== !0 && f !== e && (this.layoutOptions.from === "bottom" ? f.lot.y = e.lot.y - this.getLevelDistance(f, f.lot.subling.level, d) : f.lot.y = e.lot.y + this.getLevelDistance(f, f.lot.subling.level, d));
      }), t.forEach((f) => {
        f.fixed !== !0 && f.lot.level !== 0 && (this.layoutOptions.layoutExpansionDirection === "left" || this.layoutOptions.layoutExpansionDirection === "top" ? f.lot.x = e.lot.x - h * f.lot.strengthWithChilds_from : this.layoutOptions.layoutExpansionDirection === "right" || this.layoutOptions.layoutExpansionDirection === "bottom" ? f.lot.x = e.lot.x + h * f.lot.strengthWithChilds_from : f.lot.x = e.lot.x + h * (o.max_strength / -2 + f.lot.strengthWithChilds_from + f.lot.strengthWithChilds / 2));
      }), this.gatherNodes(t, "v", h);
    }
  }
  gatherNodes(e, t, o) {
    if (!this.enableGatherNodes)
      return;
    const i = {};
    e.forEach((a) => {
      const c = a.lot.level + "";
      i[c] || (i[c] = []), i[c].push(a), a.lot.movedNodeSizeBefore = 1, a.lot.movedNodeSizeAfter = 1;
    }), e.forEach((a) => {
      if (a.fixed !== !0 && a.lot.level !== 0) {
        const c = a.lot.level + "", l = i[c];
        if (a.lot.strengthWithChilds === 1 && a.lot.childs_size <= 1) {
          const r = this.getBloomingNearByParent(a, a.lot.parent, l, t);
          r && (t === "h" ? a.lot.y - r.lot.y > 0 ? (a.lot.y = r.lot.y + o * r.lot.movedNodeSizeAfter, r.lot.movedNodeSizeAfter++) : (a.lot.y = r.lot.y - o * r.lot.movedNodeSizeBefore, r.lot.movedNodeSizeBefore++) : a.lot.x - r.lot.x > 0 ? (a.lot.x = r.lot.x + o * r.lot.movedNodeSizeAfter, r.lot.movedNodeSizeAfter++) : (a.lot.x = r.lot.x - o * r.lot.movedNodeSizeBefore, r.lot.movedNodeSizeBefore++));
        }
      }
    });
  }
  getBloomingNearByParent(e, t, o, i) {
    let a = 9999, c;
    for (const l of o)
      if (l.lot.childs_size > 1 && l.lot.parent === t) {
        const r = i === "h" ? l.lot.y - t.lot.y : l.lot.x - t.lot.x;
        Math.abs(r) < a && (a = Math.abs(r), c = l);
      }
    if (c && c !== e)
      return c;
  }
  getLevelDistance(e, t, o) {
    const i = Math.abs(t);
    if (this.levelDistanceArr && this.levelDistanceArr.length > 0) {
      let a = 0;
      for (let c = 0; c < i; c++) {
        const l = c >= this.levelDistanceArr.length ? this.levelDistanceArr[this.levelDistanceArr.length - 1] : this.levelDistanceArr[c];
        a += l;
      }
      return t > 0 ? a : a * -1;
    } else
      return t * o;
  }
}
function lo(s, n, e, t, o, i, a, c, l) {
  const r = o - s, h = i - n, d = Math.sqrt(r * r + h * h), f = l * h / d, g = -(l * r) / d, y = s + f, v = n + g, w = s - e / 2, b = s + e / 2, P = n - t / 2, O = n + t / 2;
  let E = [];
  if (r !== 0) {
    let $ = (w - y) / r, S = v + $ * h;
    S >= P && S <= O && E.push({ x: w, y: S });
    let A = (b - y) / r, T = v + A * h;
    T >= P && T <= O && E.push({ x: b, y: T });
  }
  if (h !== 0) {
    let $ = (P - v) / h, S = y + $ * r;
    S >= w && S <= b && E.push({ x: S, y: P });
    let A = (O - v) / h, T = y + A * r;
    T >= w && T <= b && E.push({ x: T, y: O });
  }
  let F = null, V = 1 / 0;
  return E.forEach(($) => {
    const S = Math.sqrt(($.x - o) ** 2 + ($.y - i) ** 2);
    S < V && (V = S, F = $);
  }), F;
}
const oe = {
  getRectPoint(s, n, e, t, o, i, a, c, l = !1, r = 1, h = 1, d = 14) {
    const f = h - (r - 1) / 2, g = s + o / 2, y = n + i / 2, v = e + a / 2, w = t + c / 2;
    if (r > 1) {
      const A = d * f, T = lo(
        g,
        y,
        o,
        i,
        v,
        w,
        a,
        c,
        A
      );
      if (T)
        return T;
    }
    const b = g < v ? 1 : -1, P = y < w ? 1 : -1;
    if (w === y)
      return { x: g + b * o / 2, y };
    const O = Math.abs((v - g) / (w - y)), E = o / i;
    let F = 0, V = 0;
    O < E ? (F = b * i / 2 * O + P * E, V = P * i / 2) : (F = b * o / 2, V = P * o / 2 / O + b * E);
    const $ = g + F, S = y + V;
    return { x: $, y: S };
  },
  getRectPointBasic(s, n, e, t, o, i, a, c) {
    const l = s + o / 2, r = n + i / 2, h = e + a / 2, d = t + c / 2;
    let f = d === r ? 0 : (h - l) / (d - r);
    f === 0 && (f = (h - l) / (d - r + 1));
    const g = o / c;
    let y = 0, v = 0, w = "1";
    return -1 * g < f && f < g ? (w = "2", r < d ? (y = i / 2 * f, v = i / 2) : (y = -1 * i / 2 * f, v = -1 * i / 2)) : (l < h ? (y = 1 * o / 2, v = 1 * o / 2 / f) : (y = -1 * o / 2, v = -1 * o / 2 / f), w = "3"), { x: l + y, y: r + v, _case: w };
  },
  getRectJoinPoint(s, n, e, t, o, i, a, c) {
    const l = s + o / 2, r = n + i / 2, h = e + a / 2, d = t + c / 2, f = Math.round(Math.atan2(d - r, h - l) * 180 / 3.14) + 135;
    return f >= 0 && f < 90 ? { x: s + o / 2, y: n - 5 } : f >= 90 && f < 180 ? { x: s + o + 5, y: n + i / 2 } : f >= 180 && f < 270 ? { x: s + o / 2, y: n + i + 5 } : { x: s - 5, y: n + i / 2 };
  },
  getRectHJoinPoint(s, n, e, t, o, i, a) {
    const c = i / 2;
    return s + o < e ? { x: s + o + 5, y: n + c } : s + o < e + a ? { x: s - 5, y: n + c } : { x: s - 5, y: n + c };
  },
  getRectLeftJoinPoint(s, n, e, t, o, i, a) {
    const c = i / 2;
    return { x: s, y: n + c };
  },
  getRectRightJoinPoint(s, n, e, t, o, i, a) {
    const c = i / 2;
    return { x: s + o, y: n + c };
  },
  getRectTopJoinPoint(s, n, e, t, o, i, a) {
    return { x: s + o / 2, y: n };
  },
  getRectBottomJoinPoint(s, n, e, t, o, i, a, c, l, r, h, d, f = 14, g) {
    return g !== void 0 ? { x: s + g, y: n + i } : { x: s + o / 2, y: n + i };
  },
  getRectVJoinPoint(s, n, e, t, o, i, a, c) {
    const l = o / 2;
    return n + i < t ? { y: n + i + 5, x: s + l } : n + i < t + c ? { y: n - 5, x: s + l } : { y: n - 5, x: s + l };
  },
  getBorderPoint(s, n, e, t, o, i, a, c, l) {
    return l === 0 ? this.getCirclePoint(s, n, e, t, o, i, a, c) : this.getRectPoint(s, n, e, t, o, i, a, c);
  },
  getBorderPoint4MultiLine(s, n, e, t, o, i, a, c, l, r, h, d, f = 14) {
    return l === 0 ? this.getCirclePoint4MultiLine(s, n, e, t, o, i, a, c, r, h, d, f) : this.getRectPoint(s, n, e, t, o, i, a, c, r, h, d, f);
  },
  getCirclePoint(s, n, e, t, o, i, a, c) {
    const l = e + a / 2, r = t + c / 2, h = s + o / 2, d = n + i / 2, f = l - h;
    if (f === 0)
      return { x: h, y: d - i / 2 * (r < d ? 1 : -1) };
    const y = (r - d) / f, v = Math.sqrt(1 / (1 / (o / 2) ** 2 + y ** 2 / (i / 2) ** 2)) * (l < h ? 1 : -1), w = y * v;
    return { x: h - v, y: d - w };
  },
  getCirclePoint4MultiLine(s, n, e, t, o, i, a, c, l, r, h, d, f = 0) {
    let g = e + a / 2;
    const y = t + c / 2;
    let v = s + o / 2;
    const w = n + i / 2;
    let b = g - v;
    b > -1 && b < 1 && (g = g - 2, v = v + 2, b = -4);
    const E = (h - (r - 1) / 2) * d, F = y - w, V = Math.sqrt(b ** 2 + F ** 2) * E / b, $ = F / b, S = o / 2, A = i / 2, T = v < g ? -1 : 1, B = (-1 * S ** 2 * $ * V + S * A * Math.sqrt(Math.abs(A ** 2 + $ ** 2 * S ** 2 - V ** 2)) / T) / (A ** 2 + S ** 2 * $ ** 2), I = $ * B + V;
    return { x: v - B, y: w - I };
  },
  getCirclePointBasic(s, n, e, t, o, i, a, c, l) {
    const r = s + o / 2, h = n + i / 2, d = e + a / 2, f = t + c / 2, g = d - r, y = f - h, v = Math.sqrt(g * g + y * y), w = v - l, b = w * g / v * -1, P = w * y / v * -1;
    return { x: d + b, y: f + P };
  },
  getCirclePointPlus(s, n, e, t, o, i, a, c) {
    const l = s + o / 2, r = n + i / 2, h = e + a / 2, d = t + c / 2, f = h - l, g = d - r, y = Math.sqrt(f * f + g * g), v = (y - o / 2) * f / y * -1, w = (y - i / 2) * g / y * -1;
    return { x: h + v, y: d + w };
  },
  getOvalPoint(s, n, e, t, o, i = 180) {
    const a = t * (360 / o), c = (180 - i + a) * Math.PI / 180;
    return {
      x: s + e * Math.sin(c),
      y: n + e * Math.cos(c) * -1
    };
  },
  getAngleType(s, n) {
    if (s >= 0 && n >= 0)
      return 1;
    if (s < 0 && n >= 0)
      return 2;
    if (s < 0 && n < 0)
      return 3;
    if (s >= 0 && n < 0)
      return 4;
  },
  getTextAngle(s, n, e, t) {
    let o = Math.atan2(t - n, e - s) * 180 / Math.PI;
    return o < 0 && (o += 360), o > 90 && o <= 270 && (o += 180), o >= 360 && (o -= 360), Math.round(o);
  },
  getTreePointFromTop(s, n, e, t, o, i) {
    return s ? {
      x: s - 300 + Math.max(600 / ((o === 1 ? 2 : o) - 1), 80) * t,
      y: n + e
    } : {
      x: (i.canvas_width - i.node_width) / 2,
      y: (i.canvas_height - i.node_height) / 2 - 200
    };
  },
  getTreePointFromRight(s, n, e, t, o, i) {
    return s ? {
      x: s - e,
      y: n - 200 + Math.max(400 / ((o === 1 ? 2 : o) - 1), 80) * t
    } : {
      x: (i.canvas_width - i.node_width) / 2 + 300,
      y: (i.canvas_height - i.node_height) / 2
    };
  },
  getTreePointFromBottom(s, n, e, t, o, i) {
    return s ? {
      x: s - 300 + Math.max(600 / ((o === 1 ? 2 : o) - 1), 80) * t,
      y: n - e
    } : {
      x: (i.canvas_width - i.node_width) / 2,
      y: (i.canvas_height - i.node_height) / 2 + 200
    };
  },
  getTreePointFromLeft(s, n, e, t, o, i) {
    return s ? {
      x: s + e,
      y: n - 200 + Math.max(400 / ((o === 1 ? 2 : o) - 1), 80) * t
    } : {
      x: (i.canvas_width - i.node_width) / 2 - 300,
      y: (i.canvas_height - i.node_height) / 2
    };
  }
};
class Ae extends ze {
  constructor(e, t, o) {
    super(e, t);
    C(this, "layoutOptions");
    C(this, "fastStart", !1);
    C(this, "maxLayoutTimes", 300);
    C(this, "byNode", !0);
    C(this, "byLine", !0);
    C(this, "lockX", !1);
    C(this, "lockY", !1);
    C(this, "force_node_repulsion", 1);
    C(this, "force_line_elastic", 1);
    C(this, "justLayoutSingleNode", !1);
    C(this, "layoutTimes", 0);
    C(this, "prev10", []);
    C(this, "visibleNodes", []);
    C(this, "viewUpdate");
    C(this, "calcNodeMap", /* @__PURE__ */ new WeakMap());
    C(this, "forCalcNodes", []);
    C(this, "maxVaildLineLength", 300);
    C(this, "minVaildLineLength", 30);
    C(this, "zeroEffectNodeDistance", 400);
    C(this, "minNodeDistance", 30);
    C(this, "maxMoveSpeed", 100);
    this.layoutOptions = e, this.layoutOptions.fastStart !== void 0 && (this.fastStart = this.layoutOptions.fastStart), this.layoutOptions.maxLayoutTimes !== void 0 && (this.maxLayoutTimes = this.layoutOptions.maxLayoutTimes), this.layoutOptions.byNode !== void 0 && (this.byNode = this.layoutOptions.byNode), this.layoutOptions.byLine !== void 0 && (this.byLine = this.layoutOptions.byLine), this.layoutOptions.force_node_repulsion !== void 0 && (this.force_node_repulsion = this.layoutOptions.force_node_repulsion), this.layoutOptions.force_line_elastic !== void 0 && (this.force_line_elastic = this.layoutOptions.force_line_elastic), this.layoutOptions.force_x_coefficient === void 0 && (this.layoutOptions.force_x_coefficient = 1), this.layoutOptions.force_y_coefficient === void 0 && (this.layoutOptions.force_y_coefficient = 1), this.layoutOptions.disableLiveChanges === void 0 && (this.layoutOptions.disableLiveChanges = !1), this.requireLinks = !0, o && this.setGraphInstance(o);
  }
  refresh() {
    this.placeNodes(this.allNodes, this.rootNode);
  }
  placeNodes(e, t) {
    if (u("!!!SeeksForceLayouter.placeNodes"), t)
      u("layout by root:", t);
    else {
      u("root is null:", t);
      return;
    }
    if (this.allNodes = e, this.rootNode = t, this.layoutOptions.fixedRootNode) {
      if (!Number.isNaN(t.x) || t.x === void 0)
        t.lot.x = x.getLotXByNodeX(this.graphOptions, t), t.lot.y = x.getLotYByNodeY(this.graphOptions, t);
      else {
        const i = this.layoutOptions.centerOffset_x || 0, a = this.layoutOptions.centerOffset_y || 0;
        t.lot.x = 0 + i, t.lot.y = 0 + a;
      }
      const o = this.easyAnalysisNodes(t);
      this.easyPlaceRelativePosition(t, o), o.forEach((i) => {
        if (i.fixed === !0 || !x.isAllowShowNode(i))
          return;
        const a = i.offset_x || 0, c = i.offset_y || 0;
        i.x = i.lot.x + a - x.getNodeWidth(i, this.graphOptions) / 2, i.y = i.lot.y + c - x.getNodeHeight(i, this.graphOptions) / 2, i.lot.placed = !0;
      });
    } else
      this.fastStart ? (u("!!!initNodesPosition fastStart"), this.allNodes.forEach((o) => {
        o.fixed !== !0 && (o.lot.placed || (o.x || (o.x = Math.floor(Math.random() * 200) - 100), o.x || (o.y = Math.floor(Math.random() * 200) - 100), o.lot.placed = !0));
      })) : (u("!!!initNodesPosition....."), this.easyPlaceGroupNodes(this.rootNode).forEach((i) => {
        if (i.fixed === !0 || !x.isAllowShowNode(i))
          return;
        const a = i.offset_x || 0, c = i.offset_y || 0;
        i.x = i.lot.x + a - x.getNodeWidth(i, this.graphOptions) / 2, i.y = i.lot.y + c - x.getNodeHeight(i, this.graphOptions) / 2, i.lot.placed = !0;
      }));
    if (u("Start Auto Layout....."), this.updateVisibleNodes(), this.isMainLayouer && this.graphOptions.autoLayouting) {
      u("!!!autoLayouting.....");
      return;
    }
    this.autoLayout(!0);
  }
  easyPlaceGroupNodes(e) {
    if (u("[layout canvasOffset]", this.graphOptions.viewSize, this.graphOptions.canvasSize), e) {
      e.fixed ? (e.origin_x === void 0 && (e.origin_x = e.x, e.origin_y = e.y), e.lot.x = e.origin_x, e.lot.y = e.origin_y, u("root fixed position:", e.lot.x, e.lot.y)) : this.layoutOptions.fixedRootNode ? (e.lot.x = x.getLotXByNodeX(this.graphOptions, e), e.lot.y = x.getLotYByNodeY(this.graphOptions, e)) : (e.lot.x = 0, e.lot.y = 0, u("root position:", e.lot.x, e.lot.y));
      const t = this.easyAnalysisNodes(e);
      return this.easyPlaceRelativePosition(e, t), t;
    }
    return [];
  }
  easyAnalysisNodes(e) {
    this.allNodes.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.parent = void 0, i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.placed = !1;
    });
    const t = [], o = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    return x.analysisNodes4Didirectional(t, [e], 0, o, 0), t;
  }
  easyPlaceRelativePosition(e, t) {
    t.forEach((i) => {
      if (i.lot.subling.level === 1) {
        const a = i.lot.subling;
        if (a) {
          const c = oe.getOvalPoint(e.lot.x, e.lot.y, a.level * 50, i.lot.strength_plus - i.lot.strength / 2, a.all_strength, this.layoutOptions.startAngle);
          i.lot.x = c.x, i.lot.y = c.y;
        }
      }
    }), t.forEach((i) => {
      const a = i.lot.subling;
      if (a && a.level > 1) {
        const c = i.lot.parent.lot.strength_plus - i.lot.parent.lot.strength, r = (i.lot.parent.lot.strength_plus - c) / (i.lot.parent.lot.childs.length + 1) * (i.lot.index_of_parent + 1), h = oe.getOvalPoint(e.lot.x, e.lot.y, (a.level - 1) * (100 + (a.level - 1) * 60) + 50, c + r, i.lot.parent.lot.subling.all_strength, this.layoutOptions.startAngle);
        i.lot.x = h.x, i.lot.y = h.y;
      }
    });
  }
  updateVisibleNodes(e) {
    this.visibleNodes = [], e && (this.allNodes = e), this.allNodes.forEach((t) => {
      x.isAllowShowNode(t) && (t.lot ? t.lot.placed = !0 : (u("node miss lot:", t.text), t.lot = {
        placed: !0,
        childs: []
      }), this.visibleNodes.push(t));
    }), this.resetCalcNodes(), u("visibleNodes:", this.visibleNodes.length);
  }
  autoLayout(e = !1) {
    this.layoutTimes = 0, this.updateVisibleNodes(), u("Layout set viewUpdate:", this.viewUpdate), this.doForceLayout(0);
  }
  layoutFinished() {
    this.isMainLayouer && (this.graphOptions.autoLayouting = !1), u("Layout finished"), this.layoutOptions.disableLiveChanges && (this.visibleNodes.forEach((e) => {
      const t = this.calcNodeMap.get(e);
      e.x = t.x, e.y = t.y;
    }), this.viewUpdate && this.viewUpdate(), u("Layout apply finished"));
  }
  resetCalcNodes() {
    u("resetCalcNodes:", this.visibleNodes.length), this.forCalcNodes = [], this.calcNodeMap = /* @__PURE__ */ new WeakMap(), this.visibleNodes.forEach((e) => {
      const t = {
        rgNode: e,
        Fx: 0,
        Fy: 0,
        x: e.x,
        y: e.y,
        ignoreForce: e.dragging || this.justLayoutSingleNode && !e.singleNode,
        force_weight: e.force_weight || 1,
        forceCenterOffset_X: (e.width || e.el.offsetWidth || 60) / 2,
        forceCenterOffset_Y: (e.height || e.el.offsetHeight || 60) / 2,
        fixed: e.fixed || !1
      };
      this.forCalcNodes.push(t), this.calcNodeMap.set(e, t);
    });
  }
  doForceLayout(e) {
    if (this.graphOptions.instanceDestroyed) {
      u("stop layout:instanceDestroyed");
      return;
    }
    let t = "0";
    if (e > 0 ? (this.prev10.length >= 10 && (this.prev10.splice(0, 1), t = (1e3 / ((this.prev10[this.prev10.length - 1] - this.prev10[0]) / 10)).toFixed(1)), this.prev10.push(e)) : this.visibleNodes.length === 0 && this.updateVisibleNodes(), u("this.layoutTimes:", this.layoutTimes, "of", this.maxLayoutTimes, "Current refresh rate:", t, "Hz", this.visibleNodes.length), this.layoutTimes > this.maxLayoutTimes) {
      this.layoutFinished();
      return;
    }
    this.isMainLayouer && (this.graphOptions.autoLayouting = !0), this.layoutTimes++, this.calcNodesPosition();
    for (const o of this.forCalcNodes)
      this.applyToNodePosition(o);
    this.layoutOptions.disableLiveChanges ? requestAnimationFrame(this.doForceLayout.bind(this)) : (this.viewUpdate && this.viewUpdate(), requestAnimationFrame(this.doForceLayout.bind(this)));
  }
  setGraphInstance(e) {
    this.viewUpdate = () => {
      e._dataUpdated();
    }, e.addEventListener((t, o) => {
      if (t === "node-drag-start") {
        const i = this.calcNodeMap.get(o.node);
        i && (i.ignoreForce = !0);
      } else if (t === "node-dragging") {
        const i = this.calcNodeMap.get(o.node);
        i && (i.x = o.x, i.y = o.y);
      } else if (t === "node-drag-end") {
        const i = this.calcNodeMap.get(o.node);
        i && (i.ignoreForce = !1);
      }
    });
  }
  calcNodesPosition() {
    if (this.byNode)
      for (let e = 0; e < this.forCalcNodes.length; e++) {
        const t = this.forCalcNodes[e];
        if (!t.ignoreForce && !t.fixed) {
          for (let o = 0; o < this.forCalcNodes.length; o++)
            if (e !== o) {
              const i = this.forCalcNodes[o];
              if (i.ignoreForce)
                continue;
              this.addGravityByNode(t, i);
            }
        }
      }
    if (this.byLine) {
      if (this.allLinks && this.allLinks.length > 0) {
        for (const e of this.allLinks)
          if (!e.forDisplayOnly) {
            let t = 1;
            for (const o of e.relations)
              o.force_elastic && o.force_elastic !== 1 && (t = o.force_elastic);
            if (this.visibleNodes.includes(e.fromNode) && this.visibleNodes.includes(e.toNode)) {
              const o = this.calcNodeMap.get(e.fromNode), i = this.calcNodeMap.get(e.toNode);
              this.addElasticByLine(
                o,
                i,
                t
              );
            }
          }
      } else
        for (const e of this.visibleNodes)
          if (e.lot && e.lot.parent) {
            const t = this.calcNodeMap.get(e.lot.parent), o = this.calcNodeMap.get(e);
            this.addElasticByLine(
              t,
              o,
              1
            );
          }
    }
  }
  stop() {
    u("[SeeksForceLayouter]stop:", this.graphOptions.autoLayouting), this.layoutTimes = 1e6;
  }
  addElasticByLine(e, t, o = 1) {
    const i = e.x, a = e.y, c = t.x, l = t.y;
    let r = Math.sqrt((a - l) ** 2 + (i - c) ** 2);
    if (r < this.minVaildLineLength)
      return;
    r > this.maxVaildLineLength && (r = this.maxVaildLineLength);
    const h = (r - this.minVaildLineLength) * 0.05 * this.force_line_elastic * o, d = h, f = h, g = (i - c) / r, y = (a - l) / r;
    this.addFtoNode(e, g * d * -1, y * d * -1), this.addFtoNode(t, g * f, y * f);
  }
  addGravityByNode(e, t) {
    const o = e.x, i = e.y, a = t.x, c = t.y;
    if (Math.abs(o - a) > this.zeroEffectNodeDistance || Math.abs(i - c) > this.zeroEffectNodeDistance)
      return;
    const l = Math.sqrt((i - c) ** 2 + (o - a) ** 2);
    if (l > this.zeroEffectNodeDistance)
      return;
    let r = (this.zeroEffectNodeDistance - l) * 0.05 * this.force_node_repulsion;
    l < this.minNodeDistance && (r = r * 2);
    const h = (o - a) / l, d = (i - c) / l;
    this.addFtoNode(e, h * r, d * r);
  }
  addFtoNode(e, t, o) {
    if (e.ignoreForce || Number.isNaN(t) || Number.isNaN(o))
      return;
    t > 50 && (t = 50), o > 50 && (o = 50), t < -50 && (t = -50), o < -50 && (o = -50);
    const i = e.force_weight || 1;
    this.lockX || (e.Fx += t * (1 / i)), this.lockY || (e.Fy += o * (1 / i));
  }
  applyToNodePosition(e) {
    if (e.fixed)
      return;
    let t = e.Fx, o = e.Fy;
    if (t > this.maxMoveSpeed && (t = this.maxMoveSpeed), o > this.maxMoveSpeed && (o = this.maxMoveSpeed), t < -this.maxMoveSpeed && (t = -this.maxMoveSpeed), o < -this.maxMoveSpeed && (o = -this.maxMoveSpeed), e.x = e.x + t * this.layoutOptions.force_x_coefficient, e.y = e.y + o * this.layoutOptions.force_y_coefficient, !this.layoutOptions.disableLiveChanges) {
      const i = e.rgNode;
      e.ignoreForce || (i.x = e.x, i.y = e.y);
    }
    e.Fx = e.Fx * 0.7, e.Fy = e.Fy * 0.7;
  }
}
class co extends Ae {
  constructor(e, t, o) {
    super(e, t, o);
    C(this, "layoutOptions");
    this.layoutOptions = e;
  }
  async refresh() {
    u("SeeksCenterLayouter:refresh"), await this.placeNodes(this.allNodes, this.rootNode);
  }
  async placeNodes(e, t) {
    if (u("SeeksCenterLayouter:placeNodes"), !t) {
      u("root is null:", t);
      return;
    }
    u("layout by root:", t), this.allNodes = e, this.rootNode = t, e.forEach((a) => {
      a.lot.eached = !1, a.lot.notLeafNode = !1, a.lot.childs = [], a.lot.parent = void 0, a.lot.index_of_parent = 0, a.lot.strength = 0, a.lot.placed = !1;
    });
    let o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    if (x.analysisNodes(o, [this.rootNode], 0, i), o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, x.analysisNodes4Didirectional(o, [this.rootNode], 0, i, 0), t.fixed)
      t.origin_x === void 0 && (t.origin_x = t.x, t.origin_y = t.y), t.lot.x = t.origin_x, t.lot.y = t.origin_y, u("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", t.text, t.x, t.y);
    else if (this.layoutOptions.fixedRootNode)
      t.lot.x = x.getLotXByNodeX(this.graphOptions, t), t.lot.y = x.getLotYByNodeY(this.graphOptions, t);
    else {
      const a = this.layoutOptions.centerOffset_x || 0, c = this.layoutOptions.centerOffset_y || 0;
      t.lot.x = 0 + a, t.lot.y = 0 + c;
    }
    u("root position:", t.lot.x, t.lot.y), this.placeRelativePosition(this.rootNode, o, i), this.graphOptions.useAnimationWhenExpanded ? (u("Play layout animation....."), await this.animationLayout()) : o.forEach((a) => {
      if (a.fixed === !0 || !x.isAllowShowNode(a))
        return;
      const c = a.offset_x || 0, l = a.offset_y || 0, r = -x.getNodeWidth(a, this.graphOptions) / 2, h = -x.getNodeHeight(a, this.graphOptions) / 2;
      a.x = a.lot.x + c + r, a.y = a.lot.y + l + h, a.lot.placed = !0;
    });
  }
  getLevelDistanceArr() {
    let e = [];
    if (this.layoutOptions.levelDistance && (typeof this.layoutOptions.levelDistance == "string" ? e = this.layoutOptions.levelDistance.split(",").map((t) => Number.parseInt(t)) : Array.isArray(this.layoutOptions.levelDistance) && (e = this.layoutOptions.levelDistance), e.length > 0 && e.length < 10))
      for (let t = e.length; t < 10; t++)
        e.push(e[e.length - 1]);
    return e;
  }
  getLevelR(e, t) {
    if (e.length === 0)
      return;
    let o = 0;
    for (let i = 0; i < t && i < e.length; i++)
      o += e[i];
    return o;
  }
  placeRelativePosition(e, t, o) {
    const i = this.layoutOptions.distance_coefficient === void 0 ? 1 : this.layoutOptions.distance_coefficient, a = this.getLevelDistanceArr(), c = Math.min(this.graphOptions.viewSize.height, this.graphOptions.viewSize.width) * 0.4;
    let l = Math.min(Math.max(c, 150), 400) * i;
    u("analyticResult:", this.layoutOptions, o, c, l, i, a);
    let r = 0;
    t.forEach((d) => {
      const f = d.lot.subling;
      if (f && f.level === 1) {
        r = Math.round(f.all_size * 60 / Math.PI / 2), r < l && (r = l);
        const g = this.getLevelR(a, f.level) || f.level * r, y = oe.getOvalPoint(e.lot.x, e.lot.y, g, d.lot.strength_plus - d.lot.strength / 2, f.all_strength, this.layoutOptions.startAngle);
        d.lot.x = y.x, d.lot.y = y.y;
      }
    });
    const h = Math.round(300 * i);
    t.forEach((d) => {
      const f = d.lot.subling;
      if (f && f.level > 1) {
        const g = d.lot.parent.lot.strength_plus - d.lot.parent.lot.strength, v = (d.lot.parent.lot.strength_plus - g) / (d.lot.parent.lot.childs_size + 1) * (d.lot.index_of_parent + 1), w = this.getLevelR(a, f.level) || (f.level - 1) * h + r, b = oe.getOvalPoint(e.lot.x, e.lot.y, w, g + v, d.lot.parent.lot.subling.all_strength, this.layoutOptions.startAngle);
        d.lot.x = b.x, d.lot.y = b.y;
      }
    });
  }
}
class ho extends Ae {
  constructor(n, e, t) {
    super(n, e, t);
  }
  async refresh() {
    await this.placeNodes(this.allNodes, this.rootNode);
  }
  async placeNodes(n, e) {
    if (e)
      u("layout by root:", e);
    else {
      u("root is null:", e);
      return;
    }
    this.allNodes = n, this.rootNode = e, n.forEach((l) => {
      l.lot.eached = !1, l.lot.notLeafNode = !1, l.lot.childs = [], l.lot.parent = void 0, l.lot.index_of_p_childs = 0, l.lot.strength = 0;
    });
    const t = this.layoutOptions.centerOffset_x || 0, o = this.layoutOptions.centerOffset_y || 0, i = {
      x: t,
      y: o
    }, a = this.allNodes.length;
    let c = a * 90 / Math.PI / 2;
    c < 200 && (c = 200), c > 800 && (c = 800), this.allNodes.forEach((l, r) => {
      const h = oe.getOvalPoint(i.x, i.y, c, r, a);
      l.lot.x = h.x, l.lot.y = h.y;
    }), this.graphOptions.useAnimationWhenExpanded ? (u("Play layout animation....."), await this.animationLayout()) : this.allNodes.forEach((l) => {
      if (l.fixed === !0 || !x.isAllowShowNode(l))
        return;
      const r = l.offset_x || 0, h = l.offset_y || 0, d = -x.getNodeWidth(l, this.graphOptions) / 2, f = -x.getNodeHeight(l, this.graphOptions) / 2;
      l.x = l.lot.x + r + d, l.y = l.lot.y + h + f, l.lot.placed = !0;
    });
  }
}
class fo extends ze {
  constructor(e, t) {
    super(e, t);
    C(this, "graphOptions");
    C(this, "layoutOptions");
    C(this, "allNodes", []);
    C(this, "__origin_nodes", []);
    this.layoutOptions = e, this.graphOptions = t;
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(e, t) {
    if (t)
      u("layout by root:", t);
    else {
      u("root is null:", t);
      return;
    }
    u("allNodes:", e.length), this.__origin_nodes = e, this.rootNode = t, e.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.parent = void 0, i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.placed = !1, i.x || (i.x = 0), i.y || (i.y = 0), Number.isNaN(i.x) && (i.x = 0), Number.isNaN(i.y) && (i.y = 0);
    }), this.allNodes = [];
    const o = {
      max_strength: 1,
      max_deep: 1,
      max_length: 1
    };
    x.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, o, 0), u("[layout canvasOffset]", this.graphOptions.viewSize, this.graphOptions.canvasSize);
  }
}
class uo extends ze {
  constructor(e, t, o) {
    super(e, t);
    C(this, "graphInstance");
    C(this, "layoutOptions");
    C(this, "levelDistanceArr", []);
    this.layoutOptions = e, u("new SeeksBidirectionalTreeLayouter:", this.layoutOptions), this.layoutOptions.from || (this.layoutOptions.from = "left"), this.layoutOptions.levelDistance && (typeof this.layoutOptions.levelDistance == "string" ? this.levelDistanceArr = this.layoutOptions.levelDistance.split(",").map((i) => Number.parseInt(i)) : Array.isArray(this.layoutOptions.levelDistance) && (this.levelDistanceArr = this.layoutOptions.levelDistance)), this.requireLinks = !0, this.graphInstance = o;
  }
  async refresh() {
    u("SeeksBidirectionalTreeLayouter:refresh:nodes:", this.allNodes.length), await this.placeNodes(this.allNodes, this.rootNode);
  }
  analysisNodes4Didirectional(e, t, o, i) {
    this.analysisBothWay(e, t, o, i);
    const a = {};
    e.forEach((r) => {
      const h = r.lot.level + "";
      a[h] || (a[h] = []), a[h].push(r), r.lot.subling = {
        level: r.lot.level,
        all_size: 0,
        all_strength: 0
      };
    }), e.forEach((r) => {
      const h = r.lot.level + "", d = a[h], f = d.length;
      r.lot.index_of_level = d.indexOf(r), r.lot.subling.all_size = f, r.lot.subling.all_strength += r.lot.strength || 1, r.lot.strength_plus = r.lot.subling.all_strength;
    }), e.forEach((r) => {
      r.lot.childs_size > 0 && (r.lot.strengthWithChilds = 0);
    }), e.forEach((r) => {
      r.lot.childs_size === 0 && (r.lot.strengthWithChilds = 1, x.conductStrengthToParents(r));
    });
    const c = Object.keys(a).map((r) => Number.parseInt(r)).sort(), l = (r) => {
      const h = r + "", d = a[h];
      let f = 0;
      d.forEach((g) => {
        g.lot.parent && f < g.lot.parent.lot.strengthWithChilds_from && (f = g.lot.parent.lot.strengthWithChilds_from), r === 0 ? f += 1 : g.lot.strengthWithChilds_from = f, u("levels:", r, f, g.text, g.lot.strengthWithChilds), f += g.lot.strengthWithChilds;
      });
    };
    [0].forEach(l), c.filter((r) => r > 0).forEach(l), c.filter((r) => r < 0).forEach(l);
  }
  analysisBothWay(e, t, o, i) {
    u(`level ${o} size: ${t.length}`), t.length > i.max_length && (i.max_length = t.length), o > i.max_deep && (i.max_deep = o);
    const a = {
      level: o,
      all_size: t.length,
      all_strength: 0
    };
    t.forEach((l) => {
      l.lot || (l.lot = { childs: [] }), l.lot.eached = !0, l.lot.subling = a, l.lot.level = o, e.push(l);
    });
    let c = 0;
    t.forEach((l) => {
      let r = 0, h = 0, d = [];
      l.targetFrom.forEach((f) => {
        f.lot || (f.lot = { eached: !1, childs: [] }), f.lot.eached || (f.lot.parent = l, x.isAllowShowNode(f) ? (f.lot.eached = !0, f.lot.index_of_parent = h++, l.lot.childs.push(f), d.push(f), r++) : l.lot.childs.push(f));
      }), this.analysisBothWay(e, d, o - 1, i), d = [], l.targetTo.forEach((f) => {
        f.lot || (f.lot = { eached: !1, childs: [] }), f.lot.eached || (f.lot.parent = l, x.isAllowShowNode(f) ? (f.lot.eached = !0, f.lot.index_of_parent = h++, l.lot.childs.push(f), d.push(f), r++) : l.lot.childs.push(f));
      }), this.analysisBothWay(e, d, o + 1, i), l.lot.strength = r > 0 ? r : 1, a.all_strength += l.lot.strength, l.lot.strength_plus = a.all_strength, l.lot.index_of_level = c, l.lot.childs_size = r, c++;
    }), a.all_strength > i.max_strength && (i.max_strength = a.all_strength);
  }
  async placeNodes(e, t) {
    if (u("SeeksBidirectionalTreeLayouter:placeNodes"), t)
      u("layout by root:", t);
    else {
      console.error("root is null");
      return;
    }
    this.rootNode = t, this.allNodes = e, u("allNodes:", e.length), e.forEach((r) => {
      r.lot.eached = !1, r.lot.notLeafNode = !1, r.lot.childs = [], r.lot.parent = void 0, r.lot.index_of_parent = 0, r.lot.strength = 0, r.lot.strengthWithChilds_from = 0, r.lot.strengthWithChilds = 0, r.lot.placed = !1;
    });
    let o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    x.analysisNodes(o, [this.rootNode], 0, i), o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(o, [this.rootNode], 0, i), this.placeNodesPosition(this.rootNode, o, i), u("allNodes:", o.length), this.graphOptions.useAnimationWhenExpanded ? (u("Play layout animation....."), await this.animationLayout(), u("create rootNode coordinates:3", t.x, t.y)) : (this.allNodes.forEach((r) => {
      if (r.fixed === !0) {
        r.lot.placed = !0;
        return;
      }
      !x.isAllowShowNode(r) || (Number.isNaN(r.lot.x) && (u("bad lot x:", r.text, r.lot.x), r.lot.x = 0), Number.isNaN(r.lot.y) && (u("bad lot y:", r.text, r.lot.y), r.lot.y = 0), r.x = x.getNodeXByLotX(this.graphOptions, r), r.y = x.getNodeYByLotY(this.graphOptions, r), r.lot.placed = !0);
    }), u("create rootNode coordinates:1", t.x, t.y));
    const a = o.filter((r) => r.lot.level === 0), c = [];
    this.allLinks.forEach((r) => {
      a.includes(r.fromNode) && !a.includes(r.toNode) && c.push(r.toNode), a.includes(r.toNode) && !a.includes(r.fromNode) && c.push(r.fromNode);
    }), c.forEach((r) => {
      r.fixed = !0;
    }), a.push(...c);
    const l = new Ae({
      layoutName: "force",
      maxLayoutTimes: 100,
      force_node_repulsion: 0.1,
      force_line_elastic: 1,
      fixedRootNode: !0
    }, this.graphOptions, this.graphInstance);
    l.isMainLayouer = !1, l.requireLinks = !0, this.layoutOptions.from === "left" || this.layoutOptions.from === "right" ? l.lockX = !0 : l.lockY = !0, l.visibleNodes = a, l.setLinks(this.allLinks), l.viewUpdate = this.viewUpdate, l.resetCalcNodes(), l.doForceLayout(0);
  }
  placeNodesPosition(e, t, o) {
    if (e.fixed !== !0) {
      const i = this.layoutOptions.centerOffset_x || 0, a = this.layoutOptions.centerOffset_y || 0;
      e.lot.x = i, e.lot.y = a, this.layoutOptions.fixedRootNode ? (e.lot.x = x.getLotXByNodeX(this.graphOptions, e), e.lot.y = x.getLotYByNodeY(this.graphOptions, e)) : this.layoutOptions.from === "top" ? e.lot.y -= this.graphOptions.viewSize.height / 2 - 100 : this.layoutOptions.from === "bottom" ? e.lot.y += this.graphOptions.viewSize.height / 2 - 200 : this.layoutOptions.from === "right" ? e.lot.x += this.graphOptions.viewSize.width / 2 - 100 : e.lot.x -= this.graphOptions.viewSize.width / 2 - 100, u("debug0910:Graph center:", e.lot.x, e.lot.y, { _center_offset_x: i, _center_offset_y: a });
    } else
      e.origin_x === void 0 && (e.origin_x = e.x, e.origin_y = e.y), e.lot.x = e.origin_x, e.lot.y = e.origin_y, u("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", e.text, e.x, e.y);
    e.lot.placed = !0, this.placeRelativePosition(e, t, o);
  }
  placeRelativePosition(e, t, o) {
    const i = this.graphOptions.viewSize;
    if (this.layoutOptions.from === "left" || this.layoutOptions.from === "right") {
      const a = q(this.layoutOptions.min_per_height) || 80, c = q(this.layoutOptions.max_per_height) || 400, l = q(this.layoutOptions.min_per_width) || 430, r = q(this.layoutOptions.max_per_width) || 650;
      let h = Math.round((i.width - 10) / (o.max_deep + 2));
      h < l && (h = l), h > r && (h = r);
      let d = Math.round(i.height / (o.max_strength + 1));
      d < a && (d = a), d > c && (d = c), t.forEach((f) => {
        f.fixed !== !0 && f.lot.placed !== !0 && f !== e && (this.layoutOptions.from === "right" ? f.lot.x = e.lot.x - this.getLevelDistance(f, f.lot.subling.level, h) : f.lot.x = e.lot.x + this.getLevelDistance(f, f.lot.subling.level, h));
      }), t.forEach((f) => {
        f.fixed !== !0 && (f.lot.level === 0 ? f !== e && (f.lot.y = e.lot.y + d * f.lot.index_of_level) : f.lot.y = e.lot.y + d * (o.max_strength / -2 + f.lot.strengthWithChilds_from + f.lot.strengthWithChilds / 2));
      });
    } else {
      const a = q(this.layoutOptions.min_per_height) || 350, c = q(this.layoutOptions.max_per_height) || 400, l = q(this.layoutOptions.min_per_width) || 250, r = q(this.layoutOptions.max_per_width) || 500;
      let h = Math.round((i.width - 10) / (o.max_strength + 2));
      h < l && (h = l), h > r && (h = r);
      let d = Math.round((i.height - 10) / (o.max_deep + 2));
      d < a && (d = a), d > c && (d = c), t.forEach((f) => {
        f.fixed !== !0 && f.lot.placed !== !0 && f !== e && (this.layoutOptions.from === "bottom" ? f.lot.y = e.lot.y - this.getLevelDistance(f, f.lot.subling.level, d) : f.lot.y = e.lot.y + this.getLevelDistance(f, f.lot.subling.level, d));
      }), t.forEach((f) => {
        f.fixed !== !0 && f.lot.level !== 0 && (f.lot.x = e.lot.x + h * (o.max_strength / -2 + f.lot.strengthWithChilds_from + f.lot.strengthWithChilds / 2));
      });
    }
  }
  getLevelDistance(e, t, o) {
    const i = Math.abs(t);
    if (this.levelDistanceArr && this.levelDistanceArr.length > 0) {
      let a = 0;
      for (let c = 0; c < i; c++) {
        const l = this.levelDistanceArr[c] || 100;
        a += l;
      }
      return t > 0 ? a : a * -1;
    } else
      return t * o;
  }
}
class po extends ze {
  constructor(e, t) {
    super(e, t);
    C(this, "enableGatherNodes", !1);
    C(this, "layoutOptions");
    C(this, "levelDistanceArr", []);
    this.layoutOptions = e, u("new SeeksBidirectionalTreeLayouter:", this.layoutOptions), this.layoutOptions.from || (this.layoutOptions.from = "left"), this.layoutOptions.levelDistance && (typeof this.layoutOptions.levelDistance == "string" ? this.levelDistanceArr = this.layoutOptions.levelDistance.split(",").map((o) => Number.parseInt(o)) : Array.isArray(this.layoutOptions.levelDistance) && (this.levelDistanceArr = this.layoutOptions.levelDistance)), this.enableGatherNodes = this.layoutOptions.enableGatherNodes;
  }
  async refresh() {
    u("SeeksBidirectionalTreeLayouter:refresh:nodes:", this.allNodes.length), await this.placeNodes(this.allNodes, this.rootNode);
  }
  analysisNodes4Didirectional(e, t, o, i, a) {
    u(`${a} level ${o} size: ${t.length}`), t.length > i.max_length && (i.max_length = t.length), o > i.max_deep && (i.max_deep = o);
    const c = {
      level: o,
      all_size: t.length,
      all_strength: 0
    }, l = [];
    t.forEach((h) => {
      h.lot || (h.lot = { childs: [] }), h.lot.eached = !0, h.lot.subling = c, h.lot.level = o, e.push(h);
    });
    let r = 0;
    t.forEach((h) => {
      let d = 0, f = a === -1 ? h.targetFrom : h.targetTo;
      o !== 0 && (f = h.targetNodes);
      let g = 0;
      f.forEach((y) => {
        y.lot || (y.lot = { eached: !1, childs: [] }), y.lot.eached || (y.lot.parent = h, x.isAllowShowNode(y) ? (y.lot.eached = !0, y.lot.index_of_parent = g++, h.lot.childs.push(y), l.push(y), d++) : h.lot.childs.push(y));
      }), h.lot.strength = d > 0 ? d : 1, c.all_strength += h.lot.strength, h.lot.strength_plus = c.all_strength, h.lot.index_of_level = r, h.lot.childs_size = d, r++;
    }), c.all_strength > i.max_strength && (i.max_strength = c.all_strength), l.length > 0 ? this.analysisNodes4Didirectional(e, l, o + a, i, a) : (e.forEach((h) => {
      h.lot.strengthWithChilds = 1, x.conductStrengthToParents4Folder(h);
    }), x.analysisDataFolder([e[0]], 0, a));
  }
  async placeNodes(e, t) {
    if (u("SeeksBidirectionalTreeLayouter:placeNodes"), t)
      u("layout by root:", t);
    else {
      console.error("root is null");
      return;
    }
    this.rootNode = t, this.allNodes = e, u("allNodes:", e.length), e.forEach((a) => {
      a.lot.eached = !1, a.lot.notLeafNode = !1, a.lot.childs = [], a.lot.parent = void 0, a.lot.index_of_parent = 0, a.lot.strength = 0, a.lot.strengthWithChilds_from = 0, a.lot.strengthWithChilds = 0, a.lot.placed = !1;
    });
    let o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    x.analysisNodes(o, [this.rootNode], 0, i), o = [], i = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(o, [this.rootNode], 0, i, 1), this.placeNodesPosition(this.rootNode, o, i), u("allNodes:", o.length), this.graphOptions.useAnimationWhenExpanded ? (u("Play layout animation....."), await this.animationLayout(), u("create rootNode coordinates:3", t.x, t.y)) : (this.allNodes.forEach((a) => {
      if (a.fixed === !0) {
        a.lot.placed = !0;
        return;
      }
      !x.isAllowShowNode(a) || (Number.isNaN(a.lot.x) && (u("bad lot x:", a.text, a.lot.x), a.lot.x = 0), Number.isNaN(a.lot.y) && (u("bad lot y:", a.text, a.lot.y), a.lot.y = 0), a.x = x.getNodeXByLotX(this.graphOptions, a), a.y = x.getNodeYByLotY(this.graphOptions, a), a.lot.placed = !0);
    }), u("create rootNode coordinates:1", t.x, t.y));
  }
  placeNodesPosition(e, t, o) {
    if (e.fixed !== !0) {
      const i = this.layoutOptions.centerOffset_x || 0, a = this.layoutOptions.centerOffset_y || 0;
      e.lot.x = i, e.lot.y = a, this.layoutOptions.fixedRootNode ? (e.lot.x = x.getLotXByNodeX(this.graphOptions, e), e.lot.y = x.getLotYByNodeY(this.graphOptions, e)) : this.layoutOptions.from === "right" ? e.lot.x += this.graphOptions.viewSize.width / 2 - 100 : e.lot.x -= this.graphOptions.viewSize.width / 2 - 100, u("debug0910:Graph center:", e.lot.x, e.lot.y, { _center_offset_x: i, _center_offset_y: a });
    } else
      e.origin_x === void 0 && (e.origin_x = e.x, e.origin_y = e.y), e.lot.x = e.origin_x, e.lot.y = e.origin_y, u("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", e.text, e.x, e.y);
    e.lot.placed = !0, this.placeRelativePosition(e, t, o);
  }
  placeRelativePosition(e, t, o) {
    const i = q(this.layoutOptions.min_per_width) || 50, a = q(this.layoutOptions.min_per_height) || 40;
    t.forEach((c) => {
      c.fixed !== !0 && c.lot.placed !== !0 && c !== e && (this.layoutOptions.from === "right" ? c.lot.x = e.lot.x - this.getLevelDistance(c, c.lot.subling.level, i) : c.lot.x = e.lot.x + this.getLevelDistance(c, c.lot.subling.level, i));
    }), t.forEach((c) => {
      c.fixed !== !0 && c.lot.level !== 0 && (c.lot.y = e.lot.y + a * (c.lot.strengthWithChilds_from - 1));
    }), this.gatherNodes(t, "h", a);
  }
  gatherNodes(e, t, o) {
    if (!this.enableGatherNodes)
      return;
    const i = {};
    e.forEach((a) => {
      const c = a.lot.level + "";
      i[c] || (i[c] = []), i[c].push(a), a.lot.movedNodeSizeBefore = 1, a.lot.movedNodeSizeAfter = 1;
    }), e.forEach((a) => {
      if (a.fixed !== !0 && a.lot.level !== 0) {
        const c = a.lot.level + "", l = i[c];
        if (a.lot.strengthWithChilds === 1 && a.lot.childs_size <= 1) {
          const r = this.getBloomingNearByParent(a, a.lot.parent, l, t);
          r && (t === "h" ? a.lot.y - r.lot.y > 0 ? (a.lot.y = r.lot.y + o * r.lot.movedNodeSizeAfter, r.lot.movedNodeSizeAfter++) : (a.lot.y = r.lot.y - o * r.lot.movedNodeSizeBefore, r.lot.movedNodeSizeBefore++) : a.lot.x - r.lot.x > 0 ? (a.lot.x = r.lot.x + o * r.lot.movedNodeSizeAfter, r.lot.movedNodeSizeAfter++) : (a.lot.x = r.lot.x - o * r.lot.movedNodeSizeBefore, r.lot.movedNodeSizeBefore++));
        }
      }
    });
  }
  getBloomingNearByParent(e, t, o, i) {
    let a = 9999, c;
    for (const l of o)
      if (l.lot.childs_size > 1 && l.lot.parent === t) {
        const r = i === "h" ? l.lot.y - t.lot.y : l.lot.x - t.lot.x;
        Math.abs(r) < a && (a = Math.abs(r), c = l);
      }
    if (c && c !== e)
      return c;
  }
  getLevelDistance(e, t, o) {
    const i = Math.abs(t);
    if (this.levelDistanceArr && this.levelDistanceArr.length > 0) {
      let a = 0;
      for (let c = 0; c < i; c++) {
        const l = c >= this.levelDistanceArr.length ? this.levelDistanceArr[this.levelDistanceArr.length - 1] : this.levelDistanceArr[c];
        a += l;
      }
      return t > 0 ? a : a * -1;
    } else
      return t * o;
  }
}
const xt = (s, n, e) => {
  e || (console.warn("\u6CE8\u610F\uFF0C\u5728relation-graph@2.1.32\u4EE5\u53CA\u66F4\u6539\u7248\u672C\u4E2D\u4F7F\u7528createLayout\u65B9\u6CD5\u65F6\uFF0C\u9700\u8981\u63D0\u4F9B\u7B2C\u4E09\u4E2A\u53C2\u6570: graphInstance"), console.warn("Note that when using the createLayout method in relation-graph@2.1.32 and changed versions, you need to provide a third parameter: graphInstance")), wt(s);
  let t = null;
  if (s.layoutName === "tree" ? t = new ro(s, n) : s.layoutName === "center" ? t = new co(s, n, e) : s.layoutName === "circle" ? t = new ho(s, n, e) : s.layoutName === "force" ? t = new Ae(s, n, e) : s.layoutName === "fixed" ? t = new fo(s, n) : s.layoutName === "smart-tree" ? t = new uo(s, n, e) : s.layoutName === "folder" && (t = new po(s, n)), !t)
    throw new Error("unknown layout: " + s.layoutName);
  return n.isNeedShowAutoLayoutButton = s.allowAutoLayoutIfSupport !== !1 && t.autoLayout !== void 0, t;
}, wt = (s) => {
  if (typeof s.centerOffset_x == "string" && (s.centerOffset_x = parseInt(s.centerOffset_x)), typeof s.centerOffset_y == "string" && (s.centerOffset_y = parseInt(s.centerOffset_y)), s.layoutName === "center") {
    const n = s;
    n.layoutDirection === void 0 && (n.layoutDirection = "h"), n.centerOffset_x === void 0 && (n.centerOffset_x = 0), n.centerOffset_y === void 0 && (n.centerOffset_y = 0), n.layoutDirection = void 0;
  } else if (s.layoutName.includes("tree")) {
    const n = s;
    n.layoutDirection === void 0 && (n.layoutDirection = "h"), n.centerOffset_x === void 0 && (n.centerOffset_x = 0), n.centerOffset_y === void 0 && (n.centerOffset_y = 0), n.from === void 0 && (n.from = "top"), n.levelDistance === void 0 && (n.levelDistance = ""), (n.from === "top" || n.from === "bottom") && (n.layoutDirection = "v", u("set layoutDirection=v"), u("set defaultJunctionPoint=tb"), n.min_per_width === void 0 && (n.min_per_width = 100), n.max_per_width === void 0 && (n.max_per_width = 500), n.min_per_height === void 0 && (n.min_per_height = 300), n.max_per_height === void 0 && (n.max_per_height = 500)), (n.from === "left" || n.from === "right") && (n.layoutDirection = "h", u("set defaultJunctionPoint=lr"), n.min_per_width === void 0 && (n.min_per_width = 300), n.max_per_width === void 0 && (n.max_per_width = 500), n.min_per_height === void 0 && (n.min_per_height = 100), n.max_per_height === void 0 && (n.max_per_height = 500));
  } else
    (s.layoutName === "fixed" || s.layoutName === "force") && (s.layoutDirection = void 0);
}, Ct = {
  id: "rg-newNodeTemplate",
  x: 0,
  y: 0,
  text: "",
  styleClass: ""
};
let yo = 0;
const go = (s) => {
  !s.backgroundImage && (s.backgroundImage = s.backgrounImage), !s.backgroundImageNoRepeat && (s.backgroundImageNoRepeat = s.backgrounImageNoRepeat), typeof s.graphOffset_x == "string" && (s.graphOffset_x = parseInt(s.graphOffset_x)), typeof s.graphOffset_y == "string" && (s.graphOffset_y = parseInt(s.graphOffset_y)), s.defaultPloyLineRadius && (s.defaultPolyLineRadius = s.defaultPloyLineRadius);
  const n = {
    instanceId: "",
    debug: !0,
    graphLoading: !1,
    graphLoadingText: "",
    showMaskWhenLayouting: !1,
    instanceDestroyed: !1,
    useHorizontalView: !1,
    oldVueVersion: !1,
    ovUseNodeSlot: !1,
    ovUseLineSlot: !1,
    ovUseToolbarSlot: !1,
    ovUseNodeExpandHolderSlot: !1,
    showDebugPanel: !1,
    backgroundColor: void 0,
    backgroundImage: void 0,
    backgroundImageNoRepeat: void 0,
    downloadImageFileName: "",
    disableZoom: !1,
    disableDragNode: !1,
    disableDragLine: !0,
    moveToCenterWhenRefresh: !0,
    zoomToFitWhenRefresh: !0,
    useAnimationWhenRefresh: !1,
    defaultFocusRootNode: !0,
    disableNodeClickEffect: !1,
    disableLineClickEffect: !1,
    allowShowFullscreenMenu: !0,
    allowShowZoomMenu: !0,
    allowAutoLayoutIfSupport: !0,
    allowShowRefreshButton: !0,
    allowShowDownloadButton: !0,
    backgrounImageNoRepeat: !1,
    allowShowMiniToolBar: !0,
    toolBarVersion: "v2",
    toolBarDirection: "v",
    toolBarPositionH: "right",
    toolBarPositionV: "center",
    allowSwitchLineShape: !1,
    allowSwitchJunctionPoint: !1,
    isMoveByParentNode: !1,
    defaultExpandHolderPosition: "hide",
    defaultExpandHolderColor: void 0,
    defaultNodeBorderWidth: void 0,
    defaultNodeColor: "#409EFF",
    defaultNodeBorderColor: "#0c7ff6",
    defaultNodeFontColor: "#ffffff",
    defaultLineColor: "#cccccc",
    checkedLineColor: "#FD8B37",
    defaultLineFontColor: void 0,
    defaultLineWidth: 1,
    defaultLineShape: void 0,
    defaultLineTextOffset_x: void 0,
    defaultLineTextOffset_y: void 0,
    defaultNodeShape: void 0,
    defaultNodeWidth: void 0,
    defaultNodeHeight: void 0,
    defaultShowLineLabel: !0,
    hideNodeContentByZoom: !1,
    defaultJunctionPoint: void 0,
    defaultBottomJuctionPoint_X: void 0,
    defaultPolyLineRadius: void 0,
    disableDragCanvas: !1,
    placeSingleNode: !0,
    placeOtherGroup: !1,
    lineUseTextPath: !1,
    lineTextMaxLength: 66,
    multiLineDistance: 14,
    graphOffset_x: 0,
    graphOffset_y: 0,
    viewSize: { width: 300, height: 300 },
    viewELSize: { width: 1300, height: 800, left: 0, top: 100 },
    viewNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    canvasNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    defaultLineMarker: {
      markerWidth: 12,
      markerHeight: 12,
      refX: 6,
      refY: 6,
      color: void 0,
      data: "M2,2 L10,6 L2,10 L6,6 L2,2"
    },
    allowShowMiniView: !1,
    allowShowSettingPanel: !1,
    allowShowMiniNameFilter: !0,
    fullscreen: !1,
    checkedNodeId: "",
    checkedLineId: "",
    checkedLinkId: "",
    layouts: [],
    layoutLabel: "",
    layoutName: "tree",
    layoutClassName: "",
    layoutDirection: "h",
    useAnimationWhenExpanded: !1,
    reLayoutWhenExpandedOrCollapsed: !1,
    autoLayouting: !1,
    layouter: void 0,
    isNeedShowAutoLayoutButton: !1,
    canvasZoom: 100,
    showEasyView: !1,
    performanceMode: !1,
    canvasOpacity: 1,
    showSingleNode: !0,
    showNodeLabel: !0,
    showNodeShortLabel: !0,
    canvasSize: {
      width: 10,
      height: 10
    },
    canvasOffset: {
      x: 25,
      y: 27,
      zoom_buff_x: 0,
      zoom_buff_y: 0
    },
    creatingSelection: !1,
    selectionView: {
      x: 25,
      y: 27,
      width: 0,
      height: 0
    },
    creatingNodePlot: !1,
    showTemplateNode: !0,
    newNodeTemplate: Ke(JSON.parse(JSON.stringify(Ct))),
    creatingLinePlot: !1,
    newLineTemplate: {
      from: "newRelationTemplate-from",
      to: "newRelationTemplate-to",
      color: "",
      text: "new line"
    },
    newLinkTemplate: {
      fromNode: null,
      toNodeObject: null,
      toNode: {
        nothing: !0,
        x: 400,
        y: 400,
        el: {
          offsetWidth: 30,
          offsetHeight: 30
        }
      },
      relations: [{}]
    },
    data: {}
  };
  if (n.newLineTemplate = Je(n.newLineTemplate), s.layout && s.layouts)
    throw new Error("Graph options cannot have both layout and layouts properties !");
  const e = s.debug === !0;
  e && u("RGOptions:user instance options:", s), window && (window.relationGraphDebug = e);
  const t = Object.keys(n);
  s && Object.keys(s).forEach((i) => {
    if (i === "layouts" || i === "layout")
      return;
    const a = s[i];
    if (!t.includes(i)) {
      u("RGOptions: unknow option key:", i);
      return;
    }
    if (typeof a == "object") {
      u("RGOptions:user setting object:", i, a);
      const c = n[i];
      if (c && !Array.isArray(c) && a)
        Object.keys(c).forEach((l) => {
          c[l] = a[l];
        });
      else if (Array.isArray(c)) {
        const l = [];
        a.forEach((r) => {
          r && typeof r == "object" ? l.push(JSON.parse(JSON.stringify(r))) : l.push(r);
        }), n[i] = l;
      } else
        n[i] = a;
    } else
      n[i] = a;
  });
  let o = [];
  return !s.layouts || !Array.isArray(s.layouts) || s.layouts.length === 0 ? s.layout ? o = [s.layout] : o = [{
    label: "\u4E2D\u5FC3",
    layoutName: "center",
    layoutDirection: "v"
  }] : o = s.layouts, u("final layouts:", o), n.layouts = o.map((i) => JSON.parse(JSON.stringify(i))), n.disableNodeClickEffect && (n.defaultFocusRootNode = !1), wt(n.layouts[0]), Lt(n.layouts[0], n), n;
}, Lt = (s, n) => {
  u("applyDefaultOptionsByLayout", s.layoutName, n), s.layoutName === "SeeksCenterLayouter" || s.layoutName === "center" ? (n.defaultNodeShape === void 0 && (n.defaultNodeShape = 0), n.defaultLineShape === void 0 && (n.defaultLineShape = 1), n.defaultJunctionPoint === void 0 && (n.defaultJunctionPoint = "border")) : s.layoutName === "SeeksBidirectionalTreeLayouter" || s.layoutName.includes("tree") ? (n.defaultNodeBorderWidth === void 0 && (n.defaultNodeBorderWidth = 0), n.defaultNodeShape === void 0 && (n.defaultNodeShape = 1), n.defaultLineShape === void 0 && (n.defaultLineShape = 4), (s.from === "top" || s.from === "bottom") && (n.layoutDirection = "v", u("set layoutDirection=v"), n.defaultLineShape === 4 && (n.defaultJunctionPoint === void 0 && (n.defaultJunctionPoint = "tb"), u("set defaultJunctionPoint=tb"))), (s.from === "left" || s.from === "right") && (n.layoutDirection = "h", u("set layoutDirection=h"), n.defaultLineShape === 4 && (n.defaultJunctionPoint === void 0 && (n.defaultJunctionPoint = "lr"), u("set defaultJunctionPoint=lr")))) : (s.layoutName === "fixed" || s.layoutName === "force") && (n.moveToCenterWhenRefresh = !1, n.zoomToFitWhenRefresh = !1), n.defaultNodeShape === void 0 && (n.defaultNodeShape = 0), n.defaultLineShape === void 0 && (n.defaultLineShape = 1), n.defaultJunctionPoint === void 0 && (n.defaultJunctionPoint = "border");
}, bt = (s) => {
  const n = go(s);
  return u("RGOptions:new RGOptions:by:", s), u("RGOptions:new RGOptions:", n), n.instanceId || (n.instanceId = `RGIns-${yo++}`), n;
};
class mo {
  constructor(n, e) {
    C(this, "options");
    C(this, "listeners");
    C(this, "isReact", !1);
    C(this, "updateViewHook", () => {
    });
    C(this, "_dataUpdating", !1);
    C(this, "_dataUpdatingNext", !1);
    C(this, "eventHandlers", []);
    this.listeners = e, this.options = bt(n), u("new RelationGraph:", this);
  }
  enableDebugLog(n) {
    this.options.debug = n, window && (window.relationGraphDebug = n);
  }
  setUpdateViewHook(n) {
    this.isReact = !0, this.updateViewHook = n;
  }
  _dataUpdated() {
    if (this._dataUpdating) {
      this._dataUpdatingNext = !0;
      return;
    }
    this._dataUpdating = !0, requestAnimationFrame(this._doSomethingAfterDataUpdated.bind(this));
  }
  _doSomethingAfterDataUpdated() {
    u("_dataUpdated:", this._dataUpdatingNext), this._dataUpdating = !0, this.updateVisbleViewNodes(), this.updateEasyView(), this.updateViewHook(), this._dataUpdating = !1, this._dataUpdatingNext && (this._dataUpdatingNext = !1, requestAnimationFrame(this._doSomethingAfterDataUpdated.bind(this)));
  }
  addEventListener(n) {
    this.eventHandlers.push(n);
  }
  removeEventListener(n) {
    const e = this.eventHandlers.indexOf(n);
    e !== -1 && this.eventHandlers.splice(e, 1);
  }
  emitEvent(n, e) {
    for (const t of this.eventHandlers)
      t(n, e);
  }
}
class vo extends mo {
  constructor(e, t) {
    super(e, t);
    C(this, "$dom");
    C(this, "$canvasDom");
    C(this, "resizeObserver");
    C(this, "resizeListenerMap", /* @__PURE__ */ new WeakMap());
    C(this, "nodeMap", /* @__PURE__ */ new WeakMap());
    this.resizeObserver = new ResizeObserver((o, i) => {
      for (const a of o) {
        const c = this.resizeListenerMap.get(a.target);
        c ? c(a.borderBoxSize[0].inlineSize, a.borderBoxSize[0].blockSize) : this._onNodeResize(a.target, a.borderBoxSize[0].inlineSize, a.borderBoxSize[0].blockSize);
      }
    });
  }
  setDom(e) {
    u("setDom"), this.$dom = e, this.addResizeListener(this.$dom, (t, o) => {
      u("resizeListener:this.$dom"), this.refreshNVAnalysisInfo(), this.updateEasyView(), setTimeout(() => {
        u("resizeListener:updateVisbleViewNodes"), this.zoom(-1), this.zoom(1), this.emitEvent("view-resize", { width: t, height: o });
      }, 500);
    });
  }
  setCanvasDom(e) {
    this.$canvasDom = e;
  }
  getBoundingClientRect() {
    return this.$dom.getBoundingClientRect();
  }
  addResizeListener(e, t) {
    this.resizeListenerMap.set(e, t), this.resizeObserver.observe(e);
  }
  _onNodeResize(e, t, o) {
    if (t === 0 || o === 0)
      return;
    const i = this.nodeMap.get(e);
    i && this.updateNodeOffsetSize(i, t, o);
  }
  addNodeResizeListener(e, t) {
    this.nodeMap.set(e, t), this.resizeObserver.observe(e);
  }
  removeNodeResizeListener(e) {
    this.nodeMap.delete(e), this.resizeObserver.unobserve(e);
  }
  removeResizeListener(e) {
    this.resizeListenerMap.delete(e), this.resizeObserver.unobserve(e);
  }
}
class _o extends vo {
  constructor(e, t) {
    super(e, t);
    C(this, "graphData", {
      rootNode: void 0,
      nodes: [],
      links: [],
      elementLines: []
    });
    C(this, "seeksNodeIdIndex", 0);
    C(this, "allLineColors", []);
    C(this, "userLayouerClass");
    C(this, "layouter");
    C(this, "reactiveData");
    C(this, "disableNextLayoutAnimation", !1);
    C(this, "elLineUpdating", !1);
  }
  setReactiveData(e, t) {
    this.reactiveData = t, this.graphData = e, this.allLineColors = t.allLineColors, Object.assign(t.options, this.options), this.options = t.options;
  }
  setReactiveDataVue3(e, t) {
    this.reactiveData = t, this.graphData = e, this.allLineColors = t.allLineColors, Object.assign(t.options, this.options), this.options = t.options;
  }
  _setOptions(e) {
    const t = bt(e);
    Object.assign(this.reactiveData.options, t);
  }
  _initLayoutByLayoutOptions(e) {
    this.options.layoutClassName = e.layoutClassName, this.options.layoutLabel = e.label, this.options.layoutName = e.layoutName, this.options.layoutDirection = e.layoutDirection, this.layouter = xt(e, this.options, this);
  }
  initLayouter() {
    if (this.userLayouerClass)
      u("Use user layouter:", this.userLayouerClass), this.layouter = this.userLayouerClass;
    else if (this.options.layouts && this.options.layouts.length > 0) {
      const e = this.options.layouts[0];
      u("[change layout]Create default layouter\uFF1A", this.options.layoutName), this._initLayoutByLayoutOptions(e);
    } else
      u("Not set option: layout/layouts\uFF01");
    u("Layouter instance:", this.layouter);
  }
  async _setJsonData(e, t = !1) {
    await this.clearGraph(), u("set jsonData:", e), this.loadGraphJsonData(e);
  }
  async clearGraph() {
    this.graphData.nodes = [], this.graphData.links = [], this.graphData.elementLines = [], this.graphData.rootNode = void 0;
  }
  async clearElementLines() {
    this.graphData.elementLines = [];
  }
  generateNewNodeId(e = 1) {
    const t = "N" + (this.graphData.nodes.length + e);
    return this.getNodeById(t) ? this.generateNewNodeId(e + 1) : (u("generateNewNodeId:", e, t), t);
  }
  loadNodes(e) {
    const t = {};
    this.graphData.nodes.forEach((i) => {
      t[i.id] = i;
    });
    const o = [];
    e.forEach((i) => {
      let a = t[i.id];
      a || (a = Ke(i, this.options), a && (a.seeks_id = this.seeksNodeIdIndex++, t[a.id] = a, o.push(a)));
    }), this.graphData.nodes.push(...o);
  }
  loadLines(e) {
    const t = {};
    this.graphData.nodes.forEach((a) => {
      t[a.id] = a;
    });
    const o = {};
    this.graphData.links.forEach((a) => {
      o[a.seeks_id] = a;
    });
    const i = [];
    e.forEach((a) => {
      let c = !1, l, r;
      if (typeof a.from == "object" ? l = a.from : l = t[a.from], typeof a.to == "object" ? r = a.to : r = t[a.to], !l) {
        console.error("Can not found from node:", a);
        return;
      }
      if (!r) {
        console.error("Can not found to node:", a);
        return;
      }
      const h = `${l.seeks_id}-${r.seeks_id}`, d = `${r.seeks_id}-${l.seeks_id}`, f = Je(a);
      let g = o[h], y = !1;
      g || (g = o[d], g ? y = !0 : (c = !0, g = {
        seeks_id: h,
        fromNode: l,
        toNode: r,
        appended: !1,
        forDisplayOnly: !0,
        relations: []
      }));
      let v = f.arrow;
      f.isHideArrow || (v = this.getLineArrow(f.color)), l.targetNodes || (l.targetNodes = []), r.targetNodes || (r.targetNodes = []), f.forDisplayOnly || (l.targetNodes.includes(r) || l.targetNodes.push(r), r.targetNodes.includes(l) || r.targetNodes.push(l), l.targetTo.includes(r) || l.targetTo.push(r), r.targetFrom.includes(l) || r.targetFrom.push(l), g.forDisplayOnly = !1);
      let w = !1;
      for (let b = 0; b < g.relations.length; b++)
        if ((g.relations[b].id || f.id) && g.relations[b].id === f.id) {
          w = !0;
          break;
        }
      w === !1 && (f.id || (f.id = `${g.seeks_id}-${g.relations.length}`), f.isReverse = y, f.arrow = v, g.relations.push(f)), c && (i.push(g), o[g.seeks_id] = g, g.appended = !1);
    }), this.graphData.links.push(...i);
  }
  flatNodeData(e, t, o, i) {
    x.flatNodeData(e, t, o, i);
  }
  loadGraphJsonData(e) {
    e.lines || (e.lines = e.relations, console.warn("[relation-graph] For compatibility with older versionsm, Use jsonData.relations as jsonData.lines, It is recommended that you define your data using")), e.lines || (e.lines = e.links, console.warn("[relation-graph] For compatibility with older versionsm, Use jsonData.links as jsonData.lines, It is recommended that you define your data using"));
    const t = e.nodes, o = [], i = [];
    this.flatNodeData(t, null, o, i), e.lines.forEach((a) => {
      i.push(a);
    }), this.loadNodes(o), u("Nodes is initialized"), this.loadLines(i), this._dataUpdated(), setTimeout(() => {
      e.elementLines && this.addElementLines(e.elementLines);
    }, 500);
  }
  getLineArrow(e, t = !1, o = !1) {
    const i = t ? "start-" : "";
    if (o)
      return `${this.options.instanceId}-${i}arrow-checked`;
    if (e) {
      const a = to(e);
      return this.allLineColors.map((c) => c.id).includes(a) || this.allLineColors.push({ id: a, color: e }), `${this.options.instanceId}-${i}arrow-${a}`;
    } else
      return `${this.options.instanceId}-${i}arrow-default`;
  }
  getNodes() {
    return this.graphData.nodes;
  }
  getLinks() {
    return this.graphData.links;
  }
  getGraphJsonData() {
    const e = [], t = [];
    return this.graphData.nodes.forEach((o) => {
      const i = no(o);
      i && e.push(i);
    }), this.graphData.links.forEach((o) => {
      ao(o, t);
    }), {
      rootId: this.graphData.rootNode ? this.graphData.rootNode.id : "",
      nodes: e,
      lines: t
    };
  }
  getGraphJsonOptions() {
    const e = {}, t = [
      "layouter",
      "autoLayouting",
      "canvasNVInfo",
      "canvasOffset",
      "canvasZoom",
      "fullscreen",
      "instanceId",
      "layoutClassName",
      "layoutDirection",
      "layoutLabel",
      "layoutName",
      "resetViewSize",
      "viewELSize",
      "viewNVInfo",
      "viewSize",
      "canvasSize",
      "newLinkTemplate",
      "newLineTemplate",
      "newNodeTemplate"
    ];
    return Object.keys(this.options).forEach((o) => {
      t.includes(o) || (e[o] = this.options[o]);
    }), e;
  }
  printGraphJsonData() {
    u("graph options:", JSON.stringify(this.getGraphJsonOptions())), u("graph json data:", JSON.stringify(this.getGraphJsonData()));
  }
  getNodeById(e) {
    for (let t = 0; t < this.graphData.nodes.length; t++)
      if (this.graphData.nodes[t].id === e)
        return this.graphData.nodes[t];
  }
  getLinkById(e) {
    for (let t = 0; t < this.graphData.links.length; t++)
      if (this.graphData.links[t].seeks_id === e)
        return this.graphData.links[t];
  }
  getLinkByLineId(e) {
    for (let t = 0; t < this.graphData.links.length; t++)
      if (this.graphData.links[t].relations.findIndex((o) => o.id === e) !== -1)
        return this.graphData.links[t];
  }
  addNodes(e) {
    u("addNodes:", e), this.loadNodes(e), this._dataUpdated();
  }
  addLines(e) {
    u("addLines:", e), this.loadLines(e), this._dataUpdated();
  }
  addElementLines(e) {
    u("addElementLines:", e), e.forEach((t) => {
      const o = document.getElementById(t.from), i = document.getElementById(t.to);
      o || console.error("Can not found from HTMLElement: #" + t.from), i || console.error("Can not found toHTMLElement: #" + t.to);
      const a = Je(t);
      let c = a.arrow;
      a.isHideArrow || (c = this.getLineArrow(a.color)), a.forDisplayOnly = !0;
      let l = !1;
      for (const r of this.graphData.elementLines)
        if (r.relations[0].from === a.from && r.relations[0].to === a.to || r.relations[0].from === a.to && r.relations[0].to === a.from) {
          l = !0;
          break;
        }
      if (!l) {
        a.id || (a.id = `rg-ell-${a.from}-${a.to}`), a.arrow = c;
        const r = {
          type: "el",
          nodeShape: 1,
          junctionPoint: "lr",
          x: 0,
          y: 0,
          el: {
            offsetWidth: 10,
            offsetHeight: 10
          }
        }, h = {
          type: "el",
          nodeShape: 1,
          junctionPoint: "lr",
          x: 0,
          y: 0,
          el: {
            offsetWidth: 10,
            offsetHeight: 10
          }
        }, d = {
          seeks_id: "ell-" + this.graphData.elementLines.length,
          fromNode: r,
          toNode: h,
          relations: [a],
          appended: !0,
          forDisplayOnly: !0
        };
        this._updateElementLinePosition(o, d.fromNode), this._updateElementLinePosition(i, d.toNode), this.graphData.elementLines.push(d);
      }
    }), this.updateElementLines(), this._dataUpdated();
  }
  getElementLineById(e) {
    for (const t of this.graphData.elementLines)
      if (t.seeks_id === e)
        return t;
  }
  getElementLines() {
    return this.graphData.elementLines.map((e) => e.relations[0]);
  }
  removeElementLine(e) {
    u("removeElementLine:", e), this.removeELementLineById(e.relations[0].id);
  }
  removeELementLineById(e) {
    u("removeELementLineById:", e);
    for (let t = 0; t < this.graphData.elementLines.length; t++)
      this.graphData.elementLines[t].relations[0].id === e && (this.graphData.elementLines.splice(t, 1), t--);
  }
  updateElementLines() {
    u("updateElementLines:", this.graphData.elementLines.length), this.graphData.elementLines.length !== 0 && (this.elLineUpdating || (this.elLineUpdating = !0, setTimeout(() => {
      this.elLineUpdating = !1, this._updateElementLines();
    }, 50)));
  }
  _updateElementLines() {
    this.graphData.elementLines.forEach((e) => {
      const t = document.getElementById(e.relations[0].from), o = document.getElementById(e.relations[0].to);
      if (!t) {
        e.relations[0].isHide = !0;
        return;
      }
      if (!o) {
        e.relations[0].isHide = !0;
        return;
      }
      if (this._updateElementLinePosition(t, e.fromNode), this._updateElementLinePosition(o, e.toNode), e.fromNode.el.offsetWidth === 0 && e.fromNode.el.offsetHeight === 0) {
        e.relations[0].isHide = !0;
        return;
      }
      if (e.toNode.el.offsetWidth === 0 && e.toNode.el.offsetHeight === 0) {
        e.relations[0].isHide = !0;
        return;
      }
      e.relations[0].isHide = !1;
    }), this._dataUpdated();
  }
  _updateElementLinePosition(e, t) {
    if (!e)
      return;
    const o = e.getBoundingClientRect(), i = this.$canvasDom.getBoundingClientRect();
    t.x = (o.x - i.x) / (this.options.canvasZoom / 100), t.y = (o.y - i.y) / (this.options.canvasZoom / 100), t.el.offsetWidth = o.width / (this.options.canvasZoom / 100), t.el.offsetHeight = o.height / (this.options.canvasZoom / 100);
  }
  getElementPosition(e) {
    const o = document.getElementById(e).getBoundingClientRect(), i = this.$canvasDom.getBoundingClientRect(), a = (o.x - i.x) / (this.options.canvasZoom / 100), c = (o.y - i.y) / (this.options.canvasZoom / 100);
    return { x: a, y: c };
  }
  removeNodeById(e) {
    let t = 0;
    for (let i = 0; i < this.graphData.links.length; i++) {
      const a = this.graphData.links[i];
      (a.fromNode.id === e || a.toNode.id === e) && (this.removeLink(a), i--, t++);
    }
    u("Removed link\uFF1A", e, t);
    let o = 0;
    for (let i = 0; i < this.graphData.nodes.length; i++)
      if (this.graphData.nodes[i].id === e) {
        this.graphData.nodes.splice(i, 1), o++;
        break;
      }
    u("Removed node\uFF1A", e, o), this._dataUpdated();
  }
  removeNode(e) {
    this.removeNodeById(e.id), this._dataUpdated();
  }
  removeLinkByTwoNode(e, t) {
    for (const o of this.getLinks())
      if (o.fromNode.id === e && o.toNode.id === t || o.fromNode.id === e && o.toNode.id === t) {
        this.removeLink(o);
        break;
      }
    this._dataUpdated();
  }
  getGroupByNode(e, t = []) {
    t.includes(e) || t.push(e);
    for (const o of e.targetNodes)
      t.includes(o) || this.getGroupByNode(o, t);
    return t;
  }
  _clearItem(e, t) {
    for (let o = 0; o < e.length; o++)
      e[o] === t && (e.splice(o, 1), o--);
  }
  removeNodeRef(e, t) {
    e && (e.targetNodes && this._clearItem(e.targetNodes, t), e.targetFrom && this._clearItem(e.targetFrom, t), e.targetTo && this._clearItem(e.targetTo, t));
  }
  removeLinkById(e) {
    u("removeLinkById:", e);
    for (let t = 0; t < this.graphData.links.length; t++) {
      const o = this.graphData.links[t];
      o.seeks_id === e && (this.removeNodeRef(o.fromNode, o.toNode), this.removeNodeRef(o.toNode, o.fromNode), this.graphData.links.splice(t, 1), t--);
    }
    this._dataUpdated();
  }
  removeLink(e) {
    u("removeLink:", e), this.removeLinkById(e.seeks_id), this._dataUpdated();
  }
  removeLine(e, t) {
    u("removeLine:", e, t);
    for (let o = 0; o < e.relations.length; o++)
      e.relations[o] === t && e.relations.splice(o, 1);
    e.relations.length === 0 && this.removeLink(e), this._dataUpdated();
  }
  setNodePosition(e, t, o) {
    e.x = t, e.y = o;
  }
  getGraphOffet() {
    const e = this.options.graphOffset_x || 0, t = this.options.graphOffset_y || 0;
    return {
      offset_x: e,
      offset_y: t
    };
  }
  setCanvasCenter(e, t) {
    const o = this.options.viewSize.width / 2, i = this.options.viewSize.height / 2, a = this.getGraphOffet();
    this.setCanvasOffset(o - e + a.offset_x, i - t + a.offset_y), this._dataUpdated();
  }
  setCanvasOffset(e, t) {
    this.options.canvasOffset.x = e, this.options.canvasOffset.y = t, this._dataUpdated();
  }
  findGroupNodes(e, t) {
    t.push(e), e.targetNodes.forEach((o) => {
      t.includes(o) || this.findGroupNodes(o, t);
    });
  }
  resetViewSize() {
    !this.options || (this.options.viewSize.width = this.$dom.getBoundingClientRect().width, this.options.viewSize.height = this.$dom.getBoundingClientRect().height, this.options.canvasZoom = 100, this.setCanvasCenter(0, 0), u("resetViewSize:1:", this.options.viewSize.width, this.options.viewSize.height, this.options.canvasOffset.x, this.options.canvasOffset.y), this.refreshNVAnalysisInfo(), this._dataUpdated());
  }
  refreshNVAnalysisInfo() {
    if (!this.$dom) {
      console.error("cannot get view size !");
      return;
    }
    const e = {
      NMCanvasCenter: { x: 0, y: 0 }
    }, t = this.$dom.getBoundingClientRect();
    this.options.viewNVInfo.x = t.left, this.options.viewNVInfo.y = t.top, this.options.viewNVInfo.width = t.width, this.options.viewNVInfo.height = t.height, u("resetViewSize:", t.width, t.height, t.left, t.top);
    const o = this.options.canvasSize.width * (this.options.canvasZoom / 100), i = this.options.canvasSize.height * (this.options.canvasZoom / 100);
    e.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, e.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, this.options.canvasNVInfo.x = e.NMCanvasCenter.x - o / 2, this.options.canvasNVInfo.y = e.NMCanvasCenter.y - i / 2, this.options.canvasNVInfo.width = o, this.options.canvasNVInfo.height = i, this.options.viewELSize.width = t.width, this.options.viewELSize.height = t.height, this.options.viewELSize.left = t.left, this.options.viewELSize.top = t.top;
  }
  getStuffSize(e) {
    const t = e || this.graphData.nodes;
    let o = 9999999, i = 9999999, a = 0, c = 0;
    t.forEach((d) => {
      x.isAllowShowNode(d) && (d.x < o && (o = d.x), d.x > a && (a = d.x + d.el.offsetWidth), d.y < i && (i = d.y), d.y > c && (c = d.y + d.el.offsetHeight));
    });
    const l = 100, r = a - o + l, h = c - i + l;
    return {
      width: r,
      height: h,
      minX: o,
      maxX: a,
      minY: i,
      maxY: c
    };
  }
  getNodesCenter() {
    const e = this.getStuffSize();
    u("getStuffSize:", e);
    const t = e.minX + (e.width - 100) / 2, o = e.minY + (e.height - 100) / 2;
    return {
      x: t,
      y: o
    };
  }
  querySearchAsync(e) {
    if (u("fetch-suggestions", e), e = e.trim(), e === "")
      return;
    const t = [];
    return this.graphData.nodes.forEach((o) => {
      u("fetch:", o.text), o.text.includes(e) && t.push(o);
    }), u("fetched:", t.length), t;
  }
  printOptions() {
    const e = this.getGraphJsonOptions();
    console.log("options:", e), console.log("options-json-string:"), console.log(JSON.stringify(e));
  }
  printData() {
    const e = this.getGraphJsonData();
    console.log("data:", e), console.log("data-json-string:"), console.log(JSON.stringify(e));
  }
  loading(e = "") {
    this.options.graphLoading = !0, this.options.graphLoadingText = e;
  }
  clearLoading() {
    this.options.graphLoading = !1, this.options.graphLoadingText = "";
  }
  updateVisbleViewNodes(e = !1) {
    !e && (!this.options.performanceMode || this.options.showEasyView) || this._updateVisbleViewNodes();
  }
  _updateVisbleViewNodes() {
    const e = this.getBoundingClientRect(), t = this.getCanvasCoordinateByClientCoordinate({
      x: e.x,
      y: e.y
    }), o = this.getCanvasCoordinateByClientCoordinate({
      x: e.x + this.options.viewELSize.width,
      y: e.y + this.options.viewELSize.height
    });
    let i = 0;
    for (const a of this.graphData.nodes) {
      if (a.alwaysRender) {
        a.invisiable = !1;
        continue;
      }
      let c = !1;
      (a.x > o.x || a.y > o.y) && (c = !0), (a.x + a.el.offsetWidth < t.x || a.y + a.el.offsetHeight < t.y) && (c = !0), a.invisiable = c, !c && i++;
    }
    for (const a of this.graphData.links) {
      let c = !1;
      a.fromNode.invisiable && a.toNode.invisiable && (c = !0), a.invisiable = c;
    }
    u("updateVisbleViewNodes:", this.options.showEasyView, o.x, i);
  }
}
class xo extends _o {
  constructor(n, e) {
    super(n, e);
  }
  dataURLToBlob(n) {
    const e = n.split(","), t = e[0], o = t && t.match(/:(.*?);/)[1], i = atob(e[1]);
    let a = i.length;
    const c = new Uint8Array(a);
    for (; a--; )
      c[a] = i.charCodeAt(a);
    return new Blob([c], { type: o });
  }
  async createGraphCanvas(n = "png") {
    return new Promise((e, t) => {
      const o = this.options.canvasZoom, i = this.$canvasDom.clientWidth, a = this.$canvasDom.clientHeight, c = this.options.canvasOffset.x, l = this.options.canvasOffset.y;
      this.options.checkedNodeId = "", this.options.canvasZoom = 100;
      const r = this.$canvasDom;
      let h = 999999, d = 999999, f = 0, g = 0;
      const y = 200;
      this.loading("Generating..."), this.graphData.nodes.forEach((S) => {
        S.x < h && (h = S.x), S.x > f && (f = S.x + S.el.offsetWidth), S.y < d && (d = S.y), S.y > g && (g = S.y + S.el.offsetHeight);
      });
      const v = h - y, w = d - y;
      this.graphData.nodes.forEach((S) => {
        S.x = S.x - v, S.y = S.y - w;
      }), this.$canvasDom.querySelectorAll(".rel-canvas-slot").forEach((S) => {
        const A = S;
        A.style.left = -w + "px", A.style.top = -w + "px";
      }), this.updateElementLines(), this.$canvasDom.querySelectorAll(".rel-lines-svg-el-lines").forEach((S) => {
        const A = S;
        A.style.width = "4000px", A.style.height = "4000px";
      }), this.options.canvasOffset.x = y * -1, this.options.canvasOffset.y = y * -1;
      const O = f - h + 200 + y * 2, E = g - d + 100 + y * 2, F = window.devicePixelRatio;
      this.options.canvasSize.width = O * F, this.options.canvasSize.height = E * F, window.scrollTo(0, 0);
      const V = document.createElement("canvas");
      V.width = O * F, V.height = E * F, V.style.backgroundColor = getComputedStyle(r.parentElement, null).backgroundColor, u("canvas.style.backgroundColor:", V.style.backgroundColor), V.style.width = `${O * F}px`, V.style.height = `${E * F}px`, V.getContext("2d").scale(1, 1);
      const $ = {
        backgroundColor: V.style.backgroundColor,
        scale: F,
        canvas: V,
        logging: !0,
        width: O,
        height: E,
        useCORS: !0
      };
      setTimeout(() => {
        this.createImage(r, $, n, "", (S) => {
          this.options.canvasSize.width = i, this.options.canvasSize.height = a, this.options.canvasOffset.x = c, this.options.canvasOffset.y = l, this.options.canvasZoom = o, this.$canvasDom.querySelectorAll(".rel-canvas-slot").forEach((B) => {
            const I = B;
            I.style.left = "0px", I.style.top = "0px";
          }), this.graphData.nodes.forEach((B) => {
            B.x = B.x + v, B.y = B.y + w;
          }), this.$canvasDom.querySelectorAll(".rel-lines-svg-el-lines").forEach((B) => {
            const I = B;
            I.style.width = "1px", I.style.height = "1px";
          }), this.updateElementLines(), this.clearLoading(), e(S);
        });
      }, 1e3);
    });
  }
  createImage(n, e, t, o, i) {
    u("createImage:", e), Zt(n, e).then((a) => {
      i && i(a);
    });
  }
  async getImageBase64(n = "png") {
    const e = await this.createGraphCanvas(n), t = document.body.appendChild(e);
    t.style.display = "none";
    const o = t.toDataURL(`image/${n}`);
    return document.body.removeChild(t), o;
  }
  async downloadAsImage(n = "png", e) {
    if (this.listeners.onImageDownload && this.listeners.onImageDownload(this.$canvasDom, n) === !1)
      return;
    if (this.graphData.nodes.length === 0)
      throw new Error("No nodes, no content to export!");
    e || (e = this.options.downloadImageFileName), e || (e = `relation-graph-${(Math.random() * 1e5).toFixed(0)}`);
    const t = await this.createGraphCanvas(n);
    u("downloadImageAsFile:", n, e);
    let o = !0;
    this.listeners.onImageSaveAsFile && this.listeners.onImageSaveAsFile(
      t,
      n,
      e
    ) === !1 && (o = !1), o && await this.downloadImageAsFile(t, n, e);
  }
  async downloadImageAsFile(n, e, t) {
    const o = document.body.appendChild(n);
    o.style.display = "none";
    const i = this.dataURLToBlob(o.toDataURL(`image/${e}`));
    document.body.removeChild(o);
    const a = document.createElement("a");
    a.style.display = "none";
    try {
      window.navigator.msSaveOrOpenBlob ? window.navigator.msSaveOrOpenBlob(i, `${t}.${e}`) : (a.setAttribute("href", URL.createObjectURL(i)), a.setAttribute("download", `${t}.${e}`), document.body.appendChild(a), a.click(), u("click ok!"), URL.revokeObjectURL(await i.text()), u("revokeObjectURL ok!"), document.body.removeChild(a), u("removeChild ok!"));
    } catch (c) {
      u("[SEEKS Graph]Create and download image error:", c);
    }
  }
}
class wo extends xo {
  constructor(n, e) {
    super(n, e);
  }
  createReturnValue(n, e) {
    return { path: n, textPosition: e };
  }
  createLinePath(n, e, t) {
    let o = n.fromNode;
    o || (o = {
      x: 0,
      y: 0,
      el: {
        offsetWidth: 10,
        offsetHeight: 10
      }
    });
    const i = n.toNode, a = n.relations.length;
    return t || (t = 0), this.createLinePathByTwoNode(o, i, e, t, a);
  }
  _getJunctionPoint(n, e) {
    return n === fe.border ? oe.getBorderPoint4MultiLine(...e) : n === fe.ltrb ? oe.getRectJoinPoint(...e) : n === fe.tb ? oe.getRectVJoinPoint(...e) : n === fe.lr ? oe.getRectHJoinPoint(...e) : n === fe.left ? oe.getRectLeftJoinPoint(...e) : n === fe.right ? oe.getRectRightJoinPoint(...e) : n === fe.top ? oe.getRectTopJoinPoint(...e) : n === fe.bottom ? oe.getRectBottomJoinPoint(...e, this.options.defaultBottomJuctionPoint_X) : oe.getBorderPoint4MultiLine(...e);
  }
  createLinePathByTwoNode(n, e, t, o = 0, i = 1) {
    const a = t.lineShape || this.options.defaultLineShape || 1, c = t.lineDirection || this.options.layoutDirection || "h";
    let l = n, r = e, h = l.x, d = l.y, f = r.x, g = r.y;
    const y = { x: 0, y: 0, rotate: 0 };
    if (Number.isNaN(h) || Number.isNaN(d))
      return u("error start node:", l.text, l.x, l.y), y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L -10 -10", y);
    if (Number.isNaN(f) || Number.isNaN(g))
      return u("error end point:", r.text, r.x, r.y), y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L 10 -10", y);
    let v = l.el.offsetWidth || l.width || 60, w = l.el.offsetHeight || l.height || 60;
    if (Number.isNaN(v) || Number.isNaN(w))
      return y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L -10 10", y);
    let b = r.el.offsetWidth || r.width || 60, P = r.el.offsetHeight || r.height || 60;
    if (Number.isNaN(b) || Number.isNaN(P))
      return y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L 10 10", y);
    const O = l.nodeShape !== void 0 && l.nodeShape !== null ? l.nodeShape : this.options.defaultNodeShape, E = [
      h,
      d,
      f,
      g,
      v,
      w,
      b,
      P,
      O,
      !1,
      i,
      o,
      this.options.multiLineDistance || 14
    ], F = r.nodeShape !== void 0 && r.nodeShape !== null ? r.nodeShape : this.options.defaultNodeShape, V = [
      f,
      g,
      h,
      d,
      b,
      P,
      v,
      w,
      F,
      !1,
      i,
      i - o - 1,
      this.options.multiLineDistance || 14
    ], $ = this.options.defaultJunctionPoint || fe.border, S = t.fromJunctionPoint || l.junctionPoint || $, A = t.toJunctionPoint || r.junctionPoint || $, T = this._getJunctionPoint(S, E), B = this._getJunctionPoint(A, V);
    if (!T || !B)
      return this.createReturnValue(
        "Unable to calculate the starting point and ending point of the line.",
        y
      );
    const I = T.x, j = T.y, M = B.x, k = B.y;
    if (l === r) {
      const Q = h + v / 2, ee = d + w / 2, Me = Math.atan2(j - ee, I - Q), re = Math.sin(Me + Math.PI) * 5, le = Math.cos(Me + Math.PI) * 5, ve = { x: I - re, y: j - le }, _e = { x: re, y: le }, xe = -le * 5, ke = -re * 5, we = -le * 5, Re = -re * 5, Te = `M ${ve.x},${ve.y} c ${xe},${ke} ${we},${Re} ${_e.x},${_e.y}`;
      return y.x = I - le / (le + re) * 20, y.y = j + re / (le + re) * 20, y.rotate = 0, this.createReturnValue(Te, y);
    }
    if (Number.isNaN(I) || Number.isNaN(j))
      return u("error start point:", l.text), y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L -10 0", y);
    if (Number.isNaN(M) || Number.isNaN(k))
      return u("error end point:", r.text), y.x = 50, y.y = 50, y.rotate = 0, this.createReturnValue("M 0 0 L 10 0", y);
    const ae = h + v / 2, ne = d + w / 2, N = f + b / 2, K = g + P / 2, G = this.createLinePathData(
      t,
      y,
      i,
      o,
      c,
      a,
      I,
      j,
      ae,
      ne,
      v,
      w,
      M,
      k,
      N,
      K,
      b,
      P
    );
    return this.createReturnValue(G, y);
  }
  createLinePathData(n, e, t, o, i, a, c, l, r, h, d, f, g, y, v, w, b, P) {
    let O = g - c, E = y - l, F = g > c ? 1 : -1, V = y > l ? 1 : -1, $ = i === "v" ? V : F, S = "";
    if (a === 4) {
      const A = c - r, T = l - h, B = g - v, I = y - w;
      let j = this.options.defaultPolyLineRadius || 0;
      const M = Math.min(j, Math.abs(O)) * (c < g ? 1 : -1), k = Math.min(j, Math.abs(E)) * (l < y ? 1 : -1), ae = Math.abs(A) >= d / 2 ? "h" : "v", ne = Math.abs(B) >= b / 2 ? "h" : "v", N = [];
      if (ae === "v") {
        const K = n.polyLineStartDistance || Math.max(Math.min(30, Math.abs(y - l) / 2), 15), G = T > 0 ? K : -K;
        if (n.placeText === "start" ? (e.x = c, e.y = l + G - (T > 0 ? 20 : -5)) : n.placeText === "middle" ? (e.x = c + (g - c) / 2, e.y = l + G) : (e.x = g, e.y = l + G + (T > 0 ? 20 : -5)), N.push(`M ${c} ${l}`), N.push(`v ${G - k}`), ne === "v")
          N.push(`c ${0},${k},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`h ${g - c - M * 2}`), N.push(`c ${M},${0},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`v ${y - l - G - k}`);
        else {
          N.push(`c ${0},${k},`), N.push(`${M},${k},`), N.push(`${M},${k}`);
          const Q = Math.min(30, Math.abs(g - c) / 2), ee = B > 0 ? -Q : Q;
          N.push(`h ${g - c + ee - M}`), N.push(`c ${M},${0},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`v ${y - l - G - k}`), N.push(`h ${ee - M}`);
        }
      } else {
        const K = n.polyLineStartDistance || Math.max(Math.min(30, Math.abs(g - c) / 2), 15), G = A > 0 ? K : -K;
        if (n.placeText === "start" ? (e.x = c + (A > 0 ? 10 : -50), e.y = l - 5) : n.placeText === "middle" ? (e.x = c + G, e.y = l + (y - l) / 2) : (e.x = c + G + (A > 0 ? 20 : -50), e.y = y - 5), N.push(`M ${c} ${l}`), N.push(`h ${G - M}`), ne === "v") {
          const Q = Math.min(30, Math.abs(y - l) / 2), ee = I > 0 ? -Q : Q;
          N.push(`c ${M},${0},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`v ${y - l + ee - k}`), N.push(`h ${g - c - G - M}`), N.push(`c ${0},${k},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`v ${ee - k}`);
        } else
          N.push(`c ${M},${0},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`v ${y - l - k * 2}`), N.push(`c ${0},${k},`), N.push(`${M},${k},`), N.push(`${M},${k}`), N.push(`h ${g - c - G - M}`);
      }
      S = N.join(" ");
    } else if (a === 41) {
      const A = l - h;
      let T = this.options.defaultPolyLineRadius || 0;
      const B = Math.min(T, Math.abs(O)) * (c < g ? 1 : -1), I = Math.min(T, Math.abs(E)) * (l < y ? 1 : -1), j = [], M = n.polyLineStartDistance || Math.max(Math.min(30, Math.abs(y - l) / 2), 15), k = A > 0 ? M : -M;
      n.placeText === "start" ? (e.x = c, e.y = l + k - (A > 0 ? 20 : -5)) : n.placeText === "middle" ? (e.x = c + (g - c) / 2, e.y = l + k) : (e.x = g, e.y = l + k + (A > 0 ? 20 : -5)), j.push(`M ${c} ${l}`), j.push(`v ${y - l - I}`), j.push(`c ${0},${I},`), j.push(`${B},${I},`), j.push(`${B},${I}`), j.push(`h ${g - c - B}`), S = j.join(" ");
    } else if (a === 2 || a === 3 || a === 5 || a === 6 || a === 7 || a === 8) {
      const A = c - r, T = l - h, B = g - v, I = y - w, j = 1 / (t + 1) * (o + 1);
      let M, k;
      if (a === 2)
        M = i === "v" ? { x: 0, y: $ * 30 } : { x: $ * 30, y: 0 }, k = i === "v" ? { x: O * j, y: $ * -10 } : { x: $ * -10, y: E * j };
      else if (a === 3)
        M = i === "v" ? { x: 0, y: E * j } : { x: $ * 30, y: 0 }, k = i === "v" ? { x: 0, y: 0 } : { x: $ * -10, y: E * j };
      else if (a === 5)
        M = i === "v" ? { x: 0, y: 0 } : { x: 0, y: 0 }, k = i === "v" ? { x: 0, y: E * j } : { x: O * j, y: 0 };
      else if (a === 6) {
        const ne = Math.min(200, Math.max(100, Math.abs(O / 2))), N = Math.min(200, Math.max(100, Math.abs(E / 2))), K = A / (Math.abs(A) + Math.abs(T)) * ne, G = T / (Math.abs(A) + Math.abs(T)) * N;
        M = { x: K, y: G };
        const Q = B / (Math.abs(B) + Math.abs(I)) * ne + O, ee = I / (Math.abs(B) + Math.abs(I)) * N + E;
        k = { x: Q, y: ee };
      } else if (a === 7) {
        const K = A / (Math.abs(A) + Math.abs(T)) * 30, G = T / (Math.abs(A) + Math.abs(T)) * 30;
        M = { x: K, y: G };
        const Q = B / (Math.abs(B) + Math.abs(I)) * 30 + O, ee = I / (Math.abs(B) + Math.abs(I)) * 30 + E;
        k = { x: Q, y: ee };
      } else if (a === 8) {
        const K = A / (Math.abs(A) + Math.abs(T)) * 30, G = T / (Math.abs(A) + Math.abs(T)) * 30;
        M = { x: K, y: G };
        const Q = B / (Math.abs(B) + Math.abs(I)) * 30 + O, ee = I / (Math.abs(B) + Math.abs(I)) * 30 + E;
        k = { x: Q, y: ee };
      }
      const ae = this.calcCurveCenter(
        { x: c, y: l },
        { x: c + M.x, y: l + M.y },
        { x: c + k.x, y: l + k.y },
        { x: c + O, y: l + E },
        a < 6 ? 0.8 : 0.5
      );
      e.x = ae.x, e.y = ae.y, S = `M ${c},${l} c ${M.x},${M.y} ${k.x},${k.y} ${O},${E}`, a === 8 && (S = S + " Z");
    } else
      e.rotate = oe.getTextAngle(c, l, g, y), e.x = Math.round(c + (g - c) / 2), e.y = Math.round(l + (y - l) / 2), Number.isNaN(e.rotate) && (e.rotate = 0), S = `M ${c} ${l} L ${g} ${y}`;
    return S;
  }
  calcCurveCenter(n, e, t, o, i = 0.5) {
    const a = { x: (1 - i) * n.x + i * e.x, y: (1 - i) * n.y + i * e.y }, c = { x: (1 - i) * e.x + i * t.x, y: (1 - i) * e.y + i * t.y }, l = { x: (1 - i) * t.x + i * o.x, y: (1 - i) * t.y + i * o.y }, r = { x: (1 - i) * a.x + i * c.x, y: (1 - i) * a.y + i * c.y }, h = { x: (1 - i) * c.x + i * l.x, y: (1 - i) * c.y + i * l.y };
    return { x: (1 - i) * r.x + i * h.x, y: (1 - i) * r.y + i * h.y };
  }
  createCheckedLinePath() {
    const n = this.options.checkedLineId;
    if (!!n)
      try {
        const e = this.getElementLineById(this.options.checkedLinkId);
        if (e) {
          const { path: c } = this.createLinePath(
            e,
            e.relations[0],
            0
          );
          return c;
        }
        const t = this.getLinkByLineId(n);
        if (!t) {
          u("Can not find link by checkedLineId:", n);
          return;
        }
        if (!x.isAllowShowNode(t.fromNode)) {
          u("from hide:", n);
          return;
        }
        if (!x.isAllowShowNode(t.toNode)) {
          u("to hide:", n);
          return;
        }
        const o = t.relations.findIndex((c) => c.id === n);
        if (o === -1) {
          u("Can not find checkedLineId:", n);
          return;
        }
        const i = t.relations[o], { path: a } = this.createLinePath(
          t,
          i,
          o
        );
        return a;
      } catch (e) {
        u(e);
      }
  }
  createCheckedLineStrokeWidth() {
    const n = this.options.checkedLineId;
    if (!n)
      return this.options.defaultLineWidth + 8;
    try {
      const e = this.getLinkByLineId(n);
      if (!e)
        return this.options.defaultLineWidth + 8;
      const t = e.relations.findIndex((i) => i.id === n);
      if (t === -1)
        return this.options.defaultLineWidth + 8;
      const o = e.relations[t];
      return o.lineWidth ? o.lineWidth + 8 : this.options.defaultLineWidth + 8;
    } catch (e) {
      u(e);
    }
  }
  getTextTransform(n, e, t, o) {
    if (Number.isNaN(e) || Number.isNaN(t))
      return "translate(0,0)";
    const i = n.lineShape === void 0 ? this.options.defaultLineShape : n.lineShape;
    return i === 1 || i === 4 ? `translate(${e},${t})rotate(${o || 0})` : `translate(${e},${t})`;
  }
  getArrow(n, e, t = !1) {
    if (t) {
      if (n.isReverse) {
        if (n.showEndArrow === !1)
          return;
      } else if (n.showStartArrow !== !0)
        return;
    } else if (n.isReverse) {
      if (n.showStartArrow !== !0)
        return;
    } else if (n.showEndArrow === !1)
      return;
    const o = !1;
    return n.isHideArrow ? "none" : `url('#${this.getLineArrow(
      n.color,
      t,
      o
    )}')`;
  }
  getLineTextStyle(n, e, t) {
    let o = e.text;
    if (!o)
      return null;
    let i = 0;
    const a = n.fromNode.x, c = n.toNode.x;
    o.length > this.options.lineTextMaxLength && (o = o.substring(0, this.options.lineTextMaxLength || 15) + "..."), (e.useTextPath !== void 0 ? e.useTextPath : this.options.lineUseTextPath) && a > c && (i = 180, o = o.split("").reverse().join(""));
    const r = e.textOffset_x || this.options.defaultLineTextOffset_x || 0, h = e.textOffset_y || this.options.defaultLineTextOffset_y || -8, d = `translate(${r},${h})`;
    let f = "middle";
    (e.lineShape === 4 || this.options.defaultLineShape === 4) && (f = "start");
    let g = "50%";
    if (e.lineShape === 4 || this.options.defaultLineShape === 4)
      if (e.placeText === "start")
        g = "10%", f = "start";
      else if (e.placeText === "end")
        g = "90%", f = "end";
      else if (e.placeText)
        g = e.placeText, f = "start";
      else if (this.options.layoutDirection === "v") {
        const y = n.fromNode.x, v = n.toNode.x;
        g = String(Math.abs(v - y) + 43);
      } else {
        const y = n.fromNode.y, v = n.toNode.y;
        g = String(Math.abs(v - y) + 43);
      }
    else
      e.placeText === "start" ? (g = "10%", f = "start") : e.placeText === "end" ? (g = "90%", f = "end") : e.placeText ? (g = e.placeText, f = "start") : (g = "50%", f = "middle");
    return {
      text: o,
      textOffset: d,
      textAnchor: f,
      textHPosition: g,
      textRotate: i
    };
  }
}
class Co extends wo {
  constructor(e, t) {
    super(e, t);
    C(this, "zoomCenter_of_newSize", { x: 0, y: 0 });
  }
  zoom(e, t) {
    this.options.canvasZoom + e < 5 && (u("zoom:reset zoom=10"), e = 5 - this.options.canvasZoom);
    const o = this.options.canvasZoom, i = this.options.canvasZoom + e, a = this.showZoomCenter(t, e);
    this.options.canvasOffset.x += a.buff_x, this.options.canvasOffset.y += a.buff_y, this.options.canvasZoom = i, this.refreshNVAnalysisInfo(), this.listeners.onZoomEnd && this.listeners.onZoomEnd(), o <= 40 && i > 40 && (this.options.performanceMode && this.updateVisbleViewNodes(!0), this.options.showEasyView = !1, u("zoom:hide:showEasyView", o, i), setTimeout(() => {
      this.updateElementLines();
    }, 150)), o > 40 && i <= 40 && (u("zoom:show:showEasyView", o, i), this.options.performanceMode && (this.options.showEasyView = !0)), this._dataUpdated(), this.emitEvent("zoom", { canvasZoom: this.options.canvasZoom });
  }
  setZoom(e, t) {
    const o = Math.floor(e - this.options.canvasZoom);
    this.zoom(o, t);
  }
  getCanvasCoordinateByClientCoordinate(e) {
    const t = this.options.canvasZoom / 100, { NMCanvasStart: o, NMZoomCenter: i } = this.analysisByZoom(t, e), a = {
      x: i.x - o.x,
      y: i.y - o.y
    };
    return {
      x: a.x / t,
      y: a.y / t
    };
  }
  getClientCoordinateByCanvasCoordinate(e) {
    const t = this.options.canvasZoom / 100, { NMCanvasStart: o } = this.analysisByZoom(t), i = {
      x: e.x * t + o.x,
      y: e.y * t + o.y
    };
    return {
      x: i.x + this.options.canvasOffset.x,
      y: i.y + this.options.canvasOffset.y
    };
  }
  analysisByZoom(e, t) {
    const o = {
      NMViewPosition: { x: 0, y: 0 },
      NMViewCenter: { x: 0, y: 0 },
      NMCanvasCenter: { x: 0, y: 0 },
      NMCanvasStart: { x: 0, y: 0 },
      NMCanvasEnd: { x: 0, y: 0 },
      NMZoomCenter: { x: 0, y: 0 },
      NMViewBuff: { x: 0, y: 0 },
      NMCanvasOffsetBuff: { x: 0, y: 0 },
      NMCanvasSize: { width: 0, height: 0 }
    }, i = this.$dom.getBoundingClientRect();
    o.NMViewPosition.x = i.left, o.NMViewPosition.y = i.top, o.NMViewCenter.x = i.width / 2, o.NMViewCenter.y = i.height / 2;
    const a = this.options.canvasSize.width * e, c = this.options.canvasSize.height * e;
    o.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, o.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, o.NMCanvasStart.x = o.NMCanvasCenter.x - a / 2, o.NMCanvasStart.y = o.NMCanvasCenter.y - c / 2, o.NMCanvasEnd.x = o.NMCanvasCenter.x + a / 2, o.NMCanvasEnd.y = o.NMCanvasCenter.y + c / 2, o.NMZoomCenter.x = o.NMViewCenter.x, o.NMZoomCenter.y = o.NMViewCenter.y, t && (o.NMZoomCenter.x = t.x - o.NMViewPosition.x, o.NMZoomCenter.y = t.y - o.NMViewPosition.y);
    let l = o.NMViewCenter.x - o.NMCanvasCenter.x, r = o.NMViewCenter.y - o.NMCanvasCenter.y;
    return t && (l = o.NMZoomCenter.x - o.NMCanvasCenter.x, r = o.NMZoomCenter.y - o.NMCanvasCenter.y), o.NMViewBuff.x = l, o.NMViewBuff.y = r, o.NMCanvasSize.width = a, o.NMCanvasSize.height = c, o;
  }
  showZoomCenter(e, t) {
    if (!this.$dom)
      return { buff_x: 0, buff_y: 0 };
    const o = this.options.canvasZoom / 100, i = this.analysisByZoom(o, e), a = (this.options.canvasZoom + t) / 100, c = this.analysisByZoom(a, e), l = a / o, r = 0, h = 0, d = a / o, f = 0, g = 0;
    this.zoomCenter_of_newSize.x = l * i.NMViewBuff.x + h * i.NMViewBuff.y + f, this.zoomCenter_of_newSize.y = r * i.NMViewBuff.x + d * i.NMViewBuff.y + g;
    const y = i.NMViewBuff.x - this.zoomCenter_of_newSize.x, v = i.NMViewBuff.y - this.zoomCenter_of_newSize.y;
    this.zoomCenter_of_newSize.x += i.NMCanvasCenter.x, this.zoomCenter_of_newSize.y += i.NMCanvasCenter.y;
    let w = i.NMCanvasStart.x - i.NMCanvasCenter.x, b = i.NMCanvasStart.y - i.NMCanvasCenter.y, P = l * w + h * b + f, O = r * w + d * b + g;
    return c.NMCanvasStart.x = y + i.NMCanvasCenter.x + P, c.NMCanvasStart.y = y + i.NMCanvasCenter.y + O, w = i.NMCanvasEnd.x - i.NMCanvasCenter.x, b = i.NMCanvasEnd.y - i.NMCanvasCenter.y, P = l * w + h * b + f, O = r * w + d * b + g, c.NMCanvasEnd.x = y + i.NMCanvasCenter.x + P, c.NMCanvasEnd.y = y + i.NMCanvasCenter.y + O, i.NMCanvasOffsetBuff.x = y, i.NMCanvasOffsetBuff.y = v, {
      buff_x: y,
      buff_y: v
    };
  }
}
class Lo extends Co {
  constructor(n, e) {
    super(n, e);
  }
  async doLayout() {
    if (!this.layouter) {
      u("no layouter");
      return;
    }
    if (!this.graphData.rootNode) {
      u("Cant find rootNode!");
      return;
    }
    this.options.showMaskWhenLayouting && this.loading(), await pt(300), this.options.canvasOpacity = 1, this._dataUpdated(), this.options.showMaskWhenLayouting && this.clearLoading(), u("node size\uFF1A", this.graphData.nodes.length);
    const n = this.options.useAnimationWhenExpanded;
    this.disableNextLayoutAnimation && (this.options.useAnimationWhenExpanded = !1), this.layouter.requireLinks && this.layouter.setLinks(this.getLinks()), this.layouter.viewUpdate = () => {
      this._dataUpdated();
    }, await this.layouter.placeNodes(this.graphData.nodes, this.graphData.rootNode), this.options.useAnimationWhenExpanded = n, this.disableNextLayoutAnimation = !1, this.updateElementLines(), this._dataUpdated();
  }
  async refresh(n = !0) {
    this.resetViewSize(), this.disableNextLayoutAnimation = !0, this._dataUpdated(), n && await this.doLayout(), u("placeOtherNodes"), await this.placeOtherNodes(), u("placeOtherNodes ok!"), await this.playShowEffect(), this.updateElementLines(), this._dataUpdated();
  }
  async playShowEffect() {
    if (this.graphData.nodes.length === 0) {
      u("relation-graph:move to center: data not ready!");
      return;
    }
    if (u("playShowEffect:", this.options.moveToCenterWhenRefresh, this.options.zoomToFitWhenRefresh), this.graphData.rootNode && Number.isNaN(this.graphData.rootNode.x)) {
      u("rootNode.x is NaN, graph is currently hidden?");
      return;
    }
    this.options.moveToCenterWhenRefresh ? await this.moveToCenter() : (this.setCanvasCenter(0, 0), this._dataUpdated()), await this.zoomToFitWhenRefresh();
  }
  async moveToCenter() {
    if (this.options.useAnimationWhenRefresh) {
      const n = this.getNodesCenter();
      u("center:", n.x, n.y);
      const e = this.getGraphOffet();
      u("centerOffset:", e.offset_x, e.offset_y);
      const t = this.options.viewSize.width / 2 - n.x + e.offset_x, o = this.options.viewSize.height / 2 - n.y + e.offset_y;
      await this.animateGoto(t, o, 500), this._dataUpdated();
    } else {
      const n = this.getNodesCenter();
      u("center:", n.x, n.y), this.setCanvasCenter(n.x, n.y), this._dataUpdated();
    }
  }
  async zoomToFitWhenRefresh() {
    this.options.zoomToFitWhenRefresh && await this.zoomToFit();
  }
  async placeOtherNodes() {
    const n = [];
    this.graphData.rootNode && this.findGroupNodes(this.graphData.rootNode, n);
    const e = [], t = [];
    this.graphData.nodes.forEach((o) => {
      n.includes(o) || (this.options.placeSingleNode && (!o.targetNodes || o.targetNodes.length === 0) && o.fixed !== !0 ? (o.x = Math.floor(Math.random() * 200) - 100, o.y = Math.floor(Math.random() * 200) - 100, o.lot || (o.lot = { childs: [] }), o.lot.placed = !0, o.singleNode = !0, t.push(o)) : e.push(o));
    }), this.options.placeSingleNode && this.layouter.layoutOptions.layoutName !== "fixed" && this.placeSingleNodes(t), this.options.placeOtherGroup && this.layouter.layoutOptions.layoutName !== "fixed" && (await this.placeOtherGroup(e, n), this._dataUpdated(), this.layouter.layoutOptions.layoutName === "force" && (this.stopAutoLayout(), setTimeout(() => {
      this.startAutoLayout();
    }, 500)));
  }
  placeSingleNodes(n) {
    if (n.length > 0) {
      u("sigle nodes:", n.length);
      const e = new Ae({ layoutName: "force" }, this.options, this);
      e.allNodes = this.graphData.nodes, e.fastStart = !0, e.justLayoutSingleNode = !0, e.maxLayoutTimes = 100, e.byLine = !1, e.autoLayout(!0);
    }
  }
  async placeOtherGroup(n, e) {
    if (n.length > 0) {
      u("[placeOtherGroup]notPlacedNodes nodes:", n.length);
      const t = JSON.parse(JSON.stringify(this.layouter.layoutOptions)), o = n[0], i = xt(t, this.options, this);
      i.isMainLayouer = !1;
      const a = this.getStuffSize(e);
      u("[placeOtherGroup]placeOtherGroup:", i.layoutOptions.layoutName, "root:", o.text);
      let c = this.layouter.layoutOptions.layoutName.includes("tree") ? 300 : 600;
      if (i.layoutOptions.layoutName === "force") {
        const h = i;
        h.maxLayoutTimes = 0, c = 100;
      }
      o.x = a.maxX + c, o.y = 0, i.layoutOptions.fixedRootNode = !0;
      const l = [];
      this.findGroupNodes(o, l), u("[placeOtherGroup]thisGroupNodes:", n.length), this.layouter.requireLinks && this.layouter.setLinks(this.getLinks()), await i.placeNodes(l, o), e.push(...l);
      const r = [];
      n.forEach((h) => {
        e.includes(h) || r.push(h);
      }), await this.placeOtherGroup(r, e), this._dataUpdated();
    }
  }
  async zoomToFit(n) {
    const e = this.getStuffSize(), t = this.options.viewSize.width / e.width, o = this.options.viewSize.height / e.height, i = Math.min(t, o, 1);
    u("zoomToFit:", { stuffSize: e, zoomPercent: i, zoomPercentX: t, zoomPercentY: o, viewSize: this.options.viewSize }), this.options.useAnimationWhenRefresh ? (await this.animateToZoom(i * 100, 300), this._dataUpdated(), n && n()) : (this.setZoom(i * 100), this._dataUpdated(), n && n());
  }
  async animateGoto(n, e, t) {
    return new Promise((o, i) => {
      u("animateGoto:", n, e);
      const a = n - this.options.canvasOffset.x, c = e - this.options.canvasOffset.y, l = t, r = 5, h = Math.round(a / r), d = Math.round(c / r), f = l / r;
      this.animateStepAction(0, f, r, () => {
        this.options.canvasOffset.x += h, this.options.canvasOffset.y += d, this._dataUpdated();
      }, () => {
        o();
      });
    });
  }
  async animateToZoom(n, e) {
    return new Promise((t, o) => {
      const i = n - this.options.canvasZoom, a = e, c = 5, l = Math.round(i / c), r = a / c;
      u("animateToZoom:", i, l), this.animateStepAction(0, r, c, () => {
        this.zoom(l), this._dataUpdated();
      }, () => {
        this.setZoom(n), this._dataUpdated(), t();
      });
    });
  }
  animateStepAction(n, e, t, o, i) {
    n < t ? (o(n, t), setTimeout(() => {
      this.animateStepAction(n + 1, e, t, o, i);
    }, e)) : i();
  }
  toggleAutoLayout() {
    this.options.autoLayouting = !this.options.autoLayouting, u("toggleAutoLayout:to:", this.options.autoLayouting), this.options.autoLayouting ? this.startAutoLayout() : this.stopAutoLayout();
  }
  startAutoLayout() {
    this.options.autoLayouting = !0, this.layouter.autoLayout ? (u("startAutoLayout:"), this.layouter.autoLayout(!0)) : u("Current layout not support autoLayout()");
  }
  stopAutoLayout() {
    this.options.autoLayouting = !1, this.layouter.stop ? this.layouter.stop() : u("Current layout not support stop()");
  }
  async sleep(n) {
    await pt(n);
  }
}
let pe = { x: 0, y: 0 };
const ye = { x: 0, y: 0 }, ge = { x: 0, y: 0 };
let Ye, Xe;
const yt = (s) => {
  const n = {
    clientX: 0,
    clientY: 0
  };
  if (ue(s)) {
    const e = s.touches || s.targetTouches;
    if (!e)
      throw new Error("error targetTouches");
    n.clientX = e[0].clientX, n.clientY = e[0].clientY;
  } else
    n.clientX = s.clientX, n.clientY = s.clientY;
  return n;
}, se = {
  startDrag(s, n, e, t) {
    t ? Ye = (o, i, a) => {
      const c = o - ge.x, l = i - ge.y;
      t(c, l, ye, ge, a);
    } : Ye = (o, i) => {
      pe.x = ye.x + (o - ge.x), pe.y = ye.y + (i - ge.y);
    }, Xe = e, pe = n, ye.x = pe.x, ye.y = pe.y, u("[canvas]onDragStart...", ue(s), s);
    try {
      const o = yt(s);
      ge.x = o.clientX, ge.y = o.clientY, ue(s) ? (document.body.addEventListener("touchmove", se.onNodeMove), document.body.addEventListener("touchend", se.onNodeDragend), s.preventDefault()) : (document.body.addEventListener("mousemove", se.onNodeMove), document.body.addEventListener("mouseup", se.onNodeDragend));
    } catch (o) {
      console.error(o.message);
    }
  },
  onNodeMove(s) {
    const n = yt(s);
    Ye(n.clientX, n.clientY, s);
  },
  onNodeDragend(s) {
    ue(s) ? (document.body.removeEventListener("touchmove", se.onNodeMove), document.body.removeEventListener("touchend", se.onNodeDragend)) : (document.body.removeEventListener("mousemove", se.onNodeMove), document.body.removeEventListener("mouseup", se.onNodeDragend)), u("[canvas]onDragend...", ue(s), s), Xe && Xe(
      pe.x - ye.x,
      pe.y - ye.y,
      s
    );
  }
};
class bo extends Lo {
  constructor(e, t) {
    super(e, t);
    C(this, "prevClickTime", 0);
    C(this, "movingListener");
    C(this, "step1EventTime", 0);
    C(this, "onCreateLineCallback");
  }
  setDefaultLineShape(e) {
    this.options.defaultLineShape = e;
  }
  setDefaultJunctionPoint(e) {
    this.options.defaultJunctionPoint = e;
  }
  setCheckedNode(e) {
    this.options.checkedNodeId = e;
  }
  setCheckedLinkAndLine(e, t) {
    this.options.checkedLinkId = e.seeks_id, this.options.checkedLineId = t ? t.id : "";
  }
  clearChecked() {
    this.options.checkedNodeId = "", this.options.checkedLineId = "", this.options.checkedLinkId = "";
  }
  selectNode(e, t) {
    e.selected = t;
  }
  flashNode(e, t) {
    e.flashing = t;
  }
  updateNodeOffsetSize(e, t, o) {
    e.el.offsetWidth = t, e.el.offsetHeight = o;
  }
  onNodeClick(e, t) {
    if (Date.now() - this.prevClickTime < 200) {
      u("[node]click abort : time < 200");
      return;
    }
    if (this.prevClickTime = Date.now(), this.options.creatingLinePlot) {
      this.onNodeClickWhenCreatingLinePlot(e);
      return;
    }
    u("[node]node click", e.text, this.options.creatingLinePlot), !t.shiftKey && this.options.disableNodeClickEffect !== !0 && e.disableDefaultClickEffect !== !0 && (this.options.checkedLinkId = "", this.options.checkedLineId = "", this.setCheckedNode(e.id)), this.listeners.onNodeClick && this.listeners.onNodeClick(e, t), this.prevClickTime = Date.now();
  }
  onNodeDragStart(e, t) {
    if (this.options.disableDragNode || e.disableDrag)
      return;
    isNaN(e.x) && (e.x = 0), isNaN(e.y) && (e.y = 0), e.dragging = !0, this.listeners.onNodeDragStart && this.listeners.onNodeDragStart(e, t), this.emitEvent("node-drag-start", { node: e });
    const o = (i, a, c) => {
      e.dragging = !1, this.onNodeDraged(e, i, a, c), this._dataUpdated();
    };
    se.startDrag(t, e, o, (i, a, c) => {
      let l = i / (this.options.canvasZoom / 100) + c.x, r = a / (this.options.canvasZoom / 100) + c.y;
      if (this.listeners.onNodeDragging) {
        const h = this.listeners.onNodeDragging(e, l, r, t);
        h && (typeof h.x == "number" && (l = h.x), typeof h.y == "number" && (r = h.y));
      }
      this.setNodePosition(e, l, r), this.options.useHorizontalView ? (l = a / (this.options.canvasZoom / 100) + c.x, r = -i / (this.options.canvasZoom / 100) + c.y, this.setNodePosition(e, l, r)) : this.setNodePosition(e, l, r), this.emitEvent("node-dragging", { node: e, x: l, y: r }), this.updateElementLines(), this._dataUpdated();
    });
  }
  onNodeDraged(e, t, o, i) {
    if (t === 0 && o === 0) {
      u("[node]node click by drag"), this.onNodeClick(e, i);
      return;
    }
    this.options.isMoveByParentNode && e.lot.childs.forEach((a) => {
      a.x += t, a.y += o;
    }), Math.abs(t) + Math.abs(o) > 6 ? (this.prevClickTime = Date.now(), setTimeout(() => {
      u("[node]onDragEnd2"), this.onNodeDragEnd(e, i);
    }, 100)) : (u("[node]onDragEnd1"), this.onNodeDragEnd(e, i));
  }
  onNodeDragEnd(e, t) {
    this.updateElementLines(), this.listeners.onNodeDragEnd && this.listeners.onNodeDragEnd(e, t), this.emitEvent("node-drag-end", { node: e });
  }
  onLineClick(e, t, o) {
    u("onLineClick:", "line:", e, "link:", t), this.options.disableLineClickEffect !== !0 && e.disableDefaultClickEffect !== !0 && (this.setCheckedNode(""), this.setCheckedLinkAndLine(t, e)), this.listeners.onLineClick && this.listeners.onLineClick(e, t, o);
  }
  async expandOrCollapseNode(e, t) {
    e.expanded === !1 ? await this.expandNode(e, t) : await this.collapseNode(e, t);
  }
  setChildsFromPosition(e, t) {
    e.lot.childs.forEach((o) => {
      o.x = t.x, o.y = t.y, this.setChildsFromPosition(o, t);
    });
  }
  async expandNode(e, t) {
    u("onNodeExpand:", e), e.expanded = !0, this.options.useAnimationWhenExpanded && (await this.layouter.snapshotBeforeAnimation(), this.setChildsFromPosition(e, e), await this.layouter.animationLayout(!1)), u("relayout check:", this.options.reLayoutWhenExpandedOrCollapsed), this.options.reLayoutWhenExpandedOrCollapsed && (u("relayout..."), await this.layouter.snapshotBeforeAnimation(), await this.doLayout()), this.updateElementLines(), this._dataUpdated(), this.listeners.onNodeExpand && this.listeners.onNodeExpand(e, t);
  }
  setChildsToPosition(e, t) {
    e.lot.childs.forEach((o) => {
      o.lot.from_x = o.x, o.lot.from_y = o.y, o.lot.to_x = t.x, o.lot.to_y = t.y, this.setChildsToPosition(o, t);
    });
  }
  async collapseNode(e, t) {
    u("onNodeCollapse:", e), this.options.useAnimationWhenExpanded && (await this.layouter.snapshotBeforeAnimation(), this.setChildsToPosition(e, e), await this.layouter.animationLayout(!1)), e.expanded = !1, u("relayout check:", this.options.reLayoutWhenExpandedOrCollapsed), this.options.reLayoutWhenExpandedOrCollapsed && (u("relayout..."), await this.layouter.snapshotBeforeAnimation(), await this.doLayout()), this.updateElementLines(), this._dataUpdated(), this.listeners.onNodeCollapse && this.listeners.onNodeCollapse(e, t);
  }
  onCanvasDragEnd(e) {
    this.setCanvasOffset(this.options.canvasOffset.x + 1, this.options.canvasOffset.y + 1), this.listeners.onCanvasDragEnd && this.listeners.onCanvasDragEnd(e);
  }
  onCanvasClick(e) {
    this.options.creatingLinePlot && this.onCanvasClickWhenCreatingLinePlot(e), this.listeners.onCanvasClick && this.listeners.onCanvasClick(e);
  }
  clickGraphMask(e) {
    this.clearLoading();
  }
  onCanvasSelectionEnd(e, t) {
    this.listeners.onCanvasSelectionEnd && this.listeners.onCanvasSelectionEnd(e, t);
  }
  startCreatingNodePlot(e, t) {
    this.options.newNodeTemplate = Ke(JSON.parse(JSON.stringify(Ct)), this.options), this.options.creatingNodePlot = !0;
    const o = ue(e);
    this.options.showTemplateNode = !o;
    let i = (y, v) => {
      this.options.newNodeTemplate.x = y, this.options.newNodeTemplate.y = v, this._dataUpdated();
    }, a = (y, v) => {
      const w = "s-" + Date.now();
      this.addNodes([{
        id: w,
        text: this.options.newNodeTemplate.text,
        x: y,
        y: v
      }]);
    };
    t && t.templateText && (this.options.newNodeTemplate.text = t.templateText), t && t.templateStyleClass && (this.options.newNodeTemplate.styleClass = t.templateStyleClass), t && t.templateNode && Object.keys(t.templateNode).forEach((y) => {
      this.options.newNodeTemplate[y] = t.templateNode[y];
    }), t && t.templateMove && (i = t.templateMove), t && t.onCreateNode && (a = t.onCreateNode);
    const c = this.$dom.getBoundingClientRect();
    u("[CreatingNodePlot]startCreatingNodePlot:");
    const l = Ue(e), r = l.clientX - c.x + 10, h = l.clientY - c.y + 10;
    o || i(r, h);
    const d = (y) => {
      const v = this.$dom.getBoundingClientRect();
      u("[CreatingNodePlot]objectTemplateMove");
      const w = y.clientX - v.x + 10, b = y.clientY - v.y + 10;
      i(w, b);
    }, f = (y) => {
      u("[CreatingNodePlot]user abort!"), this.$dom.removeEventListener("mousemove", d), this.$dom.removeEventListener("click", g), this.$dom.removeEventListener("contextmenu", f), this.options.creatingNodePlot = !1;
    }, g = (y) => {
      let v = !1;
      if (this.options.creatingNodePlot || (v = !0), this.$dom.removeEventListener("mousemove", d), this.$dom.removeEventListener("click", g), this.$dom.removeEventListener("contextmenu", f), this.options.creatingNodePlot = !1, v) {
        u("[CreatingNodePlot]action be abort!");
        return;
      }
      const w = Ue(y), b = w.clientX - c.x + 10, P = w.clientY - c.y + 10;
      if (t && t.disableClickCreate && Math.abs(r - b) < 5 && Math.abs(h - P) < 5) {
        u("[CreatingNodePlot]create node be abort!");
        return;
      }
      const O = this.getCanvasCoordinateByClientCoordinate({ x: w.clientX, y: w.clientY });
      u("[CreatingNodePlot]objectBePlaced:", O), a(O.x, O.y), this._dataUpdated();
    };
    setTimeout(() => {
      this.$dom.addEventListener("click", g), this.$dom.addEventListener("contextmenu", f);
    }, 300), o || this.$dom.addEventListener("mousemove", d);
  }
  startCreatingLinePlot(e, t) {
    const o = ue(e);
    t && t.onCreateLine && (this.onCreateLineCallback = t.onCreateLine), t && t.template && Object.assign(this.options.newLineTemplate, t.template), this.options.newLinkTemplate.fromNode = null, t && t.fromNode && (this.options.newLinkTemplate.toNode.x = t.fromNode.x + 50, this.options.newLinkTemplate.toNode.y = t.fromNode.y + 50, this.options.newLinkTemplate.fromNode = t.fromNode, this.step1EventTime = Date.now()), this.options.creatingLinePlot = !0, this.options.newLinkTemplate.toNodeObject = null, this.options.newLineTemplate.disableDefaultClickEffect = !0, this.options.newLinkTemplate.toNode.el.offsetWidth = 2, this.options.newLinkTemplate.toNode.el.offsetHeight = 2, u("[CreatingLinePlot]startCreatingLinePlot:", o), o || (u("[CreatingLinePlot]Listener move"), this.movingListener = this.onMovingWhenCreatingLinePlot.bind(this), this.$dom.addEventListener("mousemove", this.movingListener));
  }
  stopCreatingLinePlot() {
    u("[CreatingLinePlot]stop CreatingLinePlot!"), this.options.creatingLinePlot = !1, this.options.newLinkTemplate.fromNode = null, this.options.newLinkTemplate.toNodeObject = null, this.onCreateLineCallback = void 0, this.$dom.removeEventListener("mousemove", this.movingListener), this._dataUpdated();
  }
  onMovingWhenCreatingLinePlot(e) {
    if (u("[CreatingLinePlot]mousemove"), this.options.newLinkTemplate.fromNode) {
      const t = this.getCanvasCoordinateByClientCoordinate({
        x: e.clientX,
        y: e.clientY
      });
      this.options.newLinkTemplate.toNode.x = t.x, this.options.newLinkTemplate.toNode.y = t.y, this._dataUpdated();
    }
  }
  onCanvasClickWhenCreatingLinePlot(e) {
    if (Date.now() - this.step1EventTime < 500) {
      u("[CreatingLinePlot]step1EventTime:", this.step1EventTime);
      return;
    }
    if (!this.options.newLinkTemplate.fromNode) {
      u("[CreatingLinePlot]CreatingLinePlot:fromNode not set!");
      return;
    }
    if (!this.options.newLinkTemplate.toNodeObject) {
      u("[CreatingLinePlot]CreatingLinePlot:toNodeObject not set!");
      const t = Ue(e), o = this.getCanvasCoordinateByClientCoordinate({ x: t.clientX, y: t.clientY });
      this.onCreateLine(this.options.newLinkTemplate.fromNode, o);
    }
    this.stopCreatingLinePlot();
  }
  onNodeClickWhenCreatingLinePlot(e) {
    this.options.newLinkTemplate.fromNode ? (u("[CreatingLinePlot]step 2: set toNodeObjecct:", this.options.newLinkTemplate.fromNode, e), this.options.newLinkTemplate.toNodeObject = e, this.onCreateLine(this.options.newLinkTemplate.fromNode, e), this.stopCreatingLinePlot()) : (u("[CreatingLinePlot]step 1: set fromNode:", e), this.options.newLinkTemplate.fromNode = e, this.options.newLinkTemplate.toNode.x = e.x + 50, this.options.newLinkTemplate.toNode.y = e.y + 50, this.step1EventTime = Date.now());
  }
  onCreateLine(e, t) {
    u("[CreatingLinePlot][fire-event]onCreateLine:", e, t), this.onCreateLineCallback && this.onCreateLineCallback(e, t, this.options.newLineTemplate);
  }
  isNode(e) {
    const t = Ze(e, "rel-node-peel", "rel-map");
    return t ? this.getNodeById(t.dataset.id) : void 0;
  }
  isLink(e) {
    const t = Ze(e, "rel-link-peel", "rel-map");
    return t ? this.getLinkById(t.dataset.id) : void 0;
  }
  onContextmenu(e) {
    let t = "canvas", o = this.isNode(e.target);
    o ? t = "node" : (o = this.isLink(e.target), o && (t = "link")), u("contextmenu:objectType", t, o), this.listeners.onContextmenu && this.listeners.onContextmenu(e, t, o);
  }
  fullscreen(e) {
    e === void 0 ? (this.options.fullscreen = !this.options.fullscreen, de.toggle(this.$dom).then(() => {
    })) : this.options.fullscreen = e, this.emitEvent("fullscreen", { fullscreen: this.options.fullscreen });
  }
  async focusNodeById(e) {
    let t;
    this.graphData.nodes.forEach((o) => {
      o.id === e && (t = o);
    }), t && await this.handleSelect(t);
  }
  async focusRootNode() {
    u("relation-graph:focusRootNode"), this.graphData.rootNode && await this.handleSelect(this.graphData.rootNode);
  }
  async handleSelect(e) {
    u("checked:", e), scrollTo({
      top: this.$dom.offsetTop
    }), await this.animateToZoom(100, 300);
    const t = e.width || 50, o = e.height || 50, i = e.x * -1 + this.options.viewSize.width / 2 - t / 2, a = e.y * -1 + this.options.viewSize.height / 2 - o / 2;
    await this.animateGoto(i, a, 500), this.options.checkedNodeId = e.id, this.refreshNVAnalysisInfo();
  }
  onMouseWheel(e) {
    if (this.options.disableZoom)
      return e.cancelBubble = !1, !0;
    try {
      e.cancelBubble = !0, e.preventDefault(), e.stopPropagation();
    } catch {
    }
    const t = {
      x: e.clientX,
      y: e.clientY
    };
    let o = e.deltaY;
    o === void 0 && (o = e.wheelDelta);
    const i = -1;
    o > 0 ? this.zoom(5 * i, t) : this.zoom(-5 * i, t);
  }
  onLineDragStart(e, t) {
    u("onLineDragStart...");
    const o = { x: e.fromNode.x, y: e.fromNode.y }, i = { x: e.toNode.x, y: e.toNode.y }, a = (c, l, r, h, d) => {
      e.fromNode.x = o.x + c / (this.options.canvasZoom / 100), e.fromNode.y = o.y + l / (this.options.canvasZoom / 100), e.toNode.x = i.x + c / (this.options.canvasZoom / 100), e.toNode.y = i.y + l / (this.options.canvasZoom / 100), this._dataUpdated();
    };
    se.startDrag(t, { x: 0, y: 0 }, (...c) => {
      this.onLineDragEnd(...c);
    }, a);
  }
  onLineDragEnd(e, t, o) {
    u("onLineDragEnd"), this.updateElementLines();
  }
  onCanvasDragStart(e) {
    if (u("[canvas]onCanvasDragStart..."), e.stopPropagation(), this.options.disableDragCanvas || e.shiftKey) {
      this.startCreateSelection(e);
      return;
    }
    if (!this.options.disableDragLine) {
      const o = this.isLink(e.target);
      if (o) {
        this.onLineDragStart(o, e);
        return;
      }
    }
    let t;
    if (ue(e)) {
      let o, i = 1;
      t = (a, c, l, r, h) => {
        const d = h.touches || h.targetTouches, f = d[0];
        if (d && d.length > 1) {
          h.preventDefault();
          const g = d[1];
          o || (o = { x: g.clientX, y: g.clientY }, i = this.options.canvasZoom);
          const y = { x: f.clientX, y: f.clientY }, v = { x: g.clientX, y: g.clientY }, w = Math.hypot(o.x - r.x, o.y - r.y), P = Math.hypot(v.x - y.x, v.y - y.y) / w, O = i * P;
          this.setZoom(O), this._dataUpdated();
        } else {
          const g = f.clientX, y = f.clientY;
          let v = l.x + (g - r.x), w = l.y + (y - r.y);
          this.options.useHorizontalView ? (v = l.x + (y - r.y), w = l.y - (g - r.x), this.setCanvasOffset(v, w)) : this.setCanvasOffset(v, w), this._dataUpdated();
        }
      };
    } else
      t = (o, i, a, c, l) => {
        const r = a.x + o, h = a.y + i;
        this.setCanvasOffset(r, h);
      };
    se.startDrag(e, this.options.canvasOffset, (...o) => {
      this.onCanvasDragStop(...o);
    }, t);
  }
  onCanvasDragStop(e, t, o) {
    if (u("[canvas]onCanvasDragStop..."), this.options.creatingSelection) {
      this.options.creatingSelection = !1, this._dataUpdated(), this.onCanvasSelectionEnd(this.options.selectionView, o);
      return;
    }
    if (e === 0 && t === 0) {
      u("[canvas]click2"), this._dataUpdated(), this.onCanvasClick(o);
      return;
    }
    Math.abs(e) + Math.abs(t) > 6 ? setTimeout(() => {
      u("[canvas]onDragEnd1"), this.onCanvasDragEnd(o);
    }, 100) : (u("[canvas]onDragEnd2"), this.onCanvasDragEnd(o));
  }
  startCreateSelection(e) {
    let t = !1;
    const o = (i, a, c, l, r) => {
      if (!t && Math.abs(i) + Math.abs(a) > 6 && (t = !0, this.options.creatingSelection = !0, this.options.selectionView.x = l.x, this.options.selectionView.y = l.y), t) {
        const h = this.getBoundingClientRect();
        i < 0 ? (this.options.selectionView.x = l.x + i - h.x, this.options.selectionView.width = Math.abs(i)) : (this.options.selectionView.x = l.x - h.x, this.options.selectionView.width = i), a < 0 ? (this.options.selectionView.y = l.y + a - h.y, this.options.selectionView.height = Math.abs(a)) : (this.options.selectionView.y = l.y - h.y, this.options.selectionView.height = a);
      }
      this._dataUpdated();
    };
    se.startDrag(e, { x: 0, y: 0 }, (...i) => {
      this.onCanvasDragStop(...i);
    }, o);
  }
}
class So extends bo {
  constructor(n, e) {
    super(n, e);
  }
  dataUpdated() {
    this.isReact || this.options.canvasZoom <= 40 ? this._dataUpdated() : (this.zoom(1), this.zoom(-1));
  }
  async setOptions(n, e = !1) {
    if (this.disableNextLayoutAnimation = !0, this._setOptions(n), e === !0) {
      u("setOptions:justUpdateOptionsValue");
      return;
    }
    this.initLayouter(), this.resetViewSize(), await this.doLayout(), this.resetViewSize();
  }
  setLayouter(n) {
    u("setLayouterClass::", n), this.userLayouerClass = n, this.layouter = this.userLayouerClass;
  }
  async switchLayout(n, e = !0, t = !1) {
    this.listeners.beforeChangeLayout && this.listeners.beforeChangeLayout(n) === !1 && (e = !1);
    const o = this.layouter ? this.layouter.allNodes : [], i = this.layouter && this.layouter.rootNode;
    u("[change layout]switchLayout"), this.stopAutoLayout(), Lt(n, this.options), this._initLayoutByLayoutOptions(n), this.layouter.allNodes = o, this.layouter.rootNode = i, e ? await this.refresh() : (t || (this.disableNextLayoutAnimation = !0), await this.doLayout());
  }
  async setJsonData(n, e = !1) {
    this.options.canvasOpacity = 0.01, this._dataUpdated(), await this._setJsonData(n);
    const t = n.rootId;
    if (t && (this.graphData.rootNode = this.graphData.nodes.find((o) => o.id === t)), !this.graphData.rootNode && this.graphData.nodes.length > 0 && (this.graphData.rootNode = this.graphData.nodes[0]), this.graphData.rootNode)
      this.options.defaultFocusRootNode && this.setCheckedNode(this.graphData.rootNode.id);
    else
      throw new Error("The root node [rootId] is not set! Or cannot get the root node:" + n.rootId + ", If you don't have any nodes to display, you can simply set an invisible node: {id:'root', opacity:0}");
    e && (u("resetViewSize:", e), this.resetViewSize()), this.disableNextLayoutAnimation = !0, await this.doLayout();
  }
  async appendJsonData(n, e = !0) {
    u("appendData:", n), this.options.canvasOpacity = 0.01, this._dataUpdated(), this.loadGraphJsonData(n), e && (this.disableNextLayoutAnimation = !0, await this.doLayout());
  }
}
class Eo extends So {
  constructor(e, t) {
    super(e, t);
    C(this, "$easyViewCanvas");
    C(this, "$canvasCtx");
    C(this, "easyViewUpdating", !1);
    C(this, "easyViewUpdateHasNext", !1);
    C(this, "easyViewUpdateTimer");
    C(this, "easyViewOffset", { x: 0, y: 0 });
  }
  setEasyViewCanvas(e) {
    this.$easyViewCanvas = e, this.$canvasCtx = this.$easyViewCanvas.getContext("2d");
  }
  startUpdateTask() {
    this.updateEasyView(), requestAnimationFrame(this.startUpdateTask.bind(this));
  }
  updateEasyView() {
    !this.options.performanceMode || !this.options.showEasyView || requestAnimationFrame(this._updateEasyView.bind(this));
  }
  _updateEasyView() {
    try {
      this.easyViewUpdating = !0, this.dosomethingBeforeDraw(), this.drawAllNodes(), this.drawAllLines();
    } catch (e) {
      console.error(e);
    }
    this.easyViewUpdating = !1, this.easyViewUpdateHasNext && (this.easyViewUpdateHasNext = !1, this._updateEasyView());
  }
  dosomethingBeforeDraw() {
    const e = this.$easyViewCanvas.getBoundingClientRect().width, t = this.$easyViewCanvas.getBoundingClientRect().height;
    this.$easyViewCanvas.width = e, this.$easyViewCanvas.height = t, this.$canvasCtx.canvas.width = e, this.$canvasCtx.canvas.height = t, u("updateEasyView", e, t), this.$canvasCtx.scale(this.options.canvasZoom / 100, this.options.canvasZoom / 100), this.easyViewOffset.x = this.options.canvasOffset.x / (this.options.canvasZoom / 100), this.easyViewOffset.y = this.options.canvasOffset.y / (this.options.canvasZoom / 100);
  }
  drawAllNodes() {
    for (const e of this.getNodes())
      x.isAllowShowNode(e) && e.opacity && e.opacity > 0 && this.drawNode(e);
  }
  drawNode(e) {
    (e.nodeShape !== void 0 && e.nodeShape !== null ? e.nodeShape : this.options.defaultNodeShape) === 1 ? this.drawNode4Rect(e) : this.drawNode4Circle(e);
  }
  getNodeColor(e) {
    const t = e.color || this.options.defaultNodeColor || "red";
    return t === "transparent" ? "rgba(204,204,204,0.55)" : t;
  }
  drawNode4Rect(e) {
    const t = this.$canvasCtx, o = e.el.offsetWidth - 16, i = e.el.offsetHeight - 16, a = this.easyViewOffset.x + e.x + 8, c = this.easyViewOffset.y + e.y + 8;
    t.beginPath(), t.globalAlpha = e.opacity || 1, t.rect(a, c, o, i), t.fillStyle = this.getNodeColor(e), t.fill(), t.globalAlpha = 1;
  }
  drawNode4Circle(e) {
    const t = this.$canvasCtx, o = e.el.offsetWidth - 16, i = e.el.offsetHeight - 16, a = this.easyViewOffset.x + e.x + o / 2 + 8, c = this.easyViewOffset.y + e.y + i / 2 + 8;
    t.beginPath(), t.globalAlpha = e.opacity || 1, t.ellipse(a, c, o / 2, i / 2, 0, 0, 2 * Math.PI), t.fillStyle = this.getNodeColor(e), t.fill(), t.globalAlpha = 1;
  }
  drawAllLines() {
    for (const e of this.getLinks())
      if (x.isAllowShowNode(e.fromNode) && x.isAllowShowNode(e.toNode))
        for (let t = 0; t < e.relations.length; t++)
          this.drawLine(e, e.relations[t], t);
  }
  drawLine(e, t, o) {
    const i = this.$canvasCtx;
    this.easyViewOffset.x + e.fromNode.x, this.easyViewOffset.y + e.fromNode.y, this.easyViewOffset.x + e.toNode.x, this.easyViewOffset.y + e.toNode.y;
    const a = this.createLinePath(e, t, o);
    i.beginPath(), i.globalAlpha = t.opacity || 1, this.drawSvgPathOnCanvas(i, a.path), i.strokeStyle = t.color || this.options.defaultLineColor || "red", i.lineWidth = t.lineWidth || this.options.defaultLineWidth || 1, i.stroke(), i.globalAlpha = 1;
  }
  getPointValue(e, t, o) {
    return o ? e + parseFloat(t) : parseFloat(t);
  }
  drawSvgPathOnCanvas(e, t) {
    const o = t.match(/[a-zA-Z][^a-zA-Z]*/g);
    let i = 0, a = 0, c = 0, l = 0, r = 0, h = 0, d = 0, f = 0, g = !1;
    o.forEach((y) => {
      const v = y.trim().split(/[ ,]+/), w = v[0].toUpperCase(), b = v[0] === v[0].toLowerCase();
      switch (w) {
        case "M":
          i = this.getPointValue(c, v[1], b) + this.easyViewOffset.x, a = this.getPointValue(l, v[2], b) + this.easyViewOffset.y, c = i, l = a, g && (e.closePath(), g = !1), e.moveTo(i, a);
          break;
        case "L":
          i = this.getPointValue(c, v[1], b) + this.easyViewOffset.x, a = this.getPointValue(l, v[2], b) + this.easyViewOffset.y, e.lineTo(i, a);
          break;
        case "C":
          r = this.getPointValue(c, v[1], b), h = this.getPointValue(l, v[2], b), d = this.getPointValue(c, v[3], b), f = this.getPointValue(l, v[4], b), i = this.getPointValue(c, v[5], b), a = this.getPointValue(l, v[6], b), c = i, l = a, e.bezierCurveTo(r, h, d, f, i, a);
          break;
        case "V":
          a = this.getPointValue(l, v[1], b), l = a, e.lineTo(i, a);
          break;
        case "H":
          i = this.getPointValue(c, v[1], b), c = i, e.lineTo(i, a);
          break;
        case "Z":
          e.closePath(), g = !1;
          break;
        default:
          u(`Unsupported command: ${w}`);
      }
    });
  }
}
class Oo extends Eo {
  constructor(n, e) {
    super(n, e);
  }
  ready() {
    this.initLayouter(), this.resetViewSize(), this.refreshNVAnalysisInfo();
  }
}
(function(s) {
  var n, e, t, o, i, a, c = '<svg><symbol id="icon-iconset0444" viewBox="0 0 1024 1024"><path d="M960 682.666667l-106.666667 0C844.8 569.6 763.733333 42.666667 64 42.666667 51.2 42.666667 42.666667 51.2 42.666667 64c0 12.8 8.533333 21.333333 21.333333 21.333333 219.733333 0 377.6 106.666667 465.066667 315.733333 51.2 123.733333 64 236.8 66.133333 281.6L490.666667 682.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 6.4 2.133333 10.666667 6.4 14.933333l234.666667 256c4.266667 4.266667 8.533333 6.4 14.933333 6.4 6.4 0 10.666667-2.133333 14.933333-6.4l234.666667-256c4.266667-4.266667 6.4-8.533333 6.4-14.933333C981.333333 691.2 972.8 682.666667 960 682.666667zM725.333333 928 539.733333 725.333333 618.666667 725.333333c12.8 0 21.333333-8.533333 21.333333-21.333333l0-21.333333c-4.266667-87.466667-38.4-396.8-273.066667-554.666667C755.2 251.733333 804.266667 588.8 810.666667 682.666667l0 21.333333c0 12.8 8.533333 21.333333 21.333333 21.333333l78.933333 0L725.333333 928z"  ></path></symbol><symbol id="icon-iconset0445" viewBox="0 0 1024 1024"><path d="M974.933333 305.066667l-234.666667-256C736 44.8 731.733333 42.666667 725.333333 42.666667c-6.4 0-10.666667 2.133333-14.933333 6.4l-234.666667 256C471.466667 309.333333 469.333333 313.6 469.333333 320c0 12.8 8.533333 21.333333 21.333333 21.333333l104.533333 0c-2.133333 44.8-14.933333 157.866667-66.133333 281.6C441.6 832 283.733333 938.666667 64 938.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 12.8 8.533333 21.333333 21.333333 21.333333 699.733333 0 780.8-526.933333 789.333333-640l106.666667 0c12.8 0 21.333333-8.533333 21.333333-21.333333C981.333333 313.6 979.2 309.333333 974.933333 305.066667zM832 298.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333l0 21.333333c-6.4 93.866667-55.466667 430.933333-443.733333 554.666667 234.666667-157.866667 268.8-467.2 273.066667-554.666667l0-21.333333c0-12.8-8.533333-21.333333-21.333333-21.333333l-78.933333 0L725.333333 96l185.6 202.666667L832 298.666667z"  ></path></symbol><symbol id="icon-yuanquanfenxiang" viewBox="0 0 1024 1024"><path d="M751.148705 578.773799c-61.987796 0-117.066229 30.121018-151.388942 76.488045L398.287145 536.382317c1.991354-10.171664 3.046383-20.673855 3.046383-31.419594 0-18.776645-3.196809-36.817534-9.058306-53.621245l193.486736-107.492176c31.949666 58.566884 94.104261 98.391914 165.386748 98.391914 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 65.73105 751.148705 65.73105c-103.804181 0-188.255595 84.450391-188.255595 188.254571 0 14.246469 1.600451 28.125571 4.613064 41.4746L368.032074 406.279167c-29.841655-39.193651-76.976162-64.544015-129.927141-64.544015-90.004897 0-163.228595 73.223698-163.228595 163.228595 0 90.003873 73.223698 163.228595 163.228595 163.228595 60.882626 0 114.078175-33.510208 142.134161-83.049484L575.173808 700.16452c-7.925507 20.788465-12.280698 43.325761-12.280698 66.86385 0 103.803157 84.450391 188.254571 188.255595 188.254571 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 578.773799 751.148705 578.773799zM751.148705 116.89636c75.590606 0 137.089261 61.498656 137.089261 137.089261s-61.498656 137.089261-137.089261 137.089261c-75.591629 0-137.090285-61.498656-137.090285-137.089261S675.557076 116.89636 751.148705 116.89636zM238.105956 617.026008c-61.791321 0-112.063285-50.27094-112.063285-112.063285 0-61.791321 50.27094-112.063285 112.063285-112.063285s112.063285 50.27094 112.063285 112.063285C350.168218 566.755068 299.897278 617.026008 238.105956 617.026008zM751.148705 904.117632c-75.591629 0-137.090285-61.498656-137.090285-137.089261s61.498656-137.089261 137.090285-137.089261c75.590606 0 137.089261 61.498656 137.089261 137.089261S826.739311 904.117632 751.148705 904.117632z"  ></path></symbol><symbol id="icon-hj2" viewBox="0 0 1024 1024"><path d="M963.66 256.607c0-0.244 0-0.607-0.126-0.851 0-0.369 0-0.614-0.119-0.978 0-0.369-0.119-0.733-0.119-1.104 0-0.244 0-0.487-0.126-0.725 0-0.369-0.119-0.859-0.244-1.222 0-0.244-0.119-0.369-0.119-0.613-0.126-0.365-0.126-0.852-0.245-1.216 0-0.244-0.126-0.369-0.126-0.613-0.119-0.365-0.244-0.734-0.364-1.222-0.126-0.244-0.126-0.49-0.244-0.609l-0.369-1.095c-0.119-0.245-0.119-0.49-0.244-0.734-0.121-0.369-0.245-0.613-0.365-0.978-0.126-0.244-0.244-0.613-0.369-0.851-0.119-0.244-0.238-0.613-0.364-0.859-0.119-0.364-0.244-0.607-0.364-0.977l-0.371-0.734c-0.119-0.364-0.364-0.725-0.487-0.971-0.119-0.245-0.244-0.371-0.364-0.614-0.244-0.364-0.369-0.733-0.614-1.097-0.119-0.126-0.244-0.369-0.364-0.487l-0.733-1.097c-0.119-0.126-0.244-0.369-0.365-0.487-0.244-0.369-0.487-0.733-0.733-0.978-0.126-0.244-0.244-0.369-0.487-0.613-0.245-0.238-0.49-0.607-0.734-0.851-0.244-0.245-0.487-0.49-0.607-0.734-0.244-0.244-0.369-0.487-0.614-0.733-0.851-0.972-1.829-1.83-2.681-2.682-0.245-0.244-0.49-0.369-0.734-0.614-0.244-0.244-0.487-0.487-0.733-0.607-0.245-0.244-0.614-0.487-0.859-0.733-0.238-0.121-0.364-0.365-0.607-0.49-0.365-0.244-0.734-0.487-0.978-0.733-0.119-0.119-0.364-0.244-0.487-0.365l-1.097-0.733c-0.119-0.119-0.364-0.244-0.487-0.364-0.365-0.244-0.734-0.369-1.097-0.614-0.244-0.119-0.369-0.244-0.613-0.364-0.365-0.126-0.734-0.369-0.972-0.487l-0.734-0.369c-0.369-0.121-0.613-0.245-0.977-0.365-0.244-0.126-0.614-0.244-0.859-0.369-0.244-0.119-0.607-0.238-0.851-0.364-0.365-0.119-0.609-0.244-0.978-0.364-0.244-0.126-0.487-0.126-0.733-0.245l-1.097-0.369c-0.244-0.119-0.487-0.119-0.609-0.244-0.369-0.119-0.733-0.244-1.22-0.364-0.245 0-0.371-0.126-0.614-0.126-0.364-0.119-0.851-0.244-1.216-0.244-0.244 0-0.487-0.121-0.613-0.121-0.364-0.126-0.852-0.126-1.222-0.244-0.244 0-0.482-0.126-0.725-0.126-0.369 0-0.734-0.119-1.104-0.119-0.364 0-0.607 0-0.978-0.126-0.244 0-0.607 0-0.851-0.119h-242.407c-21.604 0-39.062 17.456-39.062 39.062 0 21.604 17.458 39.055 39.062 39.055h146.102l-3.171 3.177-217.27 217.265 0.369 0.369-49.676 49.676-155.87-155.87c-7.694-7.689-17.827-11.472-27.953-11.472-10.13-0.126-20.263 3.659-27.952 11.472l-282.446 282.322c-15.258 15.258-15.258 40.041 0 55.298 15.258 15.258 40.033 15.258 55.291 0l255.108-255.11 155.746 155.751c7.813 7.815 17.945 11.593 28.076 11.474 10.126 0.119 20.382-3.659 28.070-11.474l182.964-182.969c0.734-0.734 1.347-1.342 1.956-2.075l111.564-111.564v146.109c0 21.604 17.451 39.060 39.055 39.060s39.062-17.456 39.062-39.060v-235.085c0-0.244 0.126-0.49 0.126-0.614 0-0.244 0.119-0.487 0.119-0.733 0-0.364 0.119-0.734 0.119-1.097s0-0.607 0.126-0.977c0-0.245 0-0.609 0.119-0.852-0.122-1.466-0.122-2.807-0.122-4.030v0zM963.66 256.607z"  ></path></symbol><symbol id="icon-circleyuanquan" viewBox="0 0 1024 1024"><path d="M150.1184 150.1184C250.2656 50.0736 370.8928 0 512 0c141.1072 0 261.7344 50.0736 361.8816 150.1184C973.9264 250.2656 1024 370.8928 1024 512c0 141.2096-50.0736 261.8368-150.1184 361.8816C773.7344 973.9264 653.1072 1024 512 1024c-141.1072 0-261.7344-50.0736-361.8816-150.1184C50.0736 773.8368 0 653.2096 0 512 0 370.8928 50.0736 250.2656 150.1184 150.1184zM512 41.8816c-85.2992 0-164.1472 20.8896-236.3392 62.7712C203.4688 146.432 146.432 203.4688 104.6528 275.6608 62.7712 347.9552 41.8816 426.7008 41.8816 512c0 129.6384 45.9776 240.4352 137.8304 332.288C271.5648 936.2432 382.3616 982.1184 512 982.1184c129.6384 0 240.4352-45.8752 332.288-137.8304C936.2432 752.4352 982.1184 641.6384 982.1184 512c0-129.6384-45.9776-240.3328-137.8304-332.288C752.4352 87.7568 641.6384 41.8816 512 41.8816zM512 256c-36.1472 0-70.144 7.0656-102.1952 20.8896C377.856 290.9184 349.4912 309.3504 324.9152 332.288c-22.9376 24.576-41.472 52.9408-55.3984 84.8896S248.6272 483.328 248.6272 519.3728c0 36.1472 6.9632 70.144 20.8896 102.1952s32.4608 60.3136 55.3984 84.8896C349.4912 729.4976 377.856 747.9296 409.8048 761.856 441.856 775.7824 475.8528 782.7456 512 782.7456c36.1472 0 70.144-6.9632 102.1952-20.8896C646.144 747.9296 674.5088 729.4976 699.0848 706.4576c22.9376-24.576 41.472-52.9408 55.3984-84.8896s20.8896-66.048 20.8896-102.1952c0-36.0448-6.9632-70.144-20.8896-102.1952S722.0224 356.9664 699.0848 332.288C674.5088 309.3504 646.144 290.9184 614.1952 276.8896 582.144 263.0656 548.1472 256 512 256z"  ></path></symbol><symbol id="icon-bhjlink" viewBox="0 0 1024 1024"><path d="M901.920618 465.785468c-50.993571 0-94.522533 32.698367-110.688942 78.273953L702.244627 544.059421c1.764013-10.590222 2.890616-21.423121 2.890616-32.694527 0-72.177856-40.480145-134.923579-99.898281-166.857822l34.099901-112.776268c8.829281 2.126492 18.1347 3.327588 27.724265 3.327588 64.833817 0 117.472367-52.597848 117.472367-117.589097C784.532727 52.594008 731.894177 0 667.06036 0c-64.911381 0-117.509229 52.594008-117.509229 117.470063 0 49.305587 30.248562 91.349307 73.177745 108.842756l-33.419485 110.692013c-22.548956-9.588797-47.462473-14.807112-73.540224-14.807112-49.18732 0-93.841349 18.658451-127.540374 49.309426L213.348053 196.583401l-1.886119 2.008226c19.940183-21.103648 32.256788-49.588197 32.256788-81.003297 0-64.872983-52.517212-117.470063-117.470063-117.470063-64.913685 0-117.511533 52.59708-117.511533 117.470063 0 65.034255 52.59708 117.592169 117.511533 117.592169 31.412796 0 59.898881-12.358075 80.921125-32.335888l-6.179038 6.056931 174.960609 174.879973c-30.729308 33.66293-49.506025 78.47516-49.506025 127.661712 0 43.008283 14.401627 82.685138 38.593258 114.501114l-149.845117 120.999625c-21.503757-28.044506-55.285722-46.218372-93.357532-46.218372-64.874519 0-117.430897 52.719186-117.430897 117.592169 0 64.833049 52.556378 117.470063 117.430897 117.470063 64.872983 0 117.549163-52.637014 117.549163-117.470063 0-20.541499-5.335813-39.878062-14.602834-56.68956l151.369526-122.203792c34.584487 37.633303 84.29095 61.384123 139.618142 61.384123 28.082136 0 54.602234-6.057699 78.553492-17.091805l52.716114 119.514383c-35.585143 20.222026-59.497236 58.335306-59.497236 102.106945 0 64.912149 52.637014 117.549163 117.592169 117.549163 64.872983 0 117.388659-52.637014 117.388659-117.549163 0-64.833049-52.516444-117.513069-117.388659-117.513069-15.047485 0-29.248673 2.929782-42.446133 7.903885l-52.798286-120.034294c42.807844-24.554878 75.182898-65.518073 88.46253-114.221576l88.222926 0c-1.405374 7.018422-1.96522 14.241123-1.96522 21.743362 0 64.872983 52.557914 117.509997 117.387123 117.509997 64.995089 0 117.596009-52.637014 117.596009-117.509997C1019.508947 518.383316 966.994039 465.785468 901.920618 465.785468L901.920618 465.785468zM901.920618 465.785468"  ></path></symbol><symbol id="icon-lianjie_connecting5" viewBox="0 0 1024 1024"><path d="M801.25952 251.74016l-28.9792-28.99968-150.79424 150.8352-35.1232-35.10272-99.14368 99.16416 99.14368 99.16416 99.16416-99.16416-35.10272-35.1232zM487.19872 476.8768l-29.94176 29.94176-19.61984-19.61984-99.16416 99.16416 35.10272 35.1232-150.8352 150.79424 28.95872 28.95872 150.8352-150.79424 35.10272 35.10272 99.14368-99.14368-19.61984-19.64032 29.96224-29.96224-59.92448-59.92448z m-15.48288 44.4416l15.4624-15.4624 30.98624 30.98624-15.4624 15.44192-30.98624-30.96576z" fill="" ></path></symbol><symbol id="icon-xiazai" viewBox="0 0 1024 1024"><path d="M840.5 900.3h-657c-16.5 0-29.9 13.4-29.9 29.9s13.4 29.9 29.9 29.9h657.1c16.5 0 29.9-13.4 29.9-29.9-0.1-16.6-13.5-29.9-30-29.9zM631.5 123.7V541.8H763.1L512 769.9l-251.2-228h131.7V123.7h239m0-59.7h-239c-33 0-59.7 26.7-59.7 59.7v358.4H183.5c-26.6 0-39.9 32.2-21.1 51l328.5 298.2c5.8 5.8 13.5 8.7 21.1 8.7s15.3-2.9 21.1-8.7l328.5-298.2c18.8-18.8 5.5-51-21.1-51H691.2V123.7c0-33-26.7-59.7-59.7-59.7z"  ></path></symbol><symbol id="icon-ico_reset" viewBox="0 0 1024 1024"><path d="M925.97087933 277.33133334a479.997 479.997 0 1 0 54.33566 255.9984H916.05094133a415.9974 415.9974 0 1 1-64.191599-255.9984h74.047537z"  ></path><path d="M978.64255033 61.01268534L725.33213333 371.09074734h297.59814z"  ></path></symbol><symbol id="icon-fangda" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM320 480a32 32 0 0 1 0-64h256a32 32 0 0 1 0 64z"  ></path><path d="M480 576a32 32 0 0 1-64 0V320a32 32 0 0 1 64 0z"  ></path></symbol><symbol id="icon-zidong" viewBox="0 0 1024 1024"><path d="M131.3 363.3c-19.2 47.3-28.9 97.3-28.9 148.7 0 51.3 9.7 101.3 28.9 148.7 7 17.2 15.1 33.8 24.3 49.7l15.8-49.1 42.8 13.8-39.8 123.8-42.8-13.9-80.9-26 13.8-42.8 52.3 16.8c-98-168.4-74.8-387.9 69.4-532.1C342.4 44.7 586.9 30.5 759.1 158.3l-32.2 32.2c-25.1-18-52.1-32.9-80.9-44.6-47.3-19.2-97.3-28.9-148.7-28.9-51.3 0-101.3 9.7-148.7 28.9-49 19.9-92.9 49.1-130.6 86.8s-66.9 81.7-86.7 130.6z m828.3-60.2l13.8-42.8-80.9-26-42.8-13.8-39.8 123.8 42.8 13.8 15-46.7c9.8 16.6 18.4 34 25.8 52.1 19.2 47.3 28.9 97.3 28.9 148.7 0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6C768.9 829 725 858.2 676 878.1c-47.3 19.2-97.3 28.9-148.7 28.9-51.3 0-101.3-9.7-148.7-28.9-28.8-11.7-55.9-26.6-80.9-44.6l-32.2 32.2c126.3 93.7 382.6 147.7 572.9-42.6 145.8-145.8 167.9-368.6 66.1-537.7l55.1 17.7zM474 241.2L295 730.4h64.8l50.5-148.2h195.3l54 148.2h70.3L539.6 241.2H474z m-45.9 288.3L479.8 386c11-30.9 19.4-62.1 25.4-93.4 6.9 26 17.9 59.9 32.8 101.5l48.2 135.5H428.1z" fill="" ></path></symbol><symbol id="icon-quanping" viewBox="0 0 1024 1024"><path d="M795.5 192H581c-19.6 0-35.6 15.7-36 35.3-0.4 20.3 16.4 36.7 36.7 36.7h128.4L581 393.1c-14 14-14 36.9 0 50.9s36.9 14 50.9 0L760 315.9v129c0 19.6 15.8 35.6 35.3 36 20.2 0.4 36.7-16.4 36.7-36.7V228.5c0-20.1-16.3-36.5-36.5-36.5zM442.2 760H313.8L443 630.9c14-14 14-36.9 0-50.9s-36.9-14-50.9 0L264 708.1V579c0-19.6-15.8-35.6-35.3-36-20.2-0.4-36.7 16.4-36.7 36.7v215.6c0 20.3 16.4 36.7 36.7 36.7H443c19.6 0 35.6-15.7 36-35.3 0.3-20.3-16.5-36.7-36.8-36.7z"  ></path><path d="M838 136c27.6 0 50 22.4 50 50v652c0 27.6-22.4 50-50 50H186c-27.6 0-50-22.4-50-50V186c0-27.6 22.4-50 50-50h652m0-72H186c-16.4 0-32.4 3.2-47.5 9.6-14.5 6.1-27.6 14.9-38.8 26.1-11.2 11.2-20 24.2-26.1 38.8-6.4 15.1-9.6 31.1-9.6 47.5v652c0 16.4 3.2 32.4 9.6 47.5 6.1 14.5 14.9 27.6 26.1 38.8 11.2 11.2 24.2 20 38.8 26.1 15.1 6.4 31.1 9.6 47.5 9.6h652c16.4 0 32.4-3.2 47.5-9.6 14.5-6.1 27.6-14.9 38.8-26.1 11.2-11.2 20-24.2 26.1-38.8 6.4-15.1 9.6-31.1 9.6-47.5V186c0-16.4-3.2-32.4-9.6-47.5-6.1-14.5-14.9-27.6-26.1-38.8-11.2-11.2-24.2-20-38.8-26.1-15.1-6.4-31.1-9.6-47.5-9.6z"  ></path></symbol><symbol id="icon-lianjieliu" viewBox="0 0 1024 1024"><path d="M280.224 425.856h348.608a29.536 29.536 0 1 0 0-59.072H280.224c-52.448 0-93.152-34.304-93.152-73.856s40.704-73.856 93.152-73.856h140.128C432.096 258.816 468.448 288 512 288s79.904-29.184 91.648-68.928h178.08a29.536 29.536 0 1 0 0-59.072h-179.584C588.896 122.784 553.728 96 512 96s-76.896 26.784-90.112 64H280.224C197.184 160 128 218.272 128 292.928s69.184 132.928 152.224 132.928z"  ></path><path d="M895.936 415.2A96 96 0 1 0 800 512c30.656 0 57.632-14.624 75.2-36.992 10.56 12.064 16.832 26.56 16.832 41.92 0 39.552-40.704 73.856-93.152 73.856H306.016A95.584 95.584 0 0 0 224 544a95.68 95.68 0 0 0-95.232 88.352C89.888 656.224 64 695.424 64 740.928c0 74.656 69.184 132.928 152.224 132.928h241.728A95.808 95.808 0 0 0 544 928a96 96 0 1 0 0-192 95.904 95.904 0 0 0-94.272 78.752H216.224c-52.448 0-93.152-34.304-93.152-73.856 0-17.504 8.32-33.792 21.76-46.72A95.808 95.808 0 0 0 224 736a95.68 95.68 0 0 0 95.008-86.144h479.84c83.072 0 152.224-58.272 152.224-132.928 0.032-41.536-21.824-77.568-55.136-101.728z"  ></path></symbol><symbol id="icon-shuaxin" viewBox="0 0 1024 1024"><path d="M512 919.552c-224.768 0-407.552-182.784-407.552-407.552 0-8.704 0.512-17.408 1.024-26.112l71.68 4.608c-0.512 7.168-0.512 14.336-0.512 21.504 0 185.344 150.528 335.872 335.872 335.872 86.528 0 168.448-32.768 230.912-92.16l49.152 52.224C716.288 880.128 616.96 919.552 512 919.552zM919.552 512h-71.68c0-11.776-0.512-23.552-2.048-35.328-17.92-171.52-161.28-300.544-334.336-300.544-67.584 0-132.096 19.968-187.904 57.344L284.16 174.08c67.072-45.568 145.92-69.632 227.84-69.632 209.408 0 384 156.672 405.504 365.056 1.536 13.824 2.048 28.16 2.048 42.496z" fill="#707070" ></path><path d="M140.288 290.816L28.16 491.52c-3.072 5.12 1.024 11.776 6.656 11.776H258.56c6.144 0 9.728-6.144 6.656-11.776L153.6 290.816c-3.072-5.632-10.752-5.632-13.312 0zM870.4 675.84L758.272 475.136c-3.072-5.12 1.024-11.776 6.656-11.776h223.744c6.144 0 9.728 6.144 6.656 11.776L883.712 675.84c-2.56 5.12-10.24 5.12-13.312 0zM270.336 202.24a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0zM728.576 784.896a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0z" fill="#707070" ></path></symbol><symbol id="icon-resize-" viewBox="0 0 1024 1024"><path d="M410.816 673.514667L230.997333 853.333333H384v85.333334H85.333333V640h85.333334v153.002667l179.818666-179.84 60.330667 60.373333z m-53.632-256L170.666667 230.997333V384H85.333333V85.333333h298.666667v85.333334h-153.002667l186.517334 186.517333-60.330667 60.330667z m234.666667-45.696L793.002667 170.666667H640V85.333333h298.666667v298.666667h-85.333334v-153.002667l-201.152 201.173334-60.330666-60.373334z m67.029333 226.709333L853.333333 793.002667V640h85.333334v298.666667H640v-85.333334h153.002667l-194.474667-194.453333 60.352-60.352z"  ></path></symbol><symbol id="icon-guanxitu" viewBox="0 0 1024 1024"><path d="M209.003789 401.084632l29.749895-44.948211 107.843369 71.464421-29.749895 44.894316zM682.469053 546.600421l-14.551579-51.846737 124.496842-35.031579 14.551579 51.846737zM315.068632 812.840421l-40.367158-35.678316 85.692631-96.902737 40.421053 35.732211zM597.962105 390.251789l-46.672842-26.947368 43.11579-74.64421 46.672842 26.947368zM615.639579 728.764632l41.121684-34.816 83.536842 98.735157-41.121684 34.816z" fill="#444A5C" ></path><path d="M501.221053 765.305263c-118.568421 0-215.578947-97.010526-215.578948-215.578947s97.010526-215.578947 215.578948-215.578948 215.578947 97.010526 215.578947 215.578948-97.010526 215.578947-215.578947 215.578947z m0-377.263158c-91.621053 0-161.684211 70.063158-161.684211 161.684211s70.063158 161.684211 161.684211 161.68421 161.684211-70.063158 161.68421-161.68421-75.452632-161.684211-161.68421-161.684211zM167.073684 452.715789c-59.284211 0-107.789474-48.505263-107.789473-107.789473s48.505263-107.789474 107.789473-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-26.947368-53.894737-53.894737-53.894737zM253.305263 948.547368c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-21.557895-53.894737-53.894737-53.894737zM856.926316 576.673684c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789473 107.789474-48.505263 107.789474-107.789473 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894736 53.894737-21.557895 53.894737-53.894736-21.557895-53.894737-53.894737-53.894737zM662.905263 350.315789C592.842105 350.315789 528.168421 291.031579 528.168421 215.578947s59.284211-134.736842 134.736842-134.736842 134.736842 59.284211 134.736842 134.736842-59.284211 134.736842-134.736842 134.736842z m0-215.578947c-43.115789 0-80.842105 37.726316-80.842105 80.842105s37.726316 80.842105 80.842105 80.842106 80.842105-37.726316 80.842105-80.842106-32.336842-80.842105-80.842105-80.842105zM749.136842 921.6c-43.115789 0-80.842105-37.726316-80.842105-80.842105s37.726316-80.842105 80.842105-80.842106 80.842105 37.726316 80.842105 80.842106-37.726316 80.842105-80.842105 80.842105z m0-107.789474c-16.168421 0-26.947368 10.778947-26.947368 26.947369s10.778947 26.947368 26.947368 26.947368 26.947368-10.778947 26.947369-26.947368-10.778947-26.947368-26.947369-26.947369z" fill="#444A5C" ></path></symbol><symbol id="icon-tupian" viewBox="0 0 1024 1024"><path d="M938.666667 553.92V768c0 64.8-52.533333 117.333333-117.333334 117.333333H202.666667c-64.8 0-117.333333-52.533333-117.333334-117.333333V256c0-64.8 52.533333-117.333333 117.333334-117.333333h618.666666c64.8 0 117.333333 52.533333 117.333334 117.333333v297.92z m-64-74.624V256a53.333333 53.333333 0 0 0-53.333334-53.333333H202.666667a53.333333 53.333333 0 0 0-53.333334 53.333333v344.48A290.090667 290.090667 0 0 1 192 597.333333a286.88 286.88 0 0 1 183.296 65.845334C427.029333 528.384 556.906667 437.333333 704 437.333333c65.706667 0 126.997333 16.778667 170.666667 41.962667z m0 82.24c-5.333333-8.32-21.130667-21.653333-43.648-32.917333C796.768 511.488 753.045333 501.333333 704 501.333333c-121.770667 0-229.130667 76.266667-270.432 188.693334-2.730667 7.445333-7.402667 20.32-13.994667 38.581333-7.68 21.301333-34.453333 28.106667-51.370666 13.056-16.437333-14.634667-28.554667-25.066667-36.138667-31.146667A222.890667 222.890667 0 0 0 192 661.333333c-14.464 0-28.725333 1.365333-42.666667 4.053334V768a53.333333 53.333333 0 0 0 53.333334 53.333333h618.666666a53.333333 53.333333 0 0 0 53.333334-53.333333V561.525333zM320 480a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m0-64a32 32 0 1 0 0-64 32 32 0 0 0 0 64z"  ></path></symbol><symbol id="icon-juhejiedian" viewBox="0 0 1024 1024"><path d="M533.333333 725.333333a64 64 0 1 1-64 64 64 64 0 0 1 64-64m0-85.333333a149.333333 149.333333 0 1 0 149.333334 149.333333 149.333333 149.333333 0 0 0-149.333334-149.333333z" fill="#666666" ></path><path d="M533.333333 277.333333m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M277.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M789.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M512 341.333333h42.666667v384h-42.666667z" fill="#666666" ></path><path d="M741.290667 357.504l30.165333 30.165333-225.066667 225.066667-30.165333-30.165333z" fill="#666666" ></path><path d="M558.08 582.016l-30.165333 30.165333-228.693334-228.693333 30.165334-30.165333z" fill="#666666" ></path></symbol><symbol id="icon-ziyuan" viewBox="0 0 1024 1024"><path d="M236.615854 752.86913h-0.484162A241.500139 241.500139 0 0 1 0.538332 527.733676a238.78883 238.78883 0 0 1 64.684079-180.011531 242.081134 242.081134 0 0 1 149.025146-74.367324 298.534454 298.534454 0 0 1 596.003751 25.951097V300.95207a221.262156 221.262156 0 0 1 213.031398 233.075715 222.714643 222.714643 0 0 1-221.262156 209.1581h-3.098639a27.500417 27.500417 0 0 1 0-54.904001h2.711309A167.520145 167.520145 0 0 0 968.378705 531.219644a166.261323 166.261323 0 0 0-166.16449-175.363573 151.058627 151.058627 0 0 0-18.204502 1.065157 27.500417 27.500417 0 0 1-30.211725-30.308558 240.822312 240.822312 0 0 0 1.549319-27.306752 243.727285 243.727285 0 0 0-487.357738 0 27.500417 27.500417 0 0 1-27.403584 27.500417 185.627813 185.627813 0 0 0-185.240484 197.538205A186.30564 186.30564 0 0 0 237.100016 697.965129a27.500417 27.500417 0 0 1-0.484162 54.904001z"  ></path><path d="M513.266174 1021.869686a27.500417 27.500417 0 0 1-27.500417-27.403584v-484.162268a27.500417 27.500417 0 1 1 54.904001 0v484.162268a27.403584 27.403584 0 0 1-27.403584 27.403584z"  ></path><path d="M513.266174 1024a27.500417 27.500417 0 0 1-19.366491-8.037094L342.260061 864.129619a27.500417 27.500417 0 1 1 38.732981-38.732981L513.266174 957.766602l130.530147-130.336483a27.500417 27.500417 0 0 1 38.732981 38.732982L532.632664 1015.962906a27.403584 27.403584 0 0 1-19.36649 8.037094z"  ></path></symbol><symbol id="icon-add-select" viewBox="0 0 1024 1024"><path d="M544 213.333333v266.666667H810.666667v64H544V810.666667h-64V544H213.333333v-64h266.666667V213.333333z"  ></path></symbol><symbol id="icon-sami-select" viewBox="0 0 1024 1024"><path d="M810.666667 480v64H213.333333v-64z"  ></path></symbol><symbol id="icon-icon_shuaxin" viewBox="0 0 1024 1024"><path d="M512 938.666667c-55.371852 0-109.226667-10.903704-159.857778-32.237037-48.924444-20.66963-92.823704-50.251852-130.465185-87.988149-37.736296-37.736296-67.318519-81.635556-87.988148-130.465185-21.428148-50.631111-32.237037-104.391111-32.237037-159.857777s10.903704-109.226667 32.237037-159.857778c20.66963-48.924444 50.251852-92.823704 87.988148-130.465185 37.736296-37.736296 81.635556-67.318519 130.465185-87.988149 50.631111-21.428148 104.391111-32.237037 159.857778-32.237037 63.81037 0 125.060741 14.222222 181.854815 42.382223 54.139259 26.832593 102.684444 66.085926 140.325926 113.682963 7.300741 9.197037 5.783704 22.660741-3.508148 29.961481-9.197037 7.300741-22.660741 5.783704-29.961482-3.508148-70.257778-88.936296-175.502222-139.946667-288.711111-139.946667-202.808889 0-367.881481 165.072593-367.881481 367.881482s165.072593 367.881481 367.881481 367.881481 367.881481-165.072593 367.881481-367.881481c0-11.757037 9.576296-21.333333 21.333334-21.333334S922.548148 516.361481 922.548148 528.118519c0 55.371852-10.903704 109.226667-32.237037 159.857777-20.66963 48.924444-50.251852 92.823704-87.988148 130.465185-37.736296 37.736296-81.635556 67.318519-130.465185 87.988149-50.631111 21.428148-104.485926 32.237037-159.857778 32.237037z"  ></path><path d="M817.398519 308.242963c-11.757037 0-21.333333-9.576296-21.333334-21.333333V106.666667c0-11.757037 9.576296-21.333333 21.333334-21.333334s21.333333 9.576296 21.333333 21.333334v180.242963c0 11.757037-9.481481 21.333333-21.333333 21.333333z"  ></path><path d="M817.398519 308.242963H637.155556c-11.757037 0-21.333333-9.576296-21.333334-21.333333s9.576296-21.333333 21.333334-21.333334h180.242963c11.757037 0 21.333333 9.576296 21.333333 21.333334s-9.481481 21.333333-21.333333 21.333333z"  ></path></symbol><symbol id="icon-lianjiezhong" viewBox="0 0 1024 1024"><path d="M883.396923 298.141538a99.721846 99.721846 0 0 1-142.414769 0 103.187692 103.187692 0 0 1 0-144.423384 99.721846 99.721846 0 0 1 142.414769 0 103.187692 103.187692 0 0 1 0 144.423384zM285.144615 760.438154a87.276308 87.276308 0 0 0-124.652307 0 90.269538 90.269538 0 0 0 0 126.385231c34.422154 34.894769 90.230154 34.894769 124.652307 0a90.269538 90.269538 0 0 0 0-126.424616z m482.579693 108.307692a64.472615 64.472615 0 0 1 0-90.269538 62.345846 62.345846 0 0 1 89.00923 0c24.576 24.930462 24.576 65.378462 0 90.269538a62.345846 62.345846 0 0 1-89.00923 0zM294.006154 298.141538a103.187692 103.187692 0 0 0 0-144.423384 99.721846 99.721846 0 0 0-142.454154 0 103.187692 103.187692 0 0 0 0 144.423384 99.721846 99.721846 0 0 0 142.454154 0z m324.214154-196.01723c0 56.438154-45.095385 102.163692-100.745846 102.163692-55.611077 0-100.706462-45.725538-100.706462-102.163692C416.768 45.725538 461.863385 0 517.474462 0c55.650462 0 100.745846 45.725538 100.745846 102.124308zM517.474462 870.793846c-41.747692 0-75.539692 34.264615-75.539693 76.603077 0 42.299077 33.831385 76.603077 75.539693 76.603077 41.747692 0 75.539692-34.264615 75.539692-76.603077 0-42.299077-33.792-76.603077-75.539692-76.603077z m416.768-294.990769c-27.805538 0-50.333538-22.843077-50.333539-51.042462 0-28.199385 22.528-51.042462 50.333539-51.042461 27.844923 0 50.412308 22.843077 50.372923 51.042461 0 28.199385-22.567385 51.081846-50.372923 51.081847zM201.452308 524.8c0-56.398769-45.095385-102.124308-100.745846-102.124308C45.095385 422.596923 0 468.283077 0 524.760615c0 56.398769 45.095385 102.124308 100.706462 102.124308 55.650462 0 100.745846-45.686154 100.745846-102.124308z"  ></path></symbol><symbol id="icon-loading" viewBox="0 0 1024 1024"><path d="M563.2 819.2a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8z m-320.4608-153.6a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m592.7936 25.6a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8zM947.2 477.1328a76.8 76.8 0 1 1 0 153.6 76.8 76.8 0 0 1 0-153.6zM128 307.2a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m782.6432-40.6016a51.2 51.2 0 1 1 0 102.4 51.2 51.2 0 0 1 0-102.4zM409.6 0a153.6 153.6 0 1 1 0 307.2 153.6 153.6 0 0 1 0-307.2z m384 153.6a25.6 25.6 0 1 1 0 51.2 25.6 25.6 0 0 1 0-51.2z" fill="#555555" ></path></symbol><symbol id="icon-tupushujuyuan" viewBox="0 0 1024 1024"><path d="M851.456 588.288c-13.312 0-25.6 2.048-37.888 5.12l-90.112-155.648 55.296-31.744c18.944 17.92 44.032 29.184 72.192 29.184 57.344 0 103.936-46.592 103.936-103.936s-46.592-103.936-103.936-103.936c-57.344 0-103.936 46.592-103.936 103.936 0 5.12 0.512 10.24 1.536 15.36l-58.368 33.792-82.944-143.872c26.112-25.088 41.984-59.904 41.984-98.816 0-75.776-61.44-137.216-137.216-137.216s-137.216 61.44-137.216 137.216c0 38.912 15.872 73.728 41.984 98.816l-84.992 146.944-56.832-32.768c1.024-6.144 2.048-12.8 2.048-19.456 0-57.344-46.592-103.936-103.936-103.936-57.344 0-103.936 46.592-103.936 103.936s46.592 103.936 103.936 103.936c26.624 0 51.2-10.24 69.12-26.624l56.32 32.768-88.064 152.576c-11.776-3.584-24.576-5.12-37.888-5.12-75.776 0-137.216 61.44-137.216 137.216s61.44 137.216 137.216 137.216c64.512 0 118.272-44.544 133.12-103.936h173.056v61.44c-40.96 13.824-70.656 52.736-70.656 98.816 0 57.344 46.592 103.936 103.936 103.936s103.936-46.592 103.936-103.936c0-46.08-29.696-84.48-70.656-98.816v-61.44h173.056c14.848 59.904 69.12 103.936 133.12 103.936 75.776 0 137.216-61.44 137.216-137.216s-61.44-137.728-137.216-137.728z m-410.112-450.048c0-38.912 31.744-70.656 70.656-70.656s70.656 31.744 70.656 70.656c0 13.824-4.096 26.624-10.752 37.376-12.288 19.456-33.28 32.256-57.856 33.28h-5.12c-24.576-1.024-45.568-13.824-57.856-33.28-6.144-10.752-9.728-24.064-9.728-37.376z m32.768 132.096c11.776 3.584 24.576 5.12 37.888 5.12s25.6-2.048 37.888-5.12l82.944 143.872-124.416 72.192-118.784-68.608 84.48-147.456z m-301.568 526.336c-38.912 0-70.656-31.744-70.656-70.656 0-38.912 31.744-70.656 70.656-70.656h2.56c24.576 1.024 45.568 13.824 57.856 33.28 1.024 1.536 1.536 2.56 2.56 4.096 5.12 9.728 8.192 20.992 8.192 33.28 0 11.776-3.072 23.552-8.192 33.28-12.288 22.016-35.84 37.376-62.976 37.376z m133.12-103.936c-6.144-25.6-19.456-48.128-37.888-65.536l88.064-152.576 122.88 70.656v146.944h-173.056z m239.616-151.552l120.832-69.632 90.112 155.648c-18.432 17.408-31.744 39.936-37.888 65.536h-173.056v-151.552z m306.176 255.488c-27.136 0-50.688-15.36-62.464-37.376-5.12-9.728-8.192-21.504-8.192-33.28 0-12.288 3.072-23.552 8.192-33.28 0.512-1.536 1.536-3.072 2.56-4.096 12.288-19.456 33.28-32.768 57.856-33.28h2.56c38.912 0 70.656 31.744 70.656 70.656-0.512 38.912-32.256 70.656-71.168 70.656z"  ></path></symbol><symbol id="icon-jiedian" viewBox="0 0 1024 1024"><path d="M882.1914 744.849921c-60.501005 0-112.097749 38.645092-131.425292 92.560342H244.912146c-80.468136 0-145.955927-62.61964-145.955926-139.570043 0-77.000371 65.487791-139.570043 145.955926-139.570043h136.312143c19.497433 53.585462 70.934281 91.950735 131.205434 91.950735 60.241173 0 111.688014-38.375266 131.205434-91.950735h136.452052C914.210763 558.280171 1023.340425 453.92743 1023.340425 325.660102S914.210763 93.040033 780.077216 93.040033H273.093982c-19.197627-54.165089-70.944274-93.040033-131.595182-93.040033C64.508422 0 1.928757 62.569672 1.928757 139.560049c0 76.950403 62.579665 139.570043 139.570043 139.570043 60.640915 0 112.377569-38.894931 131.585189-93.040033h506.993227c80.468136 0 145.955927 62.61964 145.955927 139.570043 0 77.000371-65.487791 139.570043-145.955927 139.570043H644.414655c-18.887826-54.734722-70.924287-94.139324-131.974938-94.139325-61.090625 0-113.097105 39.394609-131.974938 94.139325H244.912146c-134.133547 0-243.263209 104.352741-243.263209 232.620069 0 128.267328 109.129663 232.620069 243.263209 232.620069h505.524174c19.057717 54.394941 70.9043 93.529717 131.75508 93.529717 76.950403 0 139.570043-62.61964 139.570043-139.570043 0.009994-77.000371-62.61964-139.580036-139.570043-139.580036zM141.428845 207.036558c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376573 67.376574 0 37.146058-30.230515 67.376574-67.376573 67.376573z m371.000878 236.257725c37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573-37.166045 0-67.376574-30.230515-67.376574-67.376573 0.009994-37.176039 30.210528-67.376574 67.376574-67.376574z m369.761677 508.502254c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573z"  ></path></symbol><symbol id="icon-shitujiedianxianshi" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-shituxianshiquanbujiedian" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-suoxiao" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM288 480a32 32 0 0 1 0-64h320a32 32 0 0 1 0 64z"  ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1024 1024"><path d="M922.243 97.755c11.49 11.489 11.673 30.002 0.547 41.713l-0.547 0.562-109.119 109.1c57.22 78.348 42.673 195.388-35.778 273.839l-92.83 92.585c-11.572 11.54-30.264 11.653-41.97 0.253l-45.746-44.55-18.089 18.086a29.891 29.891 0 0 1-7.171 5.3l48.764 47.489c11.947 11.638 12.06 30.804 0.248 42.585l-95.875 95.629c-77.416 77.417-192.412 92.603-270.72 38.004L144.04 928.245c-11.676 11.673-30.606 11.673-42.282 0-11.49-11.489-11.673-30.002-0.547-41.713l0.547-0.562 109.677-109.657c-55.981-78.335-41.131-194.413 36.833-272.377l92.831-92.585c11.571-11.54 30.263-11.653 41.969-0.254l42.587 41.474a29.935 29.935 0 0 1 3.678-4.741l0.548-0.562 19.54-19.538-44.11-42.957c-11.828-11.522-12.057-30.422-0.6-42.23l0.351-0.355 95.875-95.63c76.927-76.926 190.96-92.408 269.23-39.03L879.961 97.755c11.676-11.673 30.606-11.673 42.282 0zM362.451 474.49l-71.916 71.727-1.884 1.911c-61.822 63.545-67.916 156.289-16.185 208.02C324.72 808.4 418.82 801.655 482.43 738.044l74.422-74.234-194.401-189.32z m129.807-5.04l-20.096 20.094a30.035 30.035 0 0 1-4.643 3.8l63.25 61.595a29.82 29.82 0 0 1 5.113-7.308l0.547-0.561 17.532-17.531-61.703-60.089z m260.889-198.691c-52.254-52.254-146.353-45.509-209.964 18.102l-74.422 74.234 194.4 189.322 71.939-71.75 1.862-1.888c61.822-63.545 67.916-156.29 16.185-208.02z" fill="#333333" ></path></symbol><symbol id="icon-xiantiao" viewBox="0 0 1024 1024"><path d="M827.076923 157.538462a39.384615 39.384615 0 1 1-14.375385 76.051692L233.590154 812.701538a39.384615 39.384615 0 1 1-22.291692-22.291692L790.409846 211.298462A39.384615 39.384615 0 0 1 827.076923 157.538462z" fill="#333333" ></path></symbol></svg>', l = (l = document.getElementsByTagName("script"))[l.length - 1].getAttribute("data-injectcss");
  if (l && !s.__iconfont__svg__cssinject__) {
    s.__iconfont__svg__cssinject__ = !0;
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (h) {
      console && console.log(h);
    }
  }
  function r() {
    i || (i = !0, t());
  }
  n = function() {
    var h, d, f, g;
    (g = document.createElement("div")).innerHTML = c, c = null, (f = g.getElementsByTagName("svg")[0]) && (f.setAttribute("aria-hidden", "true"), f.style.position = "absolute", f.style.width = 0, f.style.height = 0, f.style.overflow = "hidden", h = f, (d = document.body).firstChild ? (g = h, (f = d.firstChild).parentNode.insertBefore(g, f)) : d.appendChild(h));
  }, document.addEventListener ? ~["complete", "loaded", "interactive"].indexOf(document.readyState) ? setTimeout(n, 0) : (e = function() {
    document.removeEventListener("DOMContentLoaded", e, !1), n();
  }, document.addEventListener("DOMContentLoaded", e, !1)) : document.attachEvent && (t = n, o = s.document, i = !1, (a = function() {
    try {
      o.documentElement.doScroll("left");
    } catch {
      return void setTimeout(a, 50);
    }
    r();
  })(), o.onreadystatechange = function() {
    o.readyState == "complete" && (o.onreadystatechange = null, r());
  });
})(window);
const gt = (s) => ({
  onNodeClick: s.onNodeClick,
  onNodeExpand: s.onNodeExpand,
  onNodeDragging: s.onNodeDragging,
  onNodeDragStart: s.onNodeDragStart,
  onNodeDragEnd: s.onNodeDragEnd,
  onNodeCollapse: s.onNodeCollapse,
  onLineClick: s.onLineClick,
  onImageDownload: s.onImageDownload,
  onCanvasDragEnd: s.onCanvasDragEnd,
  beforeChangeLayout: s.beforeChangeLayout,
  onContextmenu: s.onContextmenu,
  onCanvasClick: s.onCanvasClick,
  onCanvasSelectionEnd: s.onCanvasSelectionEnd,
  onImageSaveAsFile: s.onImageSaveAsFile,
  onZoomEnd: s.onZoomEnd
}), Mo = () => {
  const s = J(ie), n = J(me), e = s.options, [t, o] = vt(!1), i = () => {
    o(!t);
  }, a = () => {
    s.printOptions();
  }, c = () => {
    s.getGraphJsonData();
  }, l = () => {
    s.enableDebugLog(!e.debug), u("debugLog:", e.debug), n();
  };
  return /* @__PURE__ */ Z("div", { children: [
    /* @__PURE__ */ m("div", { className: "c-setting-panel-button", onClick: () => {
      i();
    }, children: "Debug" }),
    t && /* @__PURE__ */ Z("div", { className: "c-setting-panel", children: [
      /* @__PURE__ */ m("div", { className: "c-debug-tools-row", children: /* @__PURE__ */ m("button", { onClick: () => {
        a();
      }, children: "print options in console" }) }),
      /* @__PURE__ */ m("div", { className: "c-debug-tools-row", children: /* @__PURE__ */ m("button", { onClick: () => {
        c();
      }, children: "print json data in console" }) }),
      /* @__PURE__ */ Z("div", { className: "c-debug-tools-row", children: [
        "debug log status: ",
        e.debug ? "true" : "false",
        /* @__PURE__ */ Z("button", { onClick: () => {
          l();
        }, children: [
          e.debug ? "disable" : "enable",
          " debug log"
        ] })
      ] })
    ] })
  ] });
}, ko = ({ children: s }) => {
  const n = J(ie), e = J(me), t = async () => {
    await n.refresh(), e();
  }, o = () => {
    n.toggleAutoLayout();
  }, i = () => {
    n.fullscreen(), e();
  }, a = () => {
    n.downloadAsImage("png");
  }, c = async () => {
    const h = n;
    await h.setZoom(100), await h.moveToCenter(), await h.zoomToFit(), e();
  }, l = (h) => {
    n.zoom(h), e();
  }, r = n && n.options;
  return /* @__PURE__ */ Z(
    "div",
    {
      className: [
        "rel-toolbar",
        "rel-toolbar-h-" + r.toolBarPositionH,
        "rel-toolbar-v-" + r.toolBarPositionV,
        "rel-toolbar-" + r.toolBarDirection
      ].join(" "),
      children: [
        r.allowShowFullscreenMenu && /* @__PURE__ */ m("div", { title: "\u5168\u5C4F/\u9000\u51FA\u5168\u5C4F", className: "c-mb-button", onClick: () => {
          i();
        }, children: /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-resize-" }) }) }),
        r.allowShowZoomMenu && /* @__PURE__ */ Z(Ee.Fragment, { children: [
          /* @__PURE__ */ m("div", { title: "\u653E\u5927", className: "c-mb-button", onClick: () => {
            l(20);
          }, children: /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-fangda" }) }) }),
          /* @__PURE__ */ Z("div", { className: "c-current-zoom", onDoubleClick: () => {
            c();
          }, children: [
            r.canvasZoom,
            "%"
          ] }),
          /* @__PURE__ */ m("div", { title: "\u7F29\u5C0F", className: "c-mb-button", onClick: () => {
            l(-20);
          }, children: /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-suoxiao" }) }) })
        ] }),
        r.allowAutoLayoutIfSupport && r.isNeedShowAutoLayoutButton && /* @__PURE__ */ m(
          "div",
          {
            title: "options.autoLayouting?'\u70B9\u51FB\u505C\u6B62\u81EA\u52A8\u5E03\u5C40':'\u70B9\u51FB\u5F00\u59CB\u81EA\u52A8\u8C03\u6574\u5E03\u5C40'",
            className: [
              "c-mb-button",
              r.autoLayouting && "c-mb-button-on"
            ].join(" "),
            onClick: () => {
              o();
            },
            children: r.autoLayouting ? /* @__PURE__ */ m("svg", { className: "c-loading-icon rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-lianjiezhong" }) }) : /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-zidong" }) })
          }
        ),
        r.allowShowRefreshButton && /* @__PURE__ */ m("div", { title: "\u5237\u65B0", className: "c-mb-button", onClick: () => {
          t();
        }, children: /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-ico_reset" }) }) }),
        r.allowShowDownloadButton && /* @__PURE__ */ m("div", { title: "\u4E0B\u8F7D\u56FE\u7247", className: "c-mb-button", onClick: () => {
          a();
        }, children: /* @__PURE__ */ m("svg", { className: "rg-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-tupian" }) }) }),
        s,
        /* @__PURE__ */ m("div", { style: { clear: "both" } })
      ]
    }
  );
}, No = () => /* @__PURE__ */ m("div", { className: "h-full bg-white", children: "not support" }), zo = ({ expandButtonClass: s, expandOrCollapseNode: n, expandHolderPosition: e, color: t }) => /* @__PURE__ */ m(
  "div",
  {
    className: `c-expand-positon-${e} c-btn-open-close`,
    children: /* @__PURE__ */ m(
      "span",
      {
        className: s,
        style: { backgroundColor: t },
        onClickCapture: (o) => {
          n(o);
        },
        onTouchEnd: (o) => {
          n(o);
        }
      }
    )
  }
), St = ({ nodeProps: s, NodeSlot: n, ExpandHolderSlot: e }) => {
  var O;
  const t = J(ie), o = J(me), i = Se();
  Oe(() => (a(i.current), t.addNodeResizeListener(i.current, s), () => {
    t.removeNodeResizeListener(i.current);
  }));
  const a = (E) => {
    if (E.offsetWidth === 0 && E.offsetHeight === 0)
      return;
    const F = E.offsetWidth, V = E.offsetHeight;
    (s.el.offsetWidth !== F || s.el.offsetHeight !== V) && (t.updateNodeOffsetSize(s, F, V), o());
  }, c = async (E) => {
    await t.expandOrCollapseNode(s, E);
  }, l = (E) => {
    E.stopPropagation(), t.onNodeDragStart(s, E);
  }, r = (E) => {
    E.stopPropagation(), t.onNodeClick(s, E);
  }, h = t.options, d = s.width || h.defaultNodeWidth, f = s.height || h.defaultNodeHeight, g = `${s.borderColor || h.defaultNodeBorderColor} solid ${s.borderWidth === void 0 ? h.defaultNodeBorderWidth : s.borderWidth}px`, y = !(h.hideNodeContentByZoom === !0 && h.canvasZoom < 40), v = s.opacity === void 0 ? 1 : s.opacity > 1 ? s.opacity / 100 : s.opacity, w = x.isAllowShowNode(s), b = s.expandHolderPosition && s.expandHolderPosition !== "hide" || h.defaultExpandHolderPosition && h.defaultExpandHolderPosition !== "hide" && s.lot.childs && s.lot.childs.length > 0, P = s.expanded === !1 ? "c-expanded" : "c-collapsed";
  return /* @__PURE__ */ Z(
    "div",
    {
      ref: i,
      style: {
        display: w ? void 0 : "none",
        left: s.x + "px",
        top: s.y + "px",
        opacity: v
      },
      className: `rel-node-peel ${s.selected ? "rel-node-selected" : ""} ${s.dragging ? "rel-node-dragging" : ""} ${s.id === h.checkedNodeId ? "rel-node-peel-checked" : ""} ${(O = s.className) != null ? O : s.className}`,
      "data-id": s.id,
      children: [
        b && (e ? /* @__PURE__ */ m(
          e,
          {
            nodeProps: s,
            expandButtonClass: P,
            expandOrCollapseNode: (E) => {
              c(E);
            },
            expandHolderPosition: s.expandHolderPosition || h.defaultExpandHolderPosition,
            color: h.defaultExpandHolderColor || s.color || h.defaultNodeColor
          }
        ) : /* @__PURE__ */ m(
          zo,
          {
            nodeProps: s,
            expandButtonClass: P,
            expandOrCollapseNode: (E) => {
              c(E);
            },
            expandHolderPosition: s.expandHolderPosition || h.defaultExpandHolderPosition,
            color: h.defaultExpandHolderColor || s.color || h.defaultNodeColor
          }
        )),
        s.html ? /* @__PURE__ */ m(
          "div",
          {
            onClickCapture: (E) => {
              r(E);
            },
            onMouseDownCapture: (E) => {
              l(E);
            },
            onTouchStartCapture: (E) => {
              l(E);
            },
            dangerouslySetInnerHTML: { __html: s.html }
          }
        ) : /* @__PURE__ */ m(
          "div",
          {
            className: `rel-node-shape-${s.nodeShape === void 0 ? h.defaultNodeShape : s.nodeShape} rel-node-type-${s.type} ${s.id === h.checkedNodeId ? "rel-node-checked" : ""} ${s.flashing ? "rel-node-flashing" : ""} ${s.styleClass} ${s.innerHTML ? "rel-diy-node" : ""}`,
            style: {
              backgroundColor: s.color === void 0 ? h.defaultNodeColor : s.color,
              color: s.fontColor === void 0 ? h.defaultNodeFontColor : s.fontColor,
              border: g,
              width: d && `${d}px`,
              height: f && `${f}px`
            },
            onClickCapture: (E) => {
              r(E);
            },
            onMouseDownCapture: (E) => {
              l(E);
            },
            onTouchStartCapture: (E) => {
              l(E);
            },
            children: y && /* @__PURE__ */ m(Pe, { children: n ? /* @__PURE__ */ m(n, { node: s, relationGraph: t }) : /* @__PURE__ */ m(Pe, { children: s.innerHTML ? /* @__PURE__ */ m("div", { dangerouslySetInnerHTML: { __html: s.innerHTML } }) : /* @__PURE__ */ m(
              "div",
              {
                style: { color: s.fontColor || h.defaultNodeFontColor },
                className: "c-node-text",
                children: /* @__PURE__ */ m("span", { children: s.text })
              }
            ) }) })
          }
        )
      ]
    }
  );
}, qe = ({ link: s, relation: n, relationIndex: e }) => {
  const t = J(ie), o = J(me), i = t.options, a = n.id === i.checkedLineId, c = t.getArrow(n, s, !0), l = t.getArrow(n, s, !1), r = () => {
    const { path: g, textPosition: y } = t.createLinePath(s, n, e);
    let v;
    try {
      v = t.getTextTransform(n, y.x, y.y, y.rotate);
    } catch (w) {
      u(w);
    }
    return {
      path: g,
      textTransform: v
    };
  }, h = t.getLineTextStyle(s, n, e), d = (g) => {
    t.onLineClick(n, s, g), o();
  }, f = r();
  return /* @__PURE__ */ Z("g", { className: [n.className].join(" "), children: [
    /* @__PURE__ */ m(
      "path",
      {
        d: f.path,
        className: [
          "c-rg-line",
          n.styleClass,
          n.dashType ? "rg-line-dashtype-" + n.dashType : void 0,
          n.animation ? "rg-line-anm-" + n.animation : void 0,
          a ? "c-rg-line-checked" : void 0
        ].join(" "),
        stroke: n.color ? n.color : i.defaultLineColor,
        style: {
          opacity: n.opacity,
          pointerEvents: n.disableDefaultClickEffect ? "none" : void 0,
          strokeWidth: (n.lineWidth ? n.lineWidth : i.defaultLineWidth) + "px"
        },
        markerStart: c,
        markerEnd: l,
        fill: n.lineShape === 8 ? n.color || i.defaultLineColor : "none",
        onTouchStart: (g) => d(g),
        onClick: (g) => d(g)
      }
    ),
    h && i.defaultShowLineLabel && i.canvasZoom > 40 && /* @__PURE__ */ m("g", { transform: f.textTransform, children: /* @__PURE__ */ m(
      "text",
      {
        x: n.textOffset_x || i.defaultLineTextOffset_x || 0,
        y: n.textOffset_y || i.defaultLineTextOffset_y || 10,
        style: {
          opacity: n.opacity,
          fill: n.fontColor ? n.fontColor : i.defaultLineFontColor ? i.defaultLineFontColor : n.color ? n.color : i.defaultLineColor
        },
        textAnchor: h.textAnchor,
        className: `c-rg-line-text ${a && "c-rg-line-text-checked"}`,
        onTouchStart: (g) => d(g),
        onClick: (g) => d(g),
        children: h.text
      },
      "t-" + n.seeks_id
    ) })
  ] });
}, Ao = ({ link: s, relation: n, relationIndex: e }) => {
  const t = J(ie), o = J(me), i = t.options, a = `#${i.instanceId}-${s.seeks_id}-${e}`, c = n.id === i.checkedLineId, l = t.getLineTextStyle(s, n, e), r = (h) => {
    t.onLineClick(n, s, h), o();
  };
  return /* @__PURE__ */ Z("g", { className: [n.className].join(" "), children: [
    /* @__PURE__ */ m(
      "use",
      {
        xlinkHref: a,
        className: [
          "c-rg-line",
          n.styleClass,
          n.dashType ? `rg-line-dashtype-${n.dashType}` : void 0,
          n.animation ? `rg-line-anm-${n.animation}` : void 0,
          c ? "c-rg-line-checked" : void 0
        ].filter(Boolean).join(" "),
        onTouchStart: (h) => r(h),
        onClick: (h) => r(h)
      }
    ),
    l && i.defaultShowLineLabel && i.canvasZoom > 40 && /* @__PURE__ */ m("g", { transform: l.textOffset, children: /* @__PURE__ */ m(
      "text",
      {
        className: `c-rg-line-text ${c && "c-rg-line-text-checked"}`,
        style: {
          opacity: n.opacity,
          fill: n.fontColor || i.defaultLineFontColor || n.color || i.defaultLineColor
        },
        rotate: l.textRotate,
        onTouchStart: (h) => r(h),
        onClick: (h) => r(h),
        children: /* @__PURE__ */ m(
          "textPath",
          {
            xlinkHref: a,
            startOffset: l.textHPosition,
            textAnchor: l.textAnchor,
            method: "align",
            spacing: "auto",
            children: l.text
          }
        )
      }
    ) })
  ] });
}, To = ({ linkProps: s, LineSlot: n }) => {
  const e = J(ie), t = (i) => x.isAllowShowNode(i);
  Oe(() => {
  }, []);
  const o = e.options;
  return t(s.fromNode) && t(s.toNode) && /* @__PURE__ */ m(
    "g",
    {
      className: [
        "rel-link-peel",
        o.checkedLinkId === s.seeks_id ? "c-rg-link-checked" : ""
      ].join(" "),
      transform: "translate(0,0)",
      "data-id": s.seeks_id,
      children: s.relations.map(
        (i, a) => i.isHide !== !0 && /* @__PURE__ */ m(Ee.Fragment, { children: n ? /* @__PURE__ */ m(n, { relationGraph: e, link: s, line: i, lineIndex: a }) : (i.useTextPath !== void 0 ? i.useTextPath : o.lineUseTextPath) ? /* @__PURE__ */ m(Ao, { link: s, relation: i, relationIndex: a }) : /* @__PURE__ */ m(qe, { link: s, relation: i, relationIndex: a }) }, i.id)
      )
    }
  );
}, Do = ({ link: s, relation: n, relationIndex: e }) => {
  const t = J(ie), o = t.options, i = n.id === o.checkedLineId, a = () => {
    const { path: r } = t.createLinePath(
      s,
      n,
      e
    );
    return r;
  }, c = t.getArrow(n, s, !0), l = t.getArrow(n, s, !1);
  return /* @__PURE__ */ m(
    "path",
    {
      id: `${o.instanceId}-${s.seeks_id}-${e}`,
      d: a(),
      stroke: n.color ? n.color : o.defaultLineColor,
      style: {
        opacity: n.opacity,
        strokeWidth: `${n.lineWidth ? n.lineWidth : o.defaultLineWidth}px`
      },
      markerStart: c,
      markerEnd: l,
      className: `c-rg-line-path ${n.styleClass} ${i ? "c-rg-line-checked" : ""}`,
      fill: n.lineShape === 8 ? n.color || o.defaultLineColor : "none"
    }
  );
}, Bo = () => {
  const s = J(ie), n = s.createCheckedLinePath(), e = s.createCheckedLineStrokeWidth();
  return /* @__PURE__ */ m("g", { children: n && /* @__PURE__ */ m(
    "path",
    {
      d: n,
      fill: "none",
      stroke: "red",
      strokeWidth: e,
      className: "c-rg-line-checked-bg"
    }
  ) });
}, Po = (s) => {
  const n = J(ie), e = Se();
  Oe(() => {
    t();
  }, []);
  const t = () => {
    e.current.style.setProperty(
      "--stroke",
      `url('#${o.instanceId}-lineStyle')`
    ), e.current.style.setProperty(
      "--markerEnd",
      `url('#${o.instanceId}-start-arrow-default')`
    ), e.current.style.setProperty(
      "--markerStart",
      `url('#${o.instanceId}-arrow-default')`
    ), e.current.style.setProperty(
      "--markerEndChecked",
      `url('#${o.instanceId}-arrow-checked')`
    ), e.current.style.setProperty(
      "--markerStartChecked",
      `url('#${o.instanceId}-start-arrow-checked')`
    );
  }, o = n.options, i = n.allLineColors, a = n.graphData.nodes, c = n.graphData.links, l = n.graphData.elementLines;
  return /* @__PURE__ */ Z("div", { children: [
    /* @__PURE__ */ m("div", { ref: e, className: "rel-linediv", children: /* @__PURE__ */ Z(
      "svg",
      {
        className: "rel-lines-svg",
        style: {
          width: `${o.canvasSize.width}px`,
          height: `${o.canvasSize.height}px`
        },
        xmlns: "http://www.w3.org/2000/svg",
        children: [
          /* @__PURE__ */ Z("defs", { children: [
            /* @__PURE__ */ Z(
              "linearGradient",
              {
                id: `${o.instanceId}-lineStyle`,
                x1: "1",
                y1: "0",
                x2: "0",
                y2: "0",
                children: [
                  /* @__PURE__ */ m("stop", { offset: "0%", stopColor: "#e52c5c" }),
                  /* @__PURE__ */ m("stop", { offset: "100%", stopColor: "#FD8B37" })
                ]
              }
            ),
            /* @__PURE__ */ m(
              "marker",
              {
                id: `${o.instanceId}-arrow-default`,
                markerWidth: o.defaultLineMarker.markerWidth,
                markerHeight: o.defaultLineMarker.markerHeight,
                refX: o.defaultLineMarker.refX,
                refY: o.defaultLineMarker.refY,
                markerUnits: "userSpaceOnUse",
                orient: "auto",
                viewBox: "0 0 12 12",
                children: /* @__PURE__ */ m(
                  "path",
                  {
                    style: { fill: o.defaultLineColor },
                    d: o.defaultLineMarker.data
                  }
                )
              }
            ),
            /* @__PURE__ */ m(
              "marker",
              {
                id: `${o.instanceId}-start-arrow-default`,
                markerWidth: o.defaultLineMarker.markerWidth,
                markerHeight: o.defaultLineMarker.markerHeight,
                refX: o.defaultLineMarker.refX,
                refY: o.defaultLineMarker.refY,
                markerUnits: "userSpaceOnUse",
                orient: "auto",
                viewBox: "0 0 12 12",
                children: /* @__PURE__ */ m(
                  "path",
                  {
                    style: { fill: o.defaultLineColor },
                    d: o.defaultLineMarker.data,
                    transform: "translate(12,12)rotate(180)"
                  }
                )
              }
            ),
            /* @__PURE__ */ m(
              "marker",
              {
                id: `${o.instanceId}-arrow-checked`,
                markerUnits: "strokeWidth",
                markerWidth: "12",
                markerHeight: "12",
                viewBox: "0 0 12 12",
                refX: "6",
                refY: "6",
                orient: "auto",
                children: /* @__PURE__ */ m(
                  "path",
                  {
                    style: { fill: o.checkedLineColor },
                    d: "M2,2 L10,6 L2,10 L6,6 L2,2"
                  }
                )
              }
            ),
            /* @__PURE__ */ m(
              "marker",
              {
                id: `${o.instanceId}-start-arrow-checked`,
                markerUnits: "userSpaceOnUse",
                markerWidth: "12",
                markerHeight: "12",
                viewBox: "0 0 12 12",
                refX: "6",
                refY: "6",
                orient: "auto",
                children: /* @__PURE__ */ m(
                  "path",
                  {
                    style: { fill: o.checkedLineColor },
                    d: "M2,2 L10,6 L2,10 L6,6 L2,2",
                    transform: "translate(12,12)rotate(180)"
                  }
                )
              }
            ),
            i.map((r) => /* @__PURE__ */ m(
              "marker",
              {
                id: `${o.instanceId}-arrow-${r.id}`,
                markerWidth: o.defaultLineMarker.markerWidth,
                markerHeight: o.defaultLineMarker.markerHeight,
                refX: o.defaultLineMarker.refX,
                refY: o.defaultLineMarker.refY,
                markerUnits: "userSpaceOnUse",
                orient: "auto",
                viewBox: "0 0 12 12",
                children: /* @__PURE__ */ m(
                  "path",
                  {
                    fill: o.defaultLineMarker.color || r.color,
                    d: o.defaultLineMarker.data
                  }
                )
              },
              r.id
            )),
            i.map(
              (r) => /* @__PURE__ */ m(
                "marker",
                {
                  id: `${o.instanceId}-start-arrow-${r.id}`,
                  markerWidth: o.defaultLineMarker.markerWidth,
                  markerHeight: o.defaultLineMarker.markerHeight,
                  refX: o.defaultLineMarker.refX,
                  refY: o.defaultLineMarker.refY,
                  markerUnits: "userSpaceOnUse",
                  orient: "auto",
                  viewBox: "0 0 12 12",
                  children: /* @__PURE__ */ m(
                    "path",
                    {
                      fill: o.defaultLineMarker.color || r.color,
                      d: o.defaultLineMarker.data,
                      transform: "translate(12,12)rotate(180)"
                    }
                  )
                },
                `start-${r.id}`
              )
            ),
            c.map(
              (r) => !o.showEasyView && !r.invisiable && /* @__PURE__ */ m(Ee.Fragment, { children: r.relations.filter((h) => o.lineUseTextPath || h.useTextPath).map(
                (h, d) => /* @__PURE__ */ m(
                  Do,
                  {
                    link: r,
                    relation: h,
                    relationIndex: d
                  },
                  h.id
                )
              ) }, r.seeks_id)
            )
          ] }),
          !o.showEasyView && /* @__PURE__ */ m(Bo, {}),
          c.map(
            (r) => !o.showEasyView && !r.invisiable && /* @__PURE__ */ m(
              To,
              {
                linkProps: r,
                LineSlot: s.lineSlot
              },
              r.seeks_id
            )
          )
        ]
      }
    ) }),
    /* @__PURE__ */ m("div", { className: "rel-nodediv rel-nodediv-for-webkit", children: a.map(
      (r) => !o.showEasyView && !r.invisiable && /* @__PURE__ */ m(
        St,
        {
          nodeProps: r,
          NodeSlot: s.nodeSlot,
          ExpandHolderSlot: s.expandHolderSlot
        },
        r.id
      )
    ) }),
    /* @__PURE__ */ m("div", { className: "rel-linediv rel-linediv-el-lines", children: /* @__PURE__ */ Z(
      "svg",
      {
        className: "rrel-lines-svg rel-lines-svg-el-lines",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
          l.map(
            (r) => r.relations[0].isHide === !1 && /* @__PURE__ */ m(qe, { link: r, relation: r.relations[0], relationIndex: 0 }, "ell-" + r.relations[0].id)
          ),
          o.creatingLinePlot && o.newLinkTemplate.fromNode && /* @__PURE__ */ m(qe, { link: o.newLinkTemplate, relation: o.newLineTemplate, relationIndex: 0 })
        ]
      }
    ) })
  ] });
}, $o = (s) => {
  const n = J(ie), e = n.options, t = Se();
  return Oe(() => {
    u("[RGEasyView mounted]"), n.setEasyViewCanvas(t.current);
  }, []), /* @__PURE__ */ m("div", { class: `rel-easy-view ${e.showEasyView ? "rel-easy-view-active" : ""}`, children: /* @__PURE__ */ m("canvas", { ref: t, style: "width: 100%;height: 100%;" }) });
}, Ro = (s) => {
  const n = J(ie);
  J(me);
  const e = Se(), o = (() => ({
    width: `${n.options.canvasSize.width}px`,
    height: `${n.options.canvasSize.height}px`,
    marginLeft: `${n.options.canvasOffset.x}px`,
    marginTop: `${n.options.canvasOffset.y}px`,
    backgroundColor: "transparent",
    transform: `scale(${n.options.canvasZoom / 100},${n.options.canvasZoom / 100})`
  }))();
  Oe(() => {
    console.log("[debug][RelationGraph-canvas] ready!"), u("[RGCanvas mounted]"), n.setCanvasDom(e.current);
  }, []);
  const i = (c) => {
    n.onCanvasDragStart(c);
  }, a = (c) => {
    c.preventDefault(), n.onContextmenu(c);
  };
  return /* @__PURE__ */ Z(
    "div",
    {
      style: {
        width: "100%",
        height: "100%",
        backgroundImage: `url(${n.options.backgroundImage})`,
        backgroundColor: n.options.backgroundColor
      },
      className: [
        "rel-map",
        n.options.canvasOpacity === 1 ? "rel-map-ready" : void 0,
        n.options.layoutClassName,
        n.options.backgroundImageNoRepeat ? "rel-map-background-norepeat" : ""
      ].join(" "),
      onContextMenu: (c) => {
        a(c);
      },
      onMouseDown: (c) => {
        i(c);
      },
      onTouchStart: (c) => {
        i(c);
      },
      children: [
        /* @__PURE__ */ m($o, {}),
        /* @__PURE__ */ Z(
          "div",
          {
            ref: e,
            style: o,
            className: "rel-map-canvas",
            children: [
              /* @__PURE__ */ m("div", { className: "rel-canvas-slot rel-canvas-slot-behind", children: s.canvasPlugSlot && /* @__PURE__ */ m(s.canvasPlugSlot, { relationGraph: n }) }),
              /* @__PURE__ */ m(Po, { nodeSlot: s.nodeSlot, lineSlot: s.lineSlot, expandHolderSlot: s.expandHolderSlot }),
              /* @__PURE__ */ m("div", { className: "rel-canvas-slot rel-canvas-slot-above", children: s.canvasPlugAboveSlot })
            ]
          }
        )
      ]
    }
  );
}, Io = ({ nodeSlot: s }) => {
  const n = J(ie), e = n && n.options;
  return e && (e.creatingNodePlot || e.creatingSelection) ? /* @__PURE__ */ m("div", { className: "rel-operate", children: /* @__PURE__ */ Z("div", { style: { position: "relative" }, children: [
    e.creatingNodePlot && e.showTemplateNode && /* @__PURE__ */ m(
      St,
      {
        nodeProps: e.newNodeTemplate,
        NodeSlot: s
      }
    ),
    e.creatingSelection && /* @__PURE__ */ m(
      "div",
      {
        className: "rel-selection",
        style: {
          left: e.selectionView.x + "px",
          top: e.selectionView.y + "px",
          width: e.selectionView.width + "px",
          height: e.selectionView.height + "px"
        }
      }
    )
  ] }) }) : /* @__PURE__ */ m("div", {});
}, Vo = () => {
  const s = J(ie), n = s && s.options, e = (t) => {
    s.clickGraphMask(t);
  };
  return /* @__PURE__ */ m(Pe, { children: n && /* @__PURE__ */ m(
    "div",
    {
      className: `rel-graph-loading ${n.graphLoading ? "" : "rel-graph-loading-hide"}`,
      onClick: (t) => {
        e(t);
      },
      children: /* @__PURE__ */ Z("div", { className: "rel-graph-loading-message", children: [
        /* @__PURE__ */ m("svg", { className: "c-graph-loading-icon", "aria-hidden": "true", children: /* @__PURE__ */ m("use", { xlinkHref: "#icon-lianjiezhong" }) }),
        "Loading..."
      ] })
    }
  ) });
}, Wo = (s, n) => {
  const [e, t] = vt({ instance: null }), o = Se(), i = Se();
  Oe(() => {
    console.log("[debug][RelationGraph] ready!"), oo("react");
    const h = s.relationGraphCore ? new s.relationGraphCore(s.options, gt(s)) : new Oo(s.options, gt(s));
    return i.current = h, h.setUpdateViewHook(a), u("setDom:", o.current), h.setDom(o.current), h.ready(), a(), de && de.on && de.on("change", c), o.current && o.current.addEventListener("wheel", l, { passive: !1, capture: !0 }), () => {
      o.current && o.current.removeEventListener("wheel", l), de && de.off && de.off("change", c);
    };
  }, []), Ut(n, () => ({
    getInstance() {
      return i.current;
    },
    async setOptions(h, d) {
      await i.current.setOptions(h), a(), d && d(i.current);
    },
    async setJsonData(h, d, f) {
      arguments.length === 2 && typeof d == "function" && (f = d, d = !0), await i.current.setJsonData(
        h,
        !0
      ), await i.current.refresh(!1), a(), f && f(i.current);
    },
    async appendJsonData(h, d, f) {
      arguments.length === 2 && typeof d == "function" && (f = d, d = !0), await i.current.appendJsonData(h, !0), a(), f && f(i.current);
    },
    setLayouter(h) {
      i.current.setLayouter(h), a();
    },
    onGraphResize() {
      i.current.refreshNVAnalysisInfo(), a();
    },
    refresh() {
      i.current.refresh();
    },
    focusRootNode() {
      i.current.focusRootNode(), a();
    },
    focusNodeById(h) {
      i.current.focusNodeById(h), a();
    },
    getNodeById(h) {
      return i.current.getNodeById(h);
    },
    removeNodeById(h) {
      return i.current.removeNodeById(h);
    },
    getNodes() {
      return i.current.getNodes();
    },
    getLinks() {
      return i.current.getLinks();
    },
    getGraphJsonData() {
      return i.current.getGraphJsonData();
    },
    getGraphJsonOptions() {
      return i.current.getGraphJsonOptions();
    },
    updateView() {
      a();
    }
  }), [i.current]);
  const a = (h) => {
    t({ instance: h || i.current });
  };
  i.current && i.current.setUpdateViewHook(a);
  const c = () => {
    i.current.fullscreen(de.isFullscreen);
  }, l = (h) => {
    i.current.onMouseWheel(h), a();
  }, r = e && e.instance && e.instance.options;
  return /* @__PURE__ */ m(Pe, { children: /* @__PURE__ */ m(Kt, { value: i.current, children: /* @__PURE__ */ m(Qt, { value: a, children: /* @__PURE__ */ Z(
    "div",
    {
      ref: o,
      className: "relation-graph",
      style: { width: "100%", height: "100%" },
      children: [
        r && r.showDebugPanel && /* @__PURE__ */ m(Mo, {}),
        r && r.allowShowMiniToolBar === !0 && (s.toolBarSlot ? /* @__PURE__ */ m(s.toolBarSlot, { relationGraph: e.instance }) : /* @__PURE__ */ m(ko, {})),
        r && r.allowShowMiniView === !0 && (s.miniViewSlot ? /* @__PURE__ */ m(s.miniViewSlot, { relationGraph: e.instance }) : /* @__PURE__ */ m(No, {})),
        r && (s.graphPlugSlot ? /* @__PURE__ */ m(s.graphPlugSlot, { relationGraph: e.instance }) : /* @__PURE__ */ m("div", { className: "rel-graph-plug" })),
        r && /* @__PURE__ */ m(
          Ro,
          {
            nodeSlot: s.nodeSlot,
            lineSlot: s.lineSlot,
            canvasPlugSlot: s.canvasPlugSlot,
            canvasPlugAboveSlot: s.children,
            expandHolderSlot: s.expandHolderSlot
          }
        ),
        /* @__PURE__ */ m(Io, { nodeSlot: s.nodeSlot }),
        /* @__PURE__ */ m(Vo, {})
      ]
    }
  ) }) }) });
}, Uo = Ee.forwardRef(Wo);
export {
  Uo as default
};
